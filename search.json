[
  {
    "objectID": "solutions/2023/02.html",
    "href": "solutions/2023/02.html",
    "title": "Day 2: Cube Conundrum",
    "section": "",
    "text": "Reference",
    "crumbs": [
      "2023",
      "Day 2: Cube Conundrum"
    ]
  },
  {
    "objectID": "solutions/2023/02.html#part-one",
    "href": "solutions/2023/02.html#part-one",
    "title": "Day 2: Cube Conundrum",
    "section": "Part One",
    "text": "Part One\n\nlibrary(tidyverse)\n\nextract_number &lt;- function(x) {\n    as.integer(str_extract(string = x, pattern = \"\\\\d+\"))\n}\n\nextract_color &lt;- function(x, color) {\n    out &lt;- extract_number(str_extract(x, pattern = paste(\"\\\\d+\", color)))\n    \n    coalesce(out, 0)\n}\n\npossible_extraction &lt;- function(extraction) {\n    limits &lt;- c(red = 12, green = 13, blue = 14)\n    \n    comparison &lt;- names(limits) |&gt; \n        map_int(\\(color) extract_color(extraction, color))\n    \n    comparison &lt;- comparison &lt;= limits\n    \n    reduce(comparison, `&`)\n}\n\npossible_game &lt;- function(game) {\n    game |&gt; \n        str_split_1(pattern = \"; \") |&gt; \n        map_lgl(possible_extraction) |&gt; \n        reduce(`&`)\n}\n\ntibble(original = read_lines(file = \"inputs/2023/02.txt\")) |&gt; \n    separate_wider_delim(original, delim = \": \", names = c(\"game_number\", \"game\")) |&gt; \n    mutate(game_number   = extract_number(game_number),\n           possible_game = map_lgl(game, possible_game)) |&gt; \n    filter(possible_game) |&gt; \n    summarise(game_number_sum = sum(game_number)) |&gt; \n    pull(game_number_sum) |&gt; \n    cat()\n## 2204",
    "crumbs": [
      "2023",
      "Day 2: Cube Conundrum"
    ]
  },
  {
    "objectID": "solutions/2023/02.html#part-one-1",
    "href": "solutions/2023/02.html#part-one-1",
    "title": "Day 2: Cube Conundrum",
    "section": "Part One",
    "text": "Part One\n\ngame_max_color &lt;- function(game, color) {\n    str_extract_all(game, pattern = paste(\"\\\\d+\", color)) |&gt; \n        map(extract_number) |&gt; \n        unlist() |&gt; \n        max()\n}\n\ngame_power &lt;- function(game) {\n    c(\"red\", \"green\", \"blue\") |&gt; \n        map_int(\\(color) game_max_color(game, color)) |&gt; \n        prod()\n}\n\ntibble(original = read_lines(file = \"inputs/2023/02.txt\")) |&gt; \n    separate_wider_delim(original, delim = \": \", names = c(\"game_number\", \"game\")) |&gt; \n    mutate(game_power = map_int(game, game_power)) |&gt; \n    summarise(game_power_sum = sum(game_power)) |&gt; \n    pull(game_power_sum) |&gt; \n    cat()\n## 71036",
    "crumbs": [
      "2023",
      "Day 2: Cube Conundrum"
    ]
  },
  {
    "objectID": "solutions/2022/04.html",
    "href": "solutions/2022/04.html",
    "title": "Day 4: Camp Cleanup",
    "section": "",
    "text": "Reference\nlibrary(tidyverse)\n\ninput &lt;- read_csv(file = \"inputs/2022/04.txt\", col_names = c(\"elf1\", \"elf2\"))",
    "crumbs": [
      "2022",
      "Day 4: Camp Cleanup"
    ]
  },
  {
    "objectID": "solutions/2022/04.html#part-one",
    "href": "solutions/2022/04.html#part-one",
    "title": "Day 4: Camp Cleanup",
    "section": "Part One",
    "text": "Part One\n\nSolutionFull Table\n\n\n\nelfs &lt;- input |&gt; \n    \n    separate_wider_delim(col = elf1, delim = \"-\", names = c(\"elf1_min\", \"elf1_max\")) |&gt; \n    separate_wider_delim(col = elf2, delim = \"-\", names = c(\"elf2_min\", \"elf2_max\")) |&gt; \n    \n    mutate(across(.cols = everything(), .fns = as.integer))\n\ncontains &lt;- function(a_min, a_max, b_min, b_max) {\n    a_contains_b &lt;- a_min &lt;= b_min & b_max &lt;= a_max\n    b_contains_a &lt;- b_min &lt;= a_min & a_max &lt;= b_max\n\n    return(a_contains_b | b_contains_a)\n}\n\ncontain &lt;- elfs |&gt;     \n    mutate(contains = pmap_lgl(.l = list(elf1_min, elf1_max, elf2_min, elf2_max), .f = contains))\n\ncontain |&gt; \n    summarise(n_contain = sum(contains)) |&gt; \n    pull(n_contain) |&gt; \n    cat()\n## 448",
    "crumbs": [
      "2022",
      "Day 4: Camp Cleanup"
    ]
  },
  {
    "objectID": "solutions/2022/04.html#part-two",
    "href": "solutions/2022/04.html#part-two",
    "title": "Day 4: Camp Cleanup",
    "section": "Part Two",
    "text": "Part Two\n\nSolutionFull Table\n\n\n\noverlaps &lt;- function(a_min, a_max, b_min, b_max) {\n    if (contains(a_min, a_max, b_min, b_max)) return(TRUE)\n    \n    a_min_in_b &lt;- between(a_min, b_min, b_max)\n    a_max_in_b &lt;- between(a_max, b_min, b_max)\n\n    return(a_min_in_b | a_max_in_b)\n}\n\noverlap &lt;- elfs |&gt;     \n    mutate(overlaps = pmap_lgl(.l = list(elf1_min, elf1_max, elf2_min, elf2_max), .f = overlaps))\n\noverlap |&gt; \n    summarise(n_overlap = sum(overlaps)) |&gt; \n    pull(n_overlap) |&gt; \n    cat()\n## 794",
    "crumbs": [
      "2022",
      "Day 4: Camp Cleanup"
    ]
  },
  {
    "objectID": "solutions/2022/02.html",
    "href": "solutions/2022/02.html",
    "title": "Day 2: Rock Paper Scissors",
    "section": "",
    "text": "Reference",
    "crumbs": [
      "2022",
      "Day 2: Rock Paper Scissors"
    ]
  },
  {
    "objectID": "solutions/2022/02.html#part-one",
    "href": "solutions/2022/02.html#part-one",
    "title": "Day 2: Rock Paper Scissors",
    "section": "Part One",
    "text": "Part One\n\nlibrary(tidyverse)\n\ninput &lt;- read_lines(file = \"inputs/2022/02.txt\")\n\nguide &lt;- tibble(original = input) |&gt; \n    separate_wider_delim(cols = original,\n                         delim = \" \",\n                         names = c(\"opponent\", \"me\")) |&gt; \n    mutate(opponent = case_match(opponent,\n                                 \"A\" ~ \"Rock\",\n                                 \"B\" ~ \"Paper\",\n                                 \"C\" ~ \"Scissors\"),\n           me       = case_match(me,\n                                 \"X\" ~ \"Rock\",\n                                 \"Y\" ~ \"Paper\",\n                                 \"Z\" ~ \"Scissors\"))\n\nscore &lt;- function(opponent, me) {\n    if (me == \"Rock\")\n        score &lt;- 1 + case_match(opponent,\n                               \"Rock\"     ~ 3,\n                               \"Paper\"    ~ 0,\n                               \"Scissors\" ~ 6)\n    \n    else if (me == \"Paper\")\n        score &lt;- 2 + case_match(opponent, \n                                \"Rock\"     ~ 6,\n                                \"Paper\"    ~ 3,\n                                \"Scissors\" ~ 0)\n    \n    else if (me == \"Scissors\")\n        score &lt;- 3 + case_match(opponent,\n                                \"Rock\"     ~ 0,\n                                \"Paper\"    ~ 6,\n                                \"Scissors\" ~ 3)\n    \n    return(score)\n}\n\nguide |&gt; \n    mutate(score = map2_int(opponent, me, score)) |&gt; \n    summarise(total = sum(score)) |&gt; \n    pull(total) |&gt; \n    cat()\n## 12458",
    "crumbs": [
      "2022",
      "Day 2: Rock Paper Scissors"
    ]
  },
  {
    "objectID": "solutions/2022/02.html#part-two",
    "href": "solutions/2022/02.html#part-two",
    "title": "Day 2: Rock Paper Scissors",
    "section": "Part Two",
    "text": "Part Two\n\nguide &lt;- tibble(original = input) |&gt; \n    separate_wider_delim(cols = original,\n                         delim = \" \",\n                         names = c(\"opponent\", \"outcome\")) |&gt; \n    mutate(opponent = case_match(opponent,\n                                 \"A\" ~ \"Rock\",\n                                 \"B\" ~ \"Paper\",\n                                 \"C\" ~ \"Scissors\"),\n           outcome  = case_match(outcome,\n                                 \"X\" ~ \"lose\",\n                                 \"Y\" ~ \"draw\",\n                                 \"Z\" ~ \"win\"))\n\nme &lt;- function(opponent, outcome) {\n    if (opponent == \"Rock\")\n        me &lt;- case_match(outcome,\n                         \"lose\" ~ \"Scissors\",\n                         \"draw\" ~ \"Rock\",\n                         \"win\"  ~ \"Paper\")\n    \n    else if (opponent == \"Paper\")\n        me &lt;- case_match(outcome,\"lose\" ~ \"Rock\",\n                         \"draw\" ~ \"Paper\",\n                         \"win\"  ~ \"Scissors\")\n    \n    else if (opponent == \"Scissors\")\n        me &lt;- case_match(outcome,\n                         \"lose\" ~ \"Paper\",\n                         \"draw\" ~ \"Scissors\",\n                         \"win\"  ~ \"Rock\")\n    \n    return(me)\n}\n\nguide |&gt; \n    mutate(me    = map2_chr(opponent, outcome, me),\n           score = map2_int(opponent, me, score)) |&gt; \n    summarise(total = sum(score)) |&gt; \n    pull(total) |&gt; \n    cat()\n## 12683",
    "crumbs": [
      "2022",
      "Day 2: Rock Paper Scissors"
    ]
  },
  {
    "objectID": "solutions/2021/03.html",
    "href": "solutions/2021/03.html",
    "title": "Day 3: Binary Diagnostic",
    "section": "",
    "text": "Reference",
    "crumbs": [
      "2021",
      "Day 3: Binary Diagnostic"
    ]
  },
  {
    "objectID": "solutions/2021/03.html#part-one",
    "href": "solutions/2021/03.html#part-one",
    "title": "Day 3: Binary Diagnostic",
    "section": "Part One",
    "text": "Part One\n\nlibrary(tidyverse)\n\nmost_common &lt;- function(x) {\n    ux &lt;- unique(x)\n    ux[which.max(tabulate(match(x, ux)))]\n}\n\nleast_common &lt;- function(x) {\n    ux &lt;- unique(x)\n    ux[which.min(tabulate(match(x, ux)))]\n}\n\ninput &lt;- read_lines(file = \"inputs/2021/03.txt\")\n\nwidths &lt;- rep(1, 12) # each line has 12 digits\nnames &lt;- map2_chr(rep(\"d\", 12), 1:12, paste0)\nnames(widths) &lt;- names\n\ndigits &lt;- tibble(original = input) |&gt; \n    separate_wider_position(cols = original, widths = widths)\n\ngamma_rate &lt;- digits |&gt;\n    map_chr(most_common) |&gt; \n    paste0(collapse = \"\") |&gt; \n    strtoi(base = 2)\n\nepsilon_rate &lt;- digits |&gt;\n    map_chr(least_common) |&gt; \n    paste0(collapse = \"\")|&gt; \n    strtoi(base = 2)\n\ncat(gamma_rate * epsilon_rate)\n## 3009600",
    "crumbs": [
      "2021",
      "Day 3: Binary Diagnostic"
    ]
  },
  {
    "objectID": "solutions/2021/03.html#part-two",
    "href": "solutions/2021/03.html#part-two",
    "title": "Day 3: Binary Diagnostic",
    "section": "Part Two",
    "text": "Part Two\n\nmost_common &lt;- function(x) {\n    ux &lt;- sort(unique(x))\n    \n    table &lt;- tabulate(match(x, ux))\n    \n    # if 0 and 1 are equally common, keep values with a 1\n    # in the position being considered\n    if (table[1] == table[2]) return(ux[2])\n    \n    else return(ux[which.max(table)])\n}\n\nleast_common &lt;- function(x) {\n    ux &lt;- sort(unique(x))\n    \n    table &lt;- tabulate(match(x, ux))\n    \n    # if 0 and 1 are equally common, keep values with a 0\n    # in the position being considered\n    if (table[1] == table[2]) return(ux[1])\n    \n    else return(ux[which.min(table)])\n}\n\noxygen_generator_rating &lt;- digits\n\nfor (i in names) {\n    value &lt;- oxygen_generator_rating |&gt;\n        select(all_of(i)) |&gt;\n        map_chr(most_common)\n    \n    oxygen_generator_rating &lt;- oxygen_generator_rating |&gt;\n        filter(.data[[i]] == value)\n    \n    # if only one number left, stop\n    if (nrow(oxygen_generator_rating) == 1) break\n}\n\noxygen_generator_rating &lt;- oxygen_generator_rating |&gt;\n    paste0(collapse = \"\")|&gt;\n    strtoi(base = 2)\n\nCO2_scrubber_rating &lt;- digits\n\nfor (i in names) {\n    value &lt;- CO2_scrubber_rating |&gt;\n        select(all_of(i)) |&gt;\n        map_chr(least_common)\n    \n    CO2_scrubber_rating &lt;- CO2_scrubber_rating |&gt;\n        filter(.data[[i]] == value)\n    \n    # if only one number left, stop\n    if (nrow(CO2_scrubber_rating) == 1) break\n}\n\nCO2_scrubber_rating &lt;- CO2_scrubber_rating |&gt;\n    paste0(collapse = \"\")|&gt;\n    strtoi(base = 2)\n\ncat(oxygen_generator_rating * CO2_scrubber_rating)\n## 6940518",
    "crumbs": [
      "2021",
      "Day 3: Binary Diagnostic"
    ]
  },
  {
    "objectID": "solutions/2021/01.html",
    "href": "solutions/2021/01.html",
    "title": "Day 1: Sonar Sweep",
    "section": "",
    "text": "Reference",
    "crumbs": [
      "2021",
      "Day 1: Sonar Sweep"
    ]
  },
  {
    "objectID": "solutions/2021/01.html#part-one",
    "href": "solutions/2021/01.html#part-one",
    "title": "Day 1: Sonar Sweep",
    "section": "Part One",
    "text": "Part One\n\nlibrary(tidyverse)\n\ninput &lt;- read_lines(file = \"inputs/2021/01.txt\") |&gt; as.integer()\n\ncat(sum(diff(input) &gt; 0))\n## 1184",
    "crumbs": [
      "2021",
      "Day 1: Sonar Sweep"
    ]
  },
  {
    "objectID": "solutions/2021/01.html#part-two",
    "href": "solutions/2021/01.html#part-two",
    "title": "Day 1: Sonar Sweep",
    "section": "Part Two",
    "text": "Part Two\n\nlibrary(slider)\n\nnew_input &lt;- slide_sum(input, after = 2, complete = TRUE)\ncat(sum(diff(new_input) &gt; 0, na.rm = TRUE))\n## 1158",
    "crumbs": [
      "2021",
      "Day 1: Sonar Sweep"
    ]
  },
  {
    "objectID": "solutions/2020/01.html",
    "href": "solutions/2020/01.html",
    "title": "Day 1: Report Repair",
    "section": "",
    "text": "Reference",
    "crumbs": [
      "2020",
      "Day 1: Report Repair"
    ]
  },
  {
    "objectID": "solutions/2020/01.html#part-one",
    "href": "solutions/2020/01.html#part-one",
    "title": "Day 1: Report Repair",
    "section": "Part One",
    "text": "Part One\n\nlibrary(tidyverse)\n\ninput &lt;- read_lines(file = \"inputs/2020/01.txt\") |&gt; as.integer()\n\nfor (i in 1:(length(input)-1)) {\n    for (j in (i+1):length(input)) {\n        if (input[i] + input[j] == 2020) cat(input[i] * input[j])\n    }\n}\n## 956091",
    "crumbs": [
      "2020",
      "Day 1: Report Repair"
    ]
  },
  {
    "objectID": "solutions/2020/01.html#part-two",
    "href": "solutions/2020/01.html#part-two",
    "title": "Day 1: Report Repair",
    "section": "Part Two",
    "text": "Part Two\n\nfor (i in 1:(length(input)-2)) {\n    for (j in (i+1):length(input)-1) {\n        for (k in (j+1):length(input)) {\n        if (input[i] + input[j] + input[k] == 2020)\n            cat(input[i] * input[j] * input[k])\n        }\n    }\n}\n## 79734368",
    "crumbs": [
      "2020",
      "Day 1: Report Repair"
    ]
  },
  {
    "objectID": "solutions/2019/01.html",
    "href": "solutions/2019/01.html",
    "title": "Day 1: The Tyranny of the Rocket Equation",
    "section": "",
    "text": "Reference",
    "crumbs": [
      "2019",
      "Day 1: The Tyranny of the Rocket Equation"
    ]
  },
  {
    "objectID": "solutions/2019/01.html#part-one",
    "href": "solutions/2019/01.html#part-one",
    "title": "Day 1: The Tyranny of the Rocket Equation",
    "section": "Part One",
    "text": "Part One\n\nSolutionFull Table\n\n\n\nlibrary(tidyverse)\n\ncalculate_fuel &lt;- function(mass) floor(mass / 3) - 2\n\ninput &lt;- read_csv(file = \"inputs/2019/01.txt\", col_names = \"mass\") |&gt; \n    mutate(fuel = map_dbl(mass, calculate_fuel))\n\ninput |&gt; \n    summarise(total_fuel = sum(fuel)) |&gt; \n    pull(total_fuel) |&gt; \n    cat()\n## 3457681\n\n\n\n\n# look at the full table\ninput |&gt; print(n = nrow(input))\n## # A tibble: 100 × 2\n##       mass  fuel\n##      &lt;dbl&gt; &lt;dbl&gt;\n##   1 118868 39620\n##   2  88841 29611\n##   3 133680 44558\n##   4 148066 49353\n##   5  70887 23627\n##   6  93213 31069\n##   7 124243 41412\n##   8  92767 30920\n##   9  71322 23772\n##  10  86793 28929\n##  11  53650 17881\n##  12 102703 34232\n##  13 146958 48984\n##  14  53031 17675\n##  15 148282 49425\n##  16 124989 41661\n##  17  74375 24789\n##  18 122044 40679\n##  19 122693 40895\n##  20  74204 24732\n##  21  74869 24954\n##  22  81803 27265\n##  23 124436 41476\n##  24  68495 22829\n##  25  74865 24953\n##  26  70765 23586\n##  27  81537 27177\n##  28  61376 20456\n##  29 145342 48445\n##  30 137159 45717\n##  31 115230 38408\n##  32 119293 39762\n##  33 147126 49040\n##  34 130191 43395\n##  35 131330 43774\n##  36 122891 40961\n##  37 135407 45133\n##  38 116334 38776\n##  39 130325 43439\n##  40 138521 46171\n##  41  71955 23983\n##  42  53806 17933\n##  43 122260 40751\n##  44 102573 34189\n##  45  70032 23342\n##  46  75981 25325\n##  47 111555 37183\n##  48 135654 45216\n##  49  50805 16933\n##  50 122186 40726\n##  51 138172 46055\n##  52  96422 32138\n##  53 124781 41591\n##  54  55894 18629\n##  55  54337 18110\n##  56 149926 49973\n##  57  63809 21267\n##  58 146163 48719\n##  59  55131 18375\n##  60  55796 18596\n##  61  92771 30921\n##  62  80288 26760\n##  63 111619 37204\n##  64 134602 44865\n##  65  82245 27413\n##  66  72505 24166\n##  67 117209 39067\n##  68  92383 30792\n##  69 149101 49698\n##  70 135399 45131\n##  71 112166 37386\n##  72 134000 44664\n##  73  88771 29588\n##  74  63963 21319\n##  75 103731 34575\n##  76  74915 24969\n##  77 146347 48780\n##  78 125390 41794\n##  79 126249 42081\n##  80 131534 43842\n##  81 142038 47344\n##  82  55327 18440\n##  83  58784 19592\n##  84  85003 28332\n##  85  65909 21967\n##  86  89879 29957\n##  87 128715 42903\n##  88 138559 46184\n##  89 146209 48734\n##  90 145040 48344\n##  91 116032 38675\n##  92 130046 43346\n##  93 131664 43886\n##  94 125899 41964\n##  95 141918 47304\n##  96  88426 29473\n##  97  50488 16827\n##  98  67943 22645\n##  99  79677 26557\n## 100  94858 31617",
    "crumbs": [
      "2019",
      "Day 1: The Tyranny of the Rocket Equation"
    ]
  },
  {
    "objectID": "solutions/2019/01.html#part-two",
    "href": "solutions/2019/01.html#part-two",
    "title": "Day 1: The Tyranny of the Rocket Equation",
    "section": "Part Two",
    "text": "Part Two\n\nSolutionFull Table\n\n\n\ncalculate_fuel_adj &lt;- function(mass) {\n    \n    total &lt;- calculate_fuel(mass)\n    \n    repeat{\n        new &lt;- calculate_fuel(total[length(total)])\n        \n        if (new &gt; 0) total &lt;- c(total, new) else break\n    }\n    \n    return(sum(total))\n}\n\ninput &lt;- input |&gt; \n    mutate(fuel_adj = map_dbl(mass, calculate_fuel_adj))\n\ninput |&gt; \n    summarise(total_fuel_adj = sum(fuel_adj)) |&gt; \n    pull(total_fuel_adj) |&gt; \n    cat()\n## 5183653\n\n\n\n\n# look at the full table\ninput |&gt; print(n = nrow(input))\n## # A tibble: 100 × 3\n##       mass  fuel fuel_adj\n##      &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;\n##   1 118868 39620    59402\n##   2  88841 29611    44387\n##   3 133680 44558    66808\n##   4 148066 49353    74001\n##   5  70887 23627    35412\n##   6  93213 31069    46574\n##   7 124243 41412    62088\n##   8  92767 30920    46351\n##   9  71322 23772    35629\n##  10  86793 28929    43366\n##  11  53650 17881    26795\n##  12 102703 34232    51317\n##  13 146958 48984    73447\n##  14  53031 17675    26486\n##  15 148282 49425    74108\n##  16 124989 41661    62464\n##  17  74375 24789    37157\n##  18 122044 40679    60989\n##  19 122693 40895    61313\n##  20  74204 24732    37070\n##  21  74869 24954    37404\n##  22  81803 27265    40869\n##  23 124436 41476    62184\n##  24  68495 22829    34214\n##  25  74865 24953    37401\n##  26  70765 23586    35352\n##  27  81537 27177    40738\n##  28  61376 20456    30657\n##  29 145342 48445    72639\n##  30 137159 45717    68546\n##  31 115230 38408    57582\n##  32 119293 39762    59614\n##  33 147126 49040    73530\n##  34 130191 43395    65063\n##  35 131330 43774    65633\n##  36 122891 40961    61412\n##  37 135407 45133    67669\n##  38 116334 38776    58134\n##  39 130325 43439    65127\n##  40 138521 46171    69229\n##  41  71955 23983    35946\n##  42  53806 17933    26872\n##  43 122260 40751    61097\n##  44 102573 34189    51255\n##  45  70032 23342    34985\n##  46  75981 25325    37959\n##  47 111555 37183    55747\n##  48 135654 45216    67795\n##  49  50805 16933    25373\n##  50 122186 40726    61059\n##  51 138172 46055    69053\n##  52  96422 32138    48178\n##  53 124781 41591    62358\n##  54  55894 18629    27917\n##  55  54337 18110    27137\n##  56 149926 49973    74927\n##  57  63809 21267    31873\n##  58 146163 48719    73048\n##  59  55131 18375    27536\n##  60  55796 18596    27866\n##  61  92771 30921    46354\n##  62  80288 26760    40113\n##  63 111619 37204    55779\n##  64 134602 44865    67267\n##  65  82245 27413    41091\n##  66  72505 24166    36222\n##  67 117209 39067    58571\n##  68  92383 30792    46160\n##  69 149101 49698    74517\n##  70 135399 45131    67665\n##  71 112166 37386    56050\n##  72 134000 44664    66967\n##  73  88771 29588    44352\n##  74  63963 21319    31951\n##  75 103731 34575    51834\n##  76  74915 24969    37425\n##  77 146347 48780    73140\n##  78 125390 41794    62664\n##  79 126249 42081    63093\n##  80 131534 43842    65734\n##  81 142038 47344    70985\n##  82  55327 18440    27633\n##  83  58784 19592    29359\n##  84  85003 28332    42469\n##  85  65909 21967    32924\n##  86  89879 29957    44906\n##  87 128715 42903    64325\n##  88 138559 46184    69247\n##  89 146209 48734    73071\n##  90 145040 48344    72485\n##  91 116032 38675    57983\n##  92 130046 43346    64989\n##  93 131664 43886    65799\n##  94 125899 41964    62918\n##  95 141918 47304    70927\n##  96  88426 29473    44181\n##  97  50488 16827    25215\n##  98  67943 22645    33940\n##  99  79677 26557    39808\n## 100  94858 31617    47398",
    "crumbs": [
      "2019",
      "Day 1: The Tyranny of the Rocket Equation"
    ]
  },
  {
    "objectID": "solutions/2018/01.html",
    "href": "solutions/2018/01.html",
    "title": "Day 1: Chronal Calibration",
    "section": "",
    "text": "Reference",
    "crumbs": [
      "2018",
      "Day 1: Chronal Calibration"
    ]
  },
  {
    "objectID": "solutions/2018/01.html#part-one",
    "href": "solutions/2018/01.html#part-one",
    "title": "Day 1: Chronal Calibration",
    "section": "Part One",
    "text": "Part One\n\nlibrary(tidyverse)\ninput &lt;- read_lines(file = \"inputs/2018/01.txt\") |&gt; as.integer()\n\ncat(sum(input))\n## 466",
    "crumbs": [
      "2018",
      "Day 1: Chronal Calibration"
    ]
  },
  {
    "objectID": "solutions/2018/01.html#part-two",
    "href": "solutions/2018/01.html#part-two",
    "title": "Day 1: Chronal Calibration",
    "section": "Part Two",
    "text": "Part Two\n\n# 136 found after some trials, using optimal value to optimize execution\nfrequencies &lt;- tibble(change = rep(input, times = 136),\n                      result = cumsum(change)) |&gt; \n    rowid_to_column(\"time\")\n\nfrequencies |&gt; \n    group_by(result) |&gt; \n    summarise(count = n(), second_time = nth(time, 2)) |&gt; \n    filter(count &gt; 1) |&gt; \n    arrange(second_time) |&gt; \n    head(1) |&gt; \n    pull(result) |&gt; \n    cat()\n## 750",
    "crumbs": [
      "2018",
      "Day 1: Chronal Calibration"
    ]
  },
  {
    "objectID": "solutions/2017/01.html",
    "href": "solutions/2017/01.html",
    "title": "Day 1: Inverse Captcha",
    "section": "",
    "text": "Reference",
    "crumbs": [
      "2017",
      "Day 1: Inverse Captcha"
    ]
  },
  {
    "objectID": "solutions/2017/01.html#part-one",
    "href": "solutions/2017/01.html#part-one",
    "title": "Day 1: Inverse Captcha",
    "section": "Part One",
    "text": "Part One\n\nlibrary(tidyverse)\n\ninput &lt;- read_lines(file = \"inputs/2017/01.txt\")\n\ninput &lt;- str_split_1(string = input, pattern = \"\") |&gt; as.integer()\n\ndigits &lt;- tibble(digit   = input,\n                 compare = c(input[-1], input[1])) |&gt; \n    mutate(match = if_else(digit == compare, digit, 0L))\n\ndigits |&gt; \n    summarise(total = sum(match)) |&gt; \n    pull(total) |&gt; \n    cat()\n## 1119",
    "crumbs": [
      "2017",
      "Day 1: Inverse Captcha"
    ]
  },
  {
    "objectID": "solutions/2017/01.html#part-two",
    "href": "solutions/2017/01.html#part-two",
    "title": "Day 1: Inverse Captcha",
    "section": "Part Two",
    "text": "Part Two\n\nmid &lt;- nrow(digits) / 2\n\ndigits &lt;- tibble(digit   = input,\n                 compare = c(input[-(1:mid)], input[1:mid])) |&gt;\n    mutate(match = if_else(digit == compare, digit, 0L))\n\ndigits |&gt;\n    summarise(total = sum(match)) |&gt;\n    pull(total) |&gt;\n    cat()\n## 1420",
    "crumbs": [
      "2017",
      "Day 1: Inverse Captcha"
    ]
  },
  {
    "objectID": "solutions/2016/06.html",
    "href": "solutions/2016/06.html",
    "title": "Day 6: Signals and Noise",
    "section": "",
    "text": "Reference\nlibrary(tidyverse)\n\ninput &lt;- read_csv(file = \"inputs/2016/06.txt\", col_names = \"original\")",
    "crumbs": [
      "2016",
      "Day 6: Signals and Noise"
    ]
  },
  {
    "objectID": "solutions/2016/06.html#part-one",
    "href": "solutions/2016/06.html#part-one",
    "title": "Day 6: Signals and Noise",
    "section": "Part One",
    "text": "Part One\n\nSolutionFull Table\n\n\n\nmode &lt;- function(x, na.rm = FALSE) {\n  if (na.rm) x &lt;- x[!is.na(x)]\n\n  ux &lt;- unique(x)\n  return(ux[which.max(tabulate(match(x, ux)))])\n}\n\nsplitted_strings &lt;- input |&gt; \n    mutate(char = str_split(string = original, pattern = \"\")) |&gt; \n    unnest_wider(col = char, names_sep = \"_\")\n\nsplitted_strings |&gt; \n    summarise(across(-original, mode)) |&gt; \n    unite(\"error_corrected\", everything(), sep = \"\") |&gt; \n    pull(error_corrected) |&gt; \n    cat()\n## xhnqpqql",
    "crumbs": [
      "2016",
      "Day 6: Signals and Noise"
    ]
  },
  {
    "objectID": "solutions/2016/06.html#part-two",
    "href": "solutions/2016/06.html#part-two",
    "title": "Day 6: Signals and Noise",
    "section": "Part Two",
    "text": "Part Two\n\nSolutionFull Table\n\n\n\nleast_common &lt;- function(x, na.rm = FALSE) {\n  if (na.rm) x &lt;- x[!is.na(x)]\n\n  ux &lt;- unique(x)\n  return(ux[which.min(tabulate(match(x, ux)))])\n}\n\nsplitted_strings |&gt; \n    summarise(across(-original, least_common)) |&gt; \n    unite(\"error_corrected\", everything(), sep = \"\") |&gt; \n    pull(error_corrected) |&gt; \n    cat()\n## brhailro",
    "crumbs": [
      "2016",
      "Day 6: Signals and Noise"
    ]
  },
  {
    "objectID": "solutions/2016/04.html",
    "href": "solutions/2016/04.html",
    "title": "Day 4: Security Through Obscurity",
    "section": "",
    "text": "Reference",
    "crumbs": [
      "2016",
      "Day 4: Security Through Obscurity"
    ]
  },
  {
    "objectID": "solutions/2016/04.html#part-one",
    "href": "solutions/2016/04.html#part-one",
    "title": "Day 4: Security Through Obscurity",
    "section": "Part One",
    "text": "Part One\n\nSolutionTests\n\n\n\nlibrary(tidyverse)\n\nchesum_eval &lt;- function(x) {\n    letters &lt;- x |&gt;\n        str_split_1(pattern = \"\") |&gt; \n        table() |&gt; \n        sort(decreasing = TRUE) |&gt; \n        names()\n    \n    return(paste0(letters[1:5], collapse = \"\"))\n}\n\n\ninput &lt;- read_csv(file = \"inputs/2016/04.txt\", col_names = \"original\") |&gt;\n    \n    mutate(sector_id      = str_extract(original,          pattern = \"[0-9]+\"),\n           checksum       = str_extract(original,          pattern = \"\\\\[[a-z]+\\\\]\"),\n           checksum       = str_remove_all(checksum,       pattern = \"\\\\[|\\\\]\"),\n           encrypted_name = str_remove_all(original,       pattern = \"\\\\[|\\\\]\"),\n           encrypted_name = str_remove(encrypted_name,     pattern = str_c(sector_id, checksum)),\n           encrypted_name = str_remove_all(encrypted_name, pattern = \"\\\\-\"),\n           sector_id      = as.numeric(sector_id))\n\ninput &lt;- input |&gt; \n    mutate(chesum_eval = map_chr(encrypted_name, chesum_eval),\n           test        = checksum == chesum_eval)\n\ninput |&gt; \n    filter(test == TRUE) |&gt;\n    summarise(total = sum(sector_id)) |&gt; \n    pull(total) |&gt; \n    cat()\n## 185371\n\n\n\n\nn &lt;- 1\n\nprint(input[n, \"original\"])\n## # A tibble: 1 × 1\n##   original                                 \n##   &lt;chr&gt;                                    \n## 1 bkwzkqsxq-tovvilokx-nozvyiwoxd-172[fstek]\nprint(input[n, \"checksum\"])\n## # A tibble: 1 × 1\n##   checksum\n##   &lt;chr&gt;   \n## 1 fstek\nprint(input[n, \"encrypted_name\"])\n## # A tibble: 1 × 1\n##   encrypted_name              \n##   &lt;chr&gt;                       \n## 1 bkwzkqsxqtovvilokxnozvyiwoxd\nprint(input[n, \"sector_id\"])\n## # A tibble: 1 × 1\n##   sector_id\n##       &lt;dbl&gt;\n## 1       172\nprint(input[n, \"chesum_eval\"])\n## # A tibble: 1 × 1\n##   chesum_eval\n##   &lt;chr&gt;      \n## 1 okvxi\nprint(input[n, \"test\"])\n## # A tibble: 1 × 1\n##   test \n##   &lt;lgl&gt;\n## 1 FALSE",
    "crumbs": [
      "2016",
      "Day 4: Security Through Obscurity"
    ]
  },
  {
    "objectID": "solutions/2016/04.html#part-two",
    "href": "solutions/2016/04.html#part-two",
    "title": "Day 4: Security Through Obscurity",
    "section": "Part Two",
    "text": "Part Two\n\nSolutionFull Table\n\n\n\ninput &lt;- input |&gt; \n    mutate(no_checksum = str_remove(original,  pattern = \"-[0-9]+\\\\[[a-z]+\\\\]\"))\n\ndecrypt &lt;- function(string, sector_id) {\n    decrypted &lt;- character(0)\n    \n    for (element in str_split_1(string, pattern = \"\")) {\n        if (element == \"-\")\n            decrypted &lt;- c(decrypted, \" \")\n        else {\n            index &lt;- (which(letters == element) + sector_id) %% 26\n            decrypted &lt;- c(decrypted, letters[index])\n        }\n    }\n    return(paste(decrypted, collapse = \"\"))\n}\n\ninput &lt;- input |&gt; \n    mutate(decrypted = map2_chr(no_checksum, sector_id, decrypt))\n\ninput |&gt; \n    filter(decrypted == \"northpole object storage\") |&gt; \n    pull(sector_id) |&gt; \n    cat()\n## 984\n\n\n\n\ninput |&gt; \n    select(sector_id, decrypted) |&gt; \n    print(n = nrow(input))\n## # A tibble: 980 × 2\n##     sector_id decrypted                                           \n##         &lt;dbl&gt; &lt;chr&gt;                                               \n##   1       172 rampaging jellybean deployment                      \n##   2       526 colorful chocolate engineering                      \n##   3       487 corrosive candy laboratory                          \n##   4       694 consumer grade candy containment                    \n##   5       837 rampaging projectile rabbit training                \n##   6       171 consumer grade flower acquisition                   \n##   7       813 colorful bunny purchasing                           \n##   8       570 rampaging flower marketing                          \n##   9       447 cryogenic basket operations                         \n##  10       734 corrosive scavenger hunt sales                      \n##  11       961 radioactive bunny workshop                          \n##  12       271 unstable basket customer service                    \n##  13       158 projectile bunny research                           \n##  14       318 radioactive plastic grass workshop                  \n##  15       427 military grade candy coating services               \n##  16       295 international chocolate receiving                   \n##  17       143 rampaging dye user testing                          \n##  18       224 classified rabbit development                       \n##  19       429 rampaging military grade candy coating engineering  \n##  20       992 radioactive basket training                         \n##  21       667 radioactive rabbit containment                      \n##  22       661 military grade scavenger hunt logistics             \n##  23       190 weaponied dye shipping                              \n##  24       512 biohaardous egg logistics                           \n##  25       886 cryogenic rabbit technology                         \n##  26       951 international dye logistics                         \n##  27       773 weaponied dye acquisition                           \n##  28       612 top secret rabbit purchasing                        \n##  29       940 unstable flower workshop                            \n##  30       718 biohaardous top secret scavenger hunt receiving     \n##  31       939 classified egg marketing                            \n##  32       852 projectile egg engineering                          \n##  33       952 unstable candy coating department                   \n##  34       391 corrosive flower training                           \n##  35       716 unstable chocolate customer service                 \n##  36       428 classified candy storage                            \n##  37       193 rampaging weaponied basket deployment               \n##  38       265 magnetic scavenger hunt marketing                   \n##  39       926 magnetic bunny analysis                             \n##  40       380 radioactive consumer grade egg purchasing           \n##  41       711 unstable flower training                            \n##  42       255 corrosive dye workshop                              \n##  43       931 unstable egg department                             \n##  44       384 corrosive scavenger hunt analysis                   \n##  45       628 unstable bunny deployment                           \n##  46       745 corrosive candy research                            \n##  47       380 weaponied plastic grass training                    \n##  48       168 classified candy coating department                 \n##  49       325 cryogenic candy storage                             \n##  50       122 projectile scavenger hunt engineering               \n##  51       233 rampaging dye engineering                           \n##  52       412 fuy unstable basket design                          \n##  53       690 top secret flower laboratory                        \n##  54       427 international candy services                        \n##  55       229 magnetic military grade egg storage                 \n##  56       500 fuy cryogenic basket laboratory                     \n##  57       147 fuy plastic grass user testing                      \n##  58       996 classified bunny storage                            \n##  59       278 weaponied chocolate operations                      \n##  60       116 projectile plastic grass logistics                  \n##  61       745 unstable flower design                              \n##  62       973 unstable chocolate analysis                         \n##  63       861 international dye containment                       \n##  64       480 international rabbit customer service               \n##  65       451 military grade biohaardous candy technology         \n##  66       698 biohaardous bunny acquisition                       \n##  67       840 classified rabbit engineering                       \n##  68       287 top secret jellybean training                       \n##  69       341 fuy basket user testing                             \n##  70       563 fuy dye reacquisition                               \n##  71       698 fuy egg shipping                                    \n##  72       149 unstable plastic grass design                       \n##  73       560 cryogenic scavenger hunt management                 \n##  74       874 weaponied rabbit operations                         \n##  75       952 unstable flower research                            \n##  76       253 colorful chocolate technology                       \n##  77       637 unstable dye research                               \n##  78       299 cryogenic flower sales                              \n##  79       621 classified dye storage                              \n##  80       678 military grade dye deployment                       \n##  81       458 consumer grade chocolate training                   \n##  82       311 international egg containment                       \n##  83       697 magnetic jellybean development                      \n##  84       709 classified candy reacquisition                      \n##  85       433 rampaging radioactive bunny containment             \n##  86       952 projectile candy coating containment                \n##  87       684 magnetic jellybean acquisition                      \n##  88       582 top secret projectile plastic grass research        \n##  89       565 military grade chocolate user testing               \n##  90       132 cryogenic jellybean workshop                        \n##  91       148 colorful bunny department                           \n##  92       366 top secret candy workshop                           \n##  93       748 military grade basket storage                       \n##  94       822 rampaging military grade candy coating operations   \n##  95       842 biohaardous flower customer service                 \n##  96       501 projectile dye design                               \n##  97       978 biohaardous chocolate deployment                    \n##  98       395 biohaardous rampaging flower storage                \n##  99       567 projectile basket acquisition                       \n## 100       534 weaponied dye receiving                             \n## 101       385 biohaardous jellybean development                   \n## 102       972 colorful projectile jellybean receiving             \n## 103       405 corrosive chocolate workshop                        \n## 104       675 international egg technology                        \n## 105       823 top secret jellybean research                       \n## 106       374 cryogenic bunny research                            \n## 107       403 international egg workshop                          \n## 108       714 magnetic plastic grass management                   \n## 109       805 military grade chocolate purchasing                 \n## 110       653 cryogenic jellybean operations                      \n## 111       628 corrosive basket logistics                          \n## 112       396 top secret chocolate marketing                      \n## 113       258 magnetic candy coating technology                   \n## 114       882 classified flower technology                        \n## 115       927 fuy candy research                                  \n## 116       861 international candy laboratory                      \n## 117       216 classified fuy chocolate analysis                   \n## 118       216 weaponied jellybean shipping                        \n## 119       794 colorful rabbit financing                           \n## 120       616 rampaging scavenger hunt reacquisition              \n## 121       550 fuy bunny storage                                   \n## 122       670 radioactive flower analysis                         \n## 123       323 military grade flower marketing                     \n## 124       448 biohaardous plastic grass training                  \n## 125       930 classified rabbit operations                        \n## 126       782 magnetic candy coating workshop                     \n## 127       138 radioactive flower shipping                         \n## 128       881 fuy chocolate reacquisition                         \n## 129       422 international scavenger hunt marketing              \n## 130       165 rampaging candy coating department                  \n## 131       434 projectile scavenger hunt reacquisition             \n## 132       524 colorful dye management                             \n## 133       916 projectile scavenger hunt acquisition               \n## 134       326 biohaardous candy services                          \n## 135       684 fuy scavenger hunt acquisition                      \n## 136       116 rampaging chocolate design                          \n## 137       391 fuy chocolate laboratory                            \n## 138       291 unstable basket marketing                           \n## 139       828 magnetic consumer grade basket user testing         \n## 140       928 biohaardous plastic grass customer service          \n## 141       672 magnetic flower operations                          \n## 142       562 unstable weaponied chocolate receiving              \n## 143       532 colorful bunny management                           \n## 144       506 international egg services                          \n## 145       563 consumer grade rabbit receiving                     \n## 146       900 biohaardous flower services                         \n## 147       374 magnetic chocolate shipping                         \n## 148       433 fuy flower receiving                                \n## 149       993 weaponied candy coating acquisition                 \n## 150       453 weaponied basket customer service                   \n## 151       823 biohaardous bunny workshop                          \n## 152       829 colorful basket storage                             \n## 153       201 corrosive candy technology                          \n## 154       266 top secret basket financing                         \n## 155       244 international jellybean deployment                  \n## 156       575 top secret plastic grass purchasing                 \n## 157       330 international egg laboratory                        \n## 158       949 corrosive scavenger hunt services                   \n## 159       890 classified plastic grass acquisition                \n## 160       355 unstable egg training                               \n## 161       441 corrosive basket user testing                       \n## 162       303 military grade egg research                         \n## 163       775 rampaging jellybean sales                           \n## 164       897 consumer grade dye development                      \n## 165       322 corrosive bunny engineering                         \n## 166       103 top secret basket management                        \n## 167       901 rampaging egg user testing                          \n## 168       833 classified candy coating research                   \n## 169       730 consumer grade candy technology                     \n## 170       272 international plastic grass sales                   \n## 171       194 weaponied projectile scavenger hunt analysis        \n## 172       424 unstable candy purchasing                           \n## 173       177 rampaging jellybean laboratory                      \n## 174       218 consumer grade scavenger hunt training              \n## 175       765 weaponied classified basket logistics               \n## 176       548 biohaardous flower technology                       \n## 177       207 projectile dye management                           \n## 178       943 military grade weaponied plastic grass research     \n## 179       548 cryogenic jellybean development                     \n## 180       177 magnetic flower workshop                            \n## 181       373 top secret candy deployment                         \n## 182       285 top secret jellybean management                     \n## 183       266 international scavenger hunt development            \n## 184       886 cryogenic basket financing                          \n## 185       188 projectile dye workshop                             \n## 186       954 biohaardous dye design                              \n## 187       246 corrosive rabbit sales                              \n## 188       287 cryogenic scavenger hunt design                     \n## 189       763 projectile flower acquisition                       \n## 190       720 military grade candy coating laboratory             \n## 191       848 international candy receiving                       \n## 192       662 cryogenic rabbit workshop                           \n## 193       660 corrosive plastic grass customer service            \n## 194       660 consumer grade egg laboratory                       \n## 195       464 rampaging scavenger hunt acquisition                \n## 196       231 international bunny reacquisition                   \n## 197       183 top secret candy purchasing                         \n## 198       476 cryogenic rabbit purchasing                         \n## 199       100 unstable flower containment                         \n## 200       569 radioactive bunny purchasing                        \n## 201       736 corrosive chocolate marketing                       \n## 202       673 magnetic plastic grass logistics                    \n## 203       524 biohaardous jellybean engineering                   \n## 204       766 biohaardous bunny receiving                         \n## 205       893 classified flower purchasing                        \n## 206       448 rampaging chocolate user testing                    \n## 207       228 weaponied chocolate department                      \n## 208       868 international candy storage                         \n## 209       640 international plastic grass containment             \n## 210       482 cryogenic rabbit reacquisition                      \n## 211       414 unstable rabbit user testing                        \n## 212       439 international basket receiving                      \n## 213       674 unstable bunny acquisition                          \n## 214       365 rampaging classified plastic grass acquisition      \n## 215       635 classified candy coating customer service           \n## 216       321 consumer grade plastic grass customer service       \n## 217       868 biohaardous chocolate sales                         \n## 218       648 consumer grade flower receiving                     \n## 219       482 international dye purchasing                        \n## 220       441 rampaging basket acquisition                        \n## 221       354 weaponied rampaging bunny receiving                 \n## 222       456 consumer grade weaponied rabbit user testing        \n## 223       875 unstable candy coating research                     \n## 224       216 classified military grade flower storage            \n## 225       439 projectile bunny purchasing                         \n## 226       402 weaponied rabbit logistics                          \n## 227       697 unstable chocolate acquisition                      \n## 228       653 biohaardous basket engineering                      \n## 229       557 weaponied egg containment                           \n## 230       756 unstable flower sales                               \n## 231       817 cryogenic basket management                         \n## 232       371 magnetic military grade candy coating storage       \n## 233       463 colorful candy technology                           \n## 234       979 international plastic grass development             \n## 235       562 weaponied jellybean acquisition                     \n## 236       826 consumer grade flower customer service              \n## 237       891 consumer grade flower operations                    \n## 238       790 consumer grade unstable candy coating services      \n## 239       617 cryogenic scavenger hunt operations                 \n## 240       670 colorful magnetic basket technology                 \n## 241       250 magnetic chocolate customer service                 \n## 242       381 fuy basket engineering                              \n## 243       373 top secret chocolate training                       \n## 244       552 military grade fuy candy user testing               \n## 245       421 cryogenic egg customer service                      \n## 246       160 unstable egg marketing                              \n## 247       564 weaponied candy coating sales                       \n## 248       529 weaponied jellybean logistics                       \n## 249       746 weaponied classified plastic grass acquisition      \n## 250       751 weaponied egg logistics                             \n## 251       478 military grade egg acquisition                      \n## 252       405 rampaging chocolate logistics                       \n## 253       722 magnetic scavenger hunt laboratory                  \n## 254       502 projectile basket analysis                          \n## 255       646 unstable dye receiving                              \n## 256       946 rampaging rabbit technology                         \n## 257       276 military grade scavenger hunt operations            \n## 258       870 cryogenic chocolate logistics                       \n## 259       743 rampaging chocolate research                        \n## 260       553 military grade rabbit financing                     \n## 261       773 consumer grade rampaging chocolate research         \n## 262       782 unstable candy receiving                            \n## 263       971 colorful flower financing                           \n## 264       556 top secret egg acquisition                          \n## 265       653 fuy basket analysis                                 \n## 266       244 rampaging jellybean receiving                       \n## 267       534 classified egg services                             \n## 268       687 biohaardous cryogenic rabbit research               \n## 269       692 corrosive chocolate research                        \n## 270       250 colorful egg operations                             \n## 271       329 weaponied bunny logistics                           \n## 272       958 weaponied jellybean containment                     \n## 273       138 fuy bunny deployment                                \n## 274       599 projectile candy technology                         \n## 275       128 corrosive candy coating customer service            \n## 276       252 fuy flower services                                 \n## 277       775 weaponied egg user testing                          \n## 278       319 radioactive scavenger hunt technology               \n## 279       210 magnetic chocolate research                         \n## 280       484 consumer grade candy engineering                    \n## 281       788 magnetic dye shipping                               \n## 282       391 projectile flower customer service                  \n## 283       888 unstable flower storage                             \n## 284       190 classified rabbit deployment                        \n## 285       458 unstable bunny shipping                             \n## 286       179 consumer grade candy coating training               \n## 287       852 colorful egg services                               \n## 288       509 international basket analysis                       \n## 289       101 consumer grade dye technology                       \n## 290       699 unstable basket workshop                            \n## 291       893 rampaging candy operations                          \n## 292       771 top secret candy financing                          \n## 293       388 consumer grade egg sales                            \n## 294       553 projectile jellybean design                         \n## 295       854 international bunny workshop                        \n## 296       366 projectile candy services                           \n## 297       241 magnetic plastic grass workshop                     \n## 298       270 rampaging dye logistics                             \n## 299       590 weaponied candy storage                             \n## 300       926 fuy dye customer service                            \n## 301       640 radioactive egg training                            \n## 302       789 projectile egg containment                          \n## 303       915 projectile international flower containment         \n## 304       946 cryogenic flower acquisition                        \n## 305       749 colorful jellybean marketing                        \n## 306       340 top secret basket receiving                         \n## 307       729 corrosive candy containment                         \n## 308       725 projectile dye operations                           \n## 309       505 unstable egg technology                             \n## 310       340 biohaardous plastic grass technology                \n## 311       283 colorful bunny marketing                            \n## 312       784 projectile basket shipping                          \n## 313       864 projectile dye laboratory                           \n## 314       545 international chocolate research                    \n## 315       932 projectile candy coating acquisition                \n## 316       815 consumer grade basket research                      \n## 317       410 top secret scavenger hunt technology                \n## 318       117 rampaging chocolate deployment                      \n## 319       744 military grade basket development                   \n## 320       246 international rabbit management                     \n## 321       720 magnetic bunny storage                              \n## 322       674 cryogenic dye deployment                            \n## 323       238 international rabbit logistics                      \n## 324       940 unstable flower analysis                            \n## 325       729 fuy candy coating reacquisition                     \n## 326       356 military grade dye storage                          \n## 327       874 unstable corrosive jellybean financing              \n## 328       187 radioactive candy coating user testing              \n## 329       465 fuy weaponied basket user testing                   \n## 330       181 projectile unstable scavenger hunt acquisition      \n## 331       601 international top secret egg marketing              \n## 332       301 biohaardous egg customer service                    \n## 333       290 biohaardous plastic grass acquisition               \n## 334       725 cryogenic plastic grass management                  \n## 335       608 cryogenic jellybean customer service                \n## 336       679 consumer grade candy user testing                   \n## 337       587 corrosive basket deployment                         \n## 338       655 fuy scavenger hunt department                       \n## 339       300 fuy bunny marketing                                 \n## 340       538 unstable bunny management                           \n## 341       248 consumer grade chocolate department                 \n## 342       960 projectile dye logistics                            \n## 343       183 colorful dye design                                 \n## 344       552 unstable candy coating reacquisition                \n## 345       296 radioactive top secret dye purchasing               \n## 346       746 colorful consumer grade basket management           \n## 347       298 cryogenic rabbit financing                          \n## 348       472 colorful bunny sales                                \n## 349       103 cryogenic scavenger hunt laboratory                 \n## 350       641 cryogenic candy engineering                         \n## 351       878 weaponied flower deployment                         \n## 352       926 top secret plastic grass design                     \n## 353       345 radioactive dye user testing                        \n## 354       186 rampaging rabbit deployment                         \n## 355       846 international chocolate purchasing                  \n## 356       352 classified candy coating containment                \n## 357       361 weaponied candy department                          \n## 358       278 fuy basket services                                 \n## 359       295 corrosive dye financing                             \n## 360       830 corrosive candy shipping                            \n## 361       145 radioactive basket containment                      \n## 362       900 cryogenic colorful candy coating operations         \n## 363       621 military grade scavenger hunt services              \n## 364       228 unstable projectile dye acquisition                 \n## 365       162 fuy dye sales                                       \n## 366       293 colorful rabbit training                            \n## 367       616 consumer grade rabbit analysis                      \n## 368       771 projectile rampaging jellybean receiving            \n## 369       115 classified magnetic plastic grass management        \n## 370       768 biohaardous cryogenic egg reacquisition             \n## 371       680 corrosive plastic grass reacquisition               \n## 372       886 radioactive candy sales                             \n## 373       638 unstable bunny workshop                             \n## 374       129 rampaging jellybean training                        \n## 375       355 corrosive classified candy coating department       \n## 376       200 fuy dye financing                                   \n## 377       335 military grade rabbit operations                    \n## 378       292 cryogenic basket research                           \n## 379       411 top secret candy coating logistics                  \n## 380       822 magnetic jellybean sales                            \n## 381       500 international basket training                       \n## 382       243 corrosive unstable chocolate shipping               \n## 383       310 consumer grade rabbit research                      \n## 384       956 colorful rampaging jellybean research               \n## 385       894 cryogenic chocolate analysis                        \n## 386       861 consumer grade jellybean sales                      \n## 387       982 weaponied chocolate financing                       \n## 388       747 magnetic classified candy operations                \n## 389       782 radioactive jellybean services                      \n## 390       150 rampaging plastic grass containment                 \n## 391       696 fuy scavenger hunt design                           \n## 392       507 military grade chocolate marketing                  \n## 393       403 cryogenic candy management                          \n## 394       850 biohaardous scavenger hunt shipping                 \n## 395       954 unstable flower logistics                           \n## 396       809 classified dye containment                          \n## 397       556 colorful jellybean department                       \n## 398       621 international candy design                          \n## 399       731 top secret fuy candy coating user testing           \n## 400       740 biohaardous scavenger hunt customer service         \n## 401       239 radioactive projectile plastic grass development    \n## 402       564 cryogenic plastic grass laboratory                  \n## 403       454 weaponied jellybean workshop                        \n## 404       472 international basket laboratory                     \n## 405       967 radioactive magnetic bunny management               \n## 406       681 radioactive rabbit services                         \n## 407       871 radioactive egg services                            \n## 408       291 magnetic bunny purchasing                           \n## 409       965 projectile plastic grass analysis                   \n## 410       137 military grade jellybean user testing               \n## 411       500 radioactive rabbit shipping                         \n## 412       704 cryogenic jellybean sales                           \n## 413       830 unstable corrosive scavenger hunt analysis          \n## 414       940 military grade jellybean training                   \n## 415       715 colorful corrosive candy coating services           \n## 416       957 consumer grade jellybean user testing               \n## 417       536 international military grade plastic grass receiving\n## 418       335 corrosive chocolate reacquisition                   \n## 419       387 colorful egg logistics                              \n## 420       978 colorful bunny laboratory                           \n## 421       240 international bunny design                          \n## 422       606 biohaardous dye department                          \n## 423       250 projectile bunny technology                         \n## 424       821 fuy rabbit development                              \n## 425       320 top secret classified rabbit purchasing             \n## 426       191 rampaging weaponied jellybean logistics             \n## 427       319 top secret egg laboratory                           \n## 428       391 military grade egg technology                       \n## 429       314 cryogenic candy analysis                            \n## 430       341 biohaardous consumer grade flower technology        \n## 431       252 unstable corrosive flower storage                   \n## 432       899 fuy jellybean technology                            \n## 433       861 magnetic dye containment                            \n## 434       947 radioactive basket shipping                         \n## 435       968 top secret candy coating research                   \n## 436       987 rampaging jellybean technology                      \n## 437       500 magnetic plastic grass deployment                   \n## 438       879 top secret egg design                               \n## 439       944 top secret candy coating management                 \n## 440       152 projectile plastic grass technology                 \n## 441       129 international basket customer service               \n## 442       225 international scavenger hunt deployment             \n## 443       989 radioactive plastic grass sales                     \n## 444       896 classified basket development                       \n## 445       326 unstable rabbit laboratory                          \n## 446       792 classified bunny laboratory                         \n## 447       369 radioactive candy coating management                \n## 448       224 magnetic basket storage                             \n## 449       542 rampaging egg storage                               \n## 450       419 consumer grade basket storage                       \n## 451       721 unstable bunny design                               \n## 452       515 cryogenic flower development                        \n## 453       474 radioactive plastic grass reacquisition             \n## 454       506 fuy unstable dye management                         \n## 455       403 corrosive egg engineering                           \n## 456       300 rampaging dye storage                               \n## 457       970 cryogenic bunny logistics                           \n## 458       481 biohaardous rabbit user testing                     \n## 459       957 classified fuy plastic grass receiving              \n## 460       985 military grade basket management                    \n## 461       353 classified plastic grass customer service           \n## 462       668 top secret projectile flower services               \n## 463       443 cryogenic rabbit services                           \n## 464       297 projectile top secret flower deployment             \n## 465       880 consumer grade candy coating analysis               \n## 466       749 international basket engineering                    \n## 467       246 projectile bunny shipping                           \n## 468       613 biohaardous dye user testing                        \n## 469       351 top secret bunny research                           \n## 470       311 fuy basket department                               \n## 471       892 colorful basket customer service                    \n## 472       243 radioactive jellybean workshop                      \n## 473       296 cryogenic rabbit laboratory                         \n## 474       827 cryogenic flower containment                        \n## 475       902 radioactive candy management                        \n## 476       984 northpole object storage                            \n## 477       387 projectile dye user testing                         \n## 478       137 biohaardous flower design                           \n## 479       596 military grade scavenger hunt management            \n## 480       470 colorful flower purchasing                          \n## 481       471 classified dye design                               \n## 482       944 weaponied rabbit design                             \n## 483       589 magnetic candy coating containment                  \n## 484       928 international rampaging dye services                \n## 485       147 colorful basket analysis                            \n## 486       440 cryogenic dye workshop                              \n## 487       633 international rampaging scavenger hunt acquisition  \n## 488       762 unstable plastic grass services                     \n## 489       706 top secret jellybean services                       \n## 490       359 cryogenic chocolate management                      \n## 491       144 top secret bunny purchasing                         \n## 492       424 biohaardous basket department                       \n## 493       590 cryogenic basket marketing                          \n## 494       758 unstable bunny services                             \n## 495       889 magnetic cryogenic scavenger hunt deployment        \n## 496       644 colorful egg deployment                             \n## 497       710 cryogenic rabbit deployment                         \n## 498       630 projectile candy coating engineering                \n## 499       890 rampaging cryogenic jellybean analysis              \n## 500       398 projectile flower purchasing                        \n## 501       456 military grade dye shipping                         \n## 502       110 biohaardous jellybean workshop                      \n## 503       509 colorful rabbit services                            \n## 504       665 projectile candy coating operations                 \n## 505       983 consumer grade radioactive flower financing         \n## 506       611 radioactive basket development                      \n## 507       159 projectile flower analysis                          \n## 508       517 military grade chocolate development                \n## 509       872 unstable candy containment                          \n## 510       186 unstable plastic grass research                     \n## 511       435 cryogenic biohaardous chocolate research            \n## 512       329 radioactive basket analysis                         \n## 513       603 biohaardous jellybean operations                    \n## 514       192 weaponied plastic grass laboratory                  \n## 515       605 rampaging egg management                            \n## 516       458 radioactive egg marketing                           \n## 517       314 unstable jellybean acquisition                      \n## 518       126 classified rabbit training                          \n## 519       297 colorful rabbit workshop                            \n## 520       251 corrosive dye technology                            \n## 521       698 top secret basket containment                       \n## 522       108 military grade dye acquisition                      \n## 523       908 military grade plastic grass financing              \n## 524       351 radioactive bunny user testing                      \n## 525       647 fuy flower engineering                              \n## 526       915 fuy flower operations                               \n## 527       530 rampaging basket storage                            \n## 528       683 colorful radioactive scavenger hunt receiving       \n## 529       723 biohaardous dye financing                           \n## 530       563 rampaging scavenger hunt laboratory                 \n## 531       259 international candy coating laboratory              \n## 532       847 magnetic egg containment                            \n## 533       696 top secret rampaging flower department              \n## 534       798 biohaardous egg deployment                          \n## 535       736 radioactive scavenger hunt storage                  \n## 536       758 colorful rabbit reacquisition                       \n## 537       385 fuy basket operations                               \n## 538       184 unstable scavenger hunt financing                   \n## 539       410 fuy plastic grass containment                       \n## 540       141 rampaging scavenger hunt development                \n## 541       641 projectile chocolate deployment                     \n## 542       294 biohaardous scavenger hunt laboratory               \n## 543       902 corrosive rabbit purchasing                         \n## 544       684 unstable candy coating financing                    \n## 545       117 military grade biohaardous flower storage           \n## 546       720 weaponied scavenger hunt services                   \n## 547       973 corrosive plastic grass shipping                    \n## 548       992 fuy dye marketing                                   \n## 549       203 weaponied flower research                           \n## 550       976 projectile basket operations                        \n## 551       313 weaponied plastic grass sales                       \n## 552       836 weaponied scavenger hunt analysis                   \n## 553       413 corrosive dye purchasing                            \n## 554       569 corrosive plastic grass deployment                  \n## 555       103 radioactive scavenger hunt containment              \n## 556       222 classified chocolate logistics                      \n## 557       921 corrosive basket purchasing                         \n## 558       882 biohaardous dye workshop                            \n## 559       248 unstable rabbit analysis                            \n## 560       314 military grade candy management                     \n## 561       148 top secret scavenger hunt storage                   \n## 562       670 weaponied military grade rabbit research            \n## 563       803 weaponied chocolate deployment                      \n## 564       603 magnetic basket financing                           \n## 565       204 projectile candy deployment                         \n## 566       741 weaponied plastic grass acquisition                 \n## 567       952 cryogenic flower financing                          \n## 568       282 consumer grade rabbit customer service              \n## 569       847 rampaging military grade plastic grass research     \n## 570       287 biohaardous candy technology                        \n## 571       340 biohaardous candy coating development               \n## 572       717 unstable egg containment                            \n## 573       931 military grade magnetic rabbit sales                \n## 574       278 radioactive plastic grass logistics                 \n## 575       827 weaponied bunny purchasing                          \n## 576       733 top secret unstable flower operations               \n## 577       570 weaponied basket design                             \n## 578       945 military grade basket shipping                      \n## 579       287 classified candy management                         \n## 580       564 rampaging chocolate department                      \n## 581       122 cryogenic dye department                            \n## 582       463 consumer grade dye services                         \n## 583       749 biohaardous flower research                         \n## 584       671 consumer grade egg operations                       \n## 585       118 magnetic flower shipping                            \n## 586       989 weaponied basket marketing                          \n## 587       354 top secret rabbit engineering                       \n## 588       626 rampaging chocolate acquisition                     \n## 589       352 classified jellybean containment                    \n## 590       654 unstable bunny training                             \n## 591       604 colorful plastic grass development                  \n## 592       533 international rabbit shipping                       \n## 593       669 top secret scavenger hunt management                \n## 594       345 fuy scavenger hunt technology                       \n## 595       928 unstable military grade plastic grass development   \n## 596       751 consumer grade plastic grass management             \n## 597       282 military grade fuy bunny management                 \n## 598       153 classified rabbit marketing                         \n## 599       765 radioactive jellybean research                      \n## 600       174 unstable chocolate technology                       \n## 601       891 classified flower design                            \n## 602       275 colorful candy storage                              \n## 603       828 military grade chocolate containment                \n## 604       873 military grade scavenger hunt workshop              \n## 605       793 weaponied candy workshop                            \n## 606       266 unstable egg research                               \n## 607       613 colorful projectile plastic grass engineering       \n## 608       752 top secret scavenger hunt purchasing                \n## 609       607 colorful unstable dye acquisition                   \n## 610       229 cryogenic plastic grass financing                   \n## 611       930 colorful candy customer service                     \n## 612       421 colorful jellybean management                       \n## 613       349 rampaging scavenger hunt shipping                   \n## 614       622 rampaging corrosive egg financing                   \n## 615       440 weaponied chocolate sales                           \n## 616       729 fuy egg receiving                                   \n## 617       399 corrosive dye engineering                           \n## 618       566 biohaardous military grade dye user testing         \n## 619       714 top secret plastic grass management                 \n## 620       792 rampaging candy coating laboratory                  \n## 621       680 cryogenic scavenger hunt analysis                   \n## 622       489 magnetic egg management                             \n## 623       917 cryogenic weaponied flower training                 \n## 624       294 projectile basket logistics                         \n## 625       772 unstable bunny reacquisition                        \n## 626       849 fuy plastic grass management                        \n## 627       220 fuy flower user testing                             \n## 628       637 corrosive jellybean workshop                        \n## 629       265 cryogenic candy development                         \n## 630       201 top secret scavenger hunt department                \n## 631       246 projectile chocolate research                       \n## 632       291 weaponied candy coating purchasing                  \n## 633       968 military grade scavenger hunt containment           \n## 634       328 top secret biohaardous rabbit technology            \n## 635       907 corrosive jellybean acquisition                     \n## 636       152 international candy coating purchasing              \n## 637       883 unstable flower operations                          \n## 638       329 scavenger hunt research                             \n## 639       550 biohaardous chocolate analysis                      \n## 640       201 radioactive rabbit customer service                 \n## 641       681 consumer grade basket services                      \n## 642       507 corrosive egg logistics                             \n## 643       750 cryogenic egg development                           \n## 644       108 classified plastic grass services                   \n## 645       581 fuy scavenger hunt workshop                         \n## 646       477 corrosive jellybean shipping                        \n## 647       811 corrosive egg design                                \n## 648       160 unstable basket receiving                           \n## 649       573 rampaging basket logistics                          \n## 650       761 consumer grade classified candy coating financing   \n## 651       336 cryogenic candy coating analysis                    \n## 652       933 international candy coating workshop                \n## 653       828 cryogenic projectile candy coating shipping         \n## 654       269 rampaging top secret flower shipping                \n## 655       270 magnetic candy sales                                \n## 656       807 corrosive chocolate user testing                    \n## 657       193 cryogenic scavenger hunt acquisition                \n## 658       282 magnetic dye training                               \n## 659       349 international dye laboratory                        \n## 660       978 magnetic flower marketing                           \n## 661       558 magnetic chocolate workshop                         \n## 662       301 international flower department                     \n## 663       607 colorful candy design                               \n## 664       865 biohaardous scavenger hunt purchasing               \n## 665       890 consumer grade egg workshop                         \n## 666       245 military grade weaponied rabbit storage             \n## 667       107 military grade plastic grass research               \n## 668       675 fuy corrosive rabbit engineering                    \n## 669       378 unstable scavenger hunt storage                     \n## 670       876 weaponied candy receiving                           \n## 671       725 classified candy containment                        \n## 672       670 fuy jellybean logistics                             \n## 673       245 projectile basket engineering                       \n## 674       645 colorful radioactive scavenger hunt engineering     \n## 675       563 military grade egg deployment                       \n## 676       576 international egg operations                        \n## 677       876 consumer grade chocolate marketing                  \n## 678       866 projectile flower management                        \n## 679       351 colorful jellybean acquisition                      \n## 680       654 unstable candy logistics                            \n## 681       417 military grade egg workshop                         \n## 682       768 fuy chocolate training                              \n## 683       214 unstable dye user testing                           \n## 684       455 rampaging plastic grass analysis                    \n## 685       868 consumer grade corrosive dye laboratory             \n## 686       145 international dye department                        \n## 687       309 rampaging egg containment                           \n## 688       388 consumer grade jellybean training                   \n## 689       133 unstable scavenger hunt customer service            \n## 690       114 unstable chocolate department                       \n## 691       412 corrosive scavenger hunt engineering                \n## 692       704 weaponied scavenger hunt containment                \n## 693       100 top secret rabbit storage                           \n## 694       829 projectile scavenger hunt containment               \n## 695       528 fuy candy management                                \n## 696       777 weaponied international plastic grass deployment    \n## 697       245 projectile international chocolate financing        \n## 698       152 unstable egg customer service                       \n## 699       558 corrosive rabbit analysis                           \n## 700       568 rampaging candy coating deployment                  \n## 701       794 unstable dye department                             \n## 702       632 military grade candy coating containment            \n## 703       684 magnetic candy coating deployment                   \n## 704       683 rampaging military grade basket design              \n## 705       292 consumer grade bunny acquisition                    \n## 706       677 classified jellybean management                     \n## 707       249 rampaging flower acquisition                        \n## 708       222 fuy top secret jellybean deployment                 \n## 709       603 consumer grade candy receiving                      \n## 710       385 consumer grade chocolate reacquisition              \n## 711       692 colorful weaponied egg deployment                   \n## 712       480 top secret basket shipping                          \n## 713       428 top secret rabbit design                            \n## 714       621 consumer grade bunny research                       \n## 715       345 consumer grade chocolate containment                \n## 716       892 biohaardous candy coating containment               \n## 717       233 international flower user testing                   \n## 718       593 unstable jellybean user testing                     \n## 719       131 colorful bunny reacquisition                        \n## 720       859 international egg training                          \n## 721       348 radioactive dye engineering                         \n## 722       772 classified chocolate reacquisition                  \n## 723       951 consumer grade biohaardous bunny customer service   \n## 724       644 weaponied bunny analysis                            \n## 725       628 magnetic dye technology                             \n## 726       729 colorful plastic grass user testing                 \n## 727       828 military grade unstable chocolate shipping          \n## 728       106 colorful plastic grass services                     \n## 729       641 unstable candy deployment                           \n## 730       854 colorful flower design                              \n## 731       750 consumer grade candy operations                     \n## 732       889 colorful bunny technology                           \n## 733       280 radioactive egg laboratory                          \n## 734       653 cryogenic rampaging rabbit laboratory               \n## 735       142 colorful chocolate services                         \n## 736       771 biohaardous dye customer service                    \n## 737       860 radioactive dye design                              \n## 738       773 projectile chocolate laboratory                     \n## 739       221 consumer grade basket operations                    \n## 740       132 international dye research                          \n## 741       545 colorful candy coating services                     \n## 742       700 biohaardous plastic grass analysis                  \n## 743       459 radioactive plastic grass research                  \n## 744       586 consumer grade plastic grass technology             \n## 745       632 colorful rabbit sales                               \n## 746       412 weaponied cryogenic plastic grass receiving         \n## 747       685 magnetic scavenger hunt deployment                  \n## 748       250 unstable rabbit deployment                          \n## 749       281 projectile candy research                           \n## 750       205 military grade rabbit receiving                     \n## 751       729 projectile egg analysis                             \n## 752       328 radioactive jellybean receiving                     \n## 753       961 consumer grade projectile bunny shipping            \n## 754       490 colorful bunny containment                          \n## 755       139 projectile biohaardous flower development           \n## 756       490 consumer grade scavenger hunt storage               \n## 757       862 colorful chocolate deployment                       \n## 758       586 rampaging military grade plastic grass technology   \n## 759       940 radioactive flower receiving                        \n## 760       283 top secret egg workshop                             \n## 761       782 classified rabbit containment                       \n## 762       110 unstable plastic grass customer service             \n## 763       792 rampaging egg analysis                              \n## 764       109 biohaardous dye deployment                          \n## 765       210 weaponied rabbit shipping                           \n## 766       872 magnetic candy coating development                  \n## 767       769 radioactive dye deployment                          \n## 768       657 top secret flower management                        \n## 769       699 projectile chocolate receiving                      \n## 770       841 radioactive chocolate training                      \n## 771       352 projectile basket customer service                  \n## 772       326 projectile chocolate logistics                      \n## 773       219 radioactive egg workshop                            \n## 774       897 corrosive egg operations                            \n## 775       375 unstable rabbit marketing                           \n## 776       574 international scavenger hunt research               \n## 777       640 fuy egg logistics                                   \n## 778       774 biohaardous scavenger hunt research                 \n## 779       219 weaponied unstable rabbit management                \n## 780       659 projectile chocolate management                     \n## 781       641 magnetic dye financing                              \n## 782       511 magnetic flower storage                             \n## 783       187 weaponied candy coating financing                   \n## 784       272 fuy egg financing                                   \n## 785       941 fuy candy acquisition                               \n## 786       705 magnetic classified plastic grass marketing         \n## 787       876 radioactive dye containment                         \n## 788       256 fuy scavenger hunt storage                          \n## 789       963 biohaardous rabbit acquisition                      \n## 790       350 weaponied cryogenic egg customer service            \n## 791       462 unstable candy coating design                       \n## 792       563 unstable radioactive plastic grass engineering      \n## 793       896 magnetic plastic grass marketing                    \n## 794       340 cryogenic projectile plastic grass training         \n## 795       210 cryogenic candy coating financing                   \n## 796       738 international bunny containment                     \n## 797       644 corrosive radioactive jellybean management          \n## 798       521 consumer grade chocolate workshop                   \n## 799       177 rampaging bunny receiving                           \n## 800       680 classified candy operations                         \n## 801       663 classified plastic grass reacquisition              \n## 802       356 radioactive flower marketing                        \n## 803       721 colorful scavenger hunt containment                 \n## 804       400 projectile basket deployment                        \n## 805       293 magnetic dye engineering                            \n## 806       578 international dye development                       \n## 807       111 corrosive weaponied jellybean design                \n## 808       246 rampaging flower sales                              \n## 809       434 projectile egg financing                            \n## 810       415 fuy bunny containment                               \n## 811       169 consumer grade rabbit technology                    \n## 812       723 projectile bunny training                           \n## 813       227 weaponied scavenger hunt department                 \n## 814       215 corrosive colorful chocolate financing              \n## 815       809 top secret jellybean operations                     \n## 816       792 radioactive chocolate storage                       \n## 817       570 consumer grade bunny deployment                     \n## 818       121 colorful scavenger hunt analysis                    \n## 819       680 colorful bunny services                             \n## 820       918 consumer grade plastic grass shipping               \n## 821       897 top secret scavenger hunt sales                     \n## 822       770 consumer grade bunny management                     \n## 823       998 magnetic plastic grass research                     \n## 824       774 weaponied candy coating laboratory                  \n## 825       302 unstable bunny financing                            \n## 826       692 cryogenic top secret candy coating purchasing       \n## 827       809 consumer grade jellybean analysis                   \n## 828       603 biohaardous jellybean marketing                     \n## 829       649 military grade egg analysis                         \n## 830       796 military grade egg user testing                     \n## 831       307 consumer grade basket analysis                      \n## 832       882 unstable chocolate workshop                         \n## 833       606 biohaardous plastic grass containment               \n## 834       200 colorful scavenger hunt research                    \n## 835       311 colorful candy coating engineering                  \n## 836       567 military grade chocolate storage                    \n## 837       923 magnetic candy user testing                         \n## 838       347 military grade candy coating management             \n## 839       522 classified chocolate user testing                   \n## 840       715 cryogenic bunny receiving                           \n## 841       113 rampaging bunny reacquisition                       \n## 842       804 consumer grade rabbit development                   \n## 843       226 unstable egg analysis                               \n## 844       281 top secret scavenger hunt user testing              \n## 845       809 international basket reacquisition                  \n## 846       276 weaponied international candy user testing          \n## 847       402 unstable egg workshop                               \n## 848       581 corrosive basket design                             \n## 849       619 biohaardous basket shipping                         \n## 850       788 top secret jellybean department                     \n## 851       164 projectile egg operations                           \n## 852       431 colorful dye financing                              \n## 853       909 radioactive rabbit user testing                     \n## 854       241 corrosive dye marketing                             \n## 855       381 cryogenic scavenger hunt training                   \n## 856       838 rampaging plastic grass purchasing                  \n## 857       828 cryogenic chocolate financing                       \n## 858       955 magnetic basket marketing                           \n## 859       937 top secret candy customer service                   \n## 860       781 weaponied flower engineering                        \n## 861       368 military grade bunny containment                    \n## 862       974 projectile plastic grass operations                 \n## 863       608 classified dye training                             \n## 864       801 consumer grade bunny purchasing                     \n## 865       213 magnetic weaponied candy development                \n## 866       745 radioactive candy coating shipping                  \n## 867       556 fuy cryogenic dye engineering                       \n## 868       363 consumer grade classified flower marketing          \n## 869       158 international flower storage                        \n## 870       642 weaponied plastic grass operations                  \n## 871       298 colorful plastic grass marketing                    \n## 872       746 unstable radioactive scavenger hunt financing       \n## 873       134 top secret egg analysis                             \n## 874       291 corrosive plastic grass workshop                    \n## 875       550 international rabbit receiving                      \n## 876       541 corrosive consumer grade candy coating reacquisition\n## 877       770 cryogenic candy coating shipping                    \n## 878       886 top secret weaponied egg research                   \n## 879       466 projectile chocolate development                    \n## 880       769 unstable bunny customer service                     \n## 881       742 military grade chocolate deployment                 \n## 882       592 projectile candy reacquisition                      \n## 883       802 rampaging projectile candy coating customer service \n## 884       931 international plastic grass deployment              \n## 885       841 projectile jellybean operations                     \n## 886       641 biohaardous bunny department                        \n## 887       805 cryogenic dye research                              \n## 888       372 fuy bunny technology                                \n## 889       788 biohaardous flower department                       \n## 890       614 biohaardous candy development                       \n## 891       173 unstable dye sales                                  \n## 892       319 colorful candy user testing                         \n## 893       677 classified corrosive candy coating purchasing       \n## 894       248 classified plastic grass operations                 \n## 895       500 projectile scavenger hunt analysis                  \n## 896       239 corrosive egg reacquisition                         \n## 897       534 military grade candy engineering                    \n## 898       659 consumer grade egg department                       \n## 899       979 projectile rabbit research                          \n## 900       880 projectile egg services                             \n## 901       698 international plastic grass research                \n## 902       241 unstable flower shipping                            \n## 903       670 top secret cryogenic candy coating user testing     \n## 904       272 radioactive plastic grass purchasing                \n## 905       886 classified scavenger hunt design                    \n## 906       770 consumer grade candy coating marketing              \n## 907       333 projectile flower technology                        \n## 908       406 military grade basket training                      \n## 909       895 rampaging candy coating logistics                   \n## 910       712 weaponied scavenger hunt workshop                   \n## 911       956 weaponied chocolate reacquisition                   \n## 912       541 rampaging plastic grass workshop                    \n## 913       246 cryogenic dye user testing                          \n## 914       602 cryogenic rabbit user testing                       \n## 915       138 cryogenic chocolate research                        \n## 916       705 biohaardous candy financing                         \n## 917       953 magnetic chocolate deployment                       \n## 918       786 corrosive candy reacquisition                       \n## 919       119 biohaardous rabbit receiving                        \n## 920       795 magnetic plastic grass reacquisition                \n## 921       452 fuy basket reacquisition                            \n## 922       124 projectile flower development                       \n## 923       915 international flower services                       \n## 924       918 weaponied plastic grass storage                     \n## 925       202 top secret candy coating technology                 \n## 926       835 colorful rabbit engineering                         \n## 927       798 rampaging dye services                              \n## 928       517 unstable plastic grass development                  \n## 929       507 biohaardous radioactive basket design               \n## 930       351 top secret candy training                           \n## 931       580 military grade rabbit acquisition                   \n## 932       245 colorful candy coating laboratory                   \n## 933       523 weaponied scavenger hunt design                     \n## 934       544 magnetic scavenger hunt services                    \n## 935       481 biohaardous military grade jellybean logistics      \n## 936       681 unstable consumer grade flower technology           \n## 937       220 fuy candy storage                                   \n## 938       748 colorful scavenger hunt services                    \n## 939       209 classified candy coating design                     \n## 940       973 radioactive egg financing                           \n## 941       974 radioactive dye training                            \n## 942       705 cryogenic international plastic grass financing     \n## 943       371 classified scavenger hunt management                \n## 944       232 fuy chocolate research                              \n## 945       596 top secret jellybean user testing                   \n## 946       343 classified bunny design                             \n## 947       107 magnetic rabbit technology                          \n## 948       656 cryogenic rabbit sales                              \n## 949       621 projectile candy design                             \n## 950       432 classified rabbit laboratory                        \n## 951       129 cryogenic rabbit customer service                   \n## 952       978 biohaardous bunny shipping                          \n## 953       211 top secret plastic grass containment                \n## 954       744 radioactive dye acquisition                         \n## 955       713 magnetic candy customer service                     \n## 956       140 colorful basket engineering                         \n## 957       387 weaponied candy engineering                         \n## 958       635 biohaardous candy design                            \n## 959       721 international flower design                         \n## 960       894 classified cryogenic scavenger hunt training        \n## 961       614 military grade bunny training                       \n## 962       894 international basket operations                     \n## 963       434 corrosive flower operations                         \n## 964       571 projectile egg management                           \n## 965       583 military grade egg operations                       \n## 966       402 cryogenic projectile jellybean receiving            \n## 967       337 colorful candy receiving                            \n## 968       636 plastic grass research                              \n## 969       509 colorful scavenger hunt financing                   \n## 970       176 rampaging jellybean purchasing                      \n## 971       644 rampaging dye workshop                              \n## 972       485 top secret cryogenic bunny workshop                 \n## 973       982 classified chocolate management                     \n## 974       733 classified chocolate containment                    \n## 975       334 cryogenic jellybean technology                      \n## 976       367 colorful jellybean reacquisition                    \n## 977       886 rampaging rabbit research                           \n## 978       361 weaponied dye containment                           \n## 979       808 magnetic egg acquisition                            \n## 980       379 weaponied egg receiving",
    "crumbs": [
      "2016",
      "Day 4: Security Through Obscurity"
    ]
  },
  {
    "objectID": "solutions/2016/02.html",
    "href": "solutions/2016/02.html",
    "title": "Day 2: Bathroom Security",
    "section": "",
    "text": "Reference",
    "crumbs": [
      "2016",
      "Day 2: Bathroom Security"
    ]
  },
  {
    "objectID": "solutions/2016/02.html#part-one",
    "href": "solutions/2016/02.html#part-one",
    "title": "Day 2: Bathroom Security",
    "section": "Part One",
    "text": "Part One\n\nlibrary(tidyverse)\n\ninput &lt;- read_lines(file = \"inputs/2016/02.txt\")\n\nmoves &lt;- list(\"U\" = c(-1, 0), \"D\" = c(1, 0), \"L\" = c(0, -1), \"R\" = c(0, 1))\n\nnumpad &lt;- matrix(c(NA,  NA,  NA,  NA, NA,\n                   NA, \"1\", \"2\", \"3\", NA,\n                   NA, \"4\", \"5\", \"6\", NA,\n                   NA, \"7\", \"8\", \"9\", NA,\n                   NA,  NA,  NA,  NA, NA), ncol = 5, byrow = TRUE)\n\ncurrent &lt;- c(2, 2)\n\ncode &lt;- character(0)\n\nfor (digit in input) {\n    for (move in str_split_1(digit, pattern = \"\")){\n        after &lt;- current + moves[[move]]\n        \n        if (!is.na(numpad[after[1], after[2]]))\n            current &lt;- after\n    }\n    \n    code &lt;- c(code, numpad[current[1], current[2]])\n}\n\ncat(paste0(code, collapse = \"\"))\n## 12578",
    "crumbs": [
      "2016",
      "Day 2: Bathroom Security"
    ]
  },
  {
    "objectID": "solutions/2016/02.html#part-two",
    "href": "solutions/2016/02.html#part-two",
    "title": "Day 2: Bathroom Security",
    "section": "Part Two",
    "text": "Part Two\n\npad &lt;- matrix(c(NA,  NA,  NA,  NA,  NA,  NA, NA,\n                NA,  NA,  NA, \"1\",  NA,  NA, NA,\n                NA,  NA, \"2\", \"3\", \"4\",  NA, NA,\n                NA, \"5\", \"6\", \"7\", \"8\", \"9\", NA,\n                NA,  NA, \"A\", \"B\", \"C\",  NA, NA,\n                NA,  NA,  NA, \"D\",  NA,  NA, NA,\n                NA,  NA,  NA,  NA,  NA,  NA, NA), ncol = 7, byrow = TRUE)\n\ncurrent &lt;- c(4, 2)\n\ncode &lt;- character(0)\n\nfor (digit in input) {\n    for (move in str_split_1(digit, pattern = \"\")){\n        after &lt;- current + moves[[move]]\n        \n        if (!is.na(pad[after[1], after[2]])) \n            current &lt;- after\n    }\n    \n    code &lt;- c(code, pad[current[1], current[2]])\n}\n\ncat(paste0(code, collapse = \"\"))\n## 516DD",
    "crumbs": [
      "2016",
      "Day 2: Bathroom Security"
    ]
  },
  {
    "objectID": "solutions/2015/06.html",
    "href": "solutions/2015/06.html",
    "title": "Day 6: Probably a Fire Hazard",
    "section": "",
    "text": "Reference\nlibrary(tidyverse)\n\ninput &lt;- read_csv2(file = \"inputs/2015/06.txt\", col_names = \"original\")",
    "crumbs": [
      "2015",
      "Day 6: Probably a Fire Hazard"
    ]
  },
  {
    "objectID": "solutions/2015/06.html#part-one",
    "href": "solutions/2015/06.html#part-one",
    "title": "Day 6: Probably a Fire Hazard",
    "section": "Part One",
    "text": "Part One\n\nSolutionFull TablePlot\n\n\n\ninstructions &lt;- input |&gt; \n    mutate(instruction = str_extract(string = original, pattern = \"toggle|turn on|turn off\"),\n           position    = str_extract_all(string = original, pattern = \"[0-9]+\")) |&gt; \n    unnest_wider(col = position, names_sep = \"_\") |&gt; \n    mutate(across(.cols = starts_with(\"position\"), .fns = \\(x) as.integer(x) + 1L)) |&gt; \n    mutate(x_range = map2(.x = position_1, .y = position_3, .f = \\(a, b) a:b),\n           y_range = map2(.x = position_2, .y = position_4, .f = \\(a, b) a:b))\n\n# initial grid\ngrid_start &lt;- matrix(FALSE, 1e3, 1e3)\n\naction &lt;- function(instruction, x_range, y_range, grid) {\n    if (instruction == \"toggle\")\n        grid[x_range, y_range] &lt;- !grid[x_range, y_range]\n    \n    else if (instruction == \"turn on\")\n        grid[x_range, y_range] &lt;- TRUE\n    \n    else if (instruction == \"turn off\")\n        grid[x_range, y_range] &lt;- FALSE\n    \n    return(grid)\n}\n\n# initialize list\ngrid_story &lt;- vector(mode = \"list\", length = nrow(instructions))\nfor (i in 1:nrow(instructions)) grid_story[[i]] &lt;- grid_start\n\n# perform instructions\nfor (i in seq_along(grid_story)) {\n    \n    if (i == 1) {\n        grid_story[[1]] &lt;- action(instruction = instructions[[1, \"instruction\"]][[1]],\n                                  x_range     = instructions[[1, \"x_range\"]][[1]],\n                                  y_range     = instructions[[1, \"y_range\"]][[1]],\n                                  grid        = grid_story[[1]])\n    } else {\n        grid_story[[i]] &lt;- action(instruction = instructions[[i, \"instruction\"]][[1]],\n                                  x_range     = instructions[[i, \"x_range\"]][[1]],\n                                  y_range     = instructions[[i, \"y_range\"]][[1]],\n                                  grid        = grid_story[[i-1]])\n    }\n}\n\ninstructions &lt;- instructions |&gt; \n    mutate(grid = grid_story,\n           n_on = map_int(grid, sum))\n\ninstructions |&gt; \n    tail(1) |&gt; \n    pull(n_on) |&gt; \n    cat()\n## 543903",
    "crumbs": [
      "2015",
      "Day 6: Probably a Fire Hazard"
    ]
  },
  {
    "objectID": "solutions/2015/06.html#part-two",
    "href": "solutions/2015/06.html#part-two",
    "title": "Day 6: Probably a Fire Hazard",
    "section": "Part Two",
    "text": "Part Two\n\nSolutionFull TablePlot\n\n\n\n# initial grid\ngrid_start &lt;- matrix(0, 1e3, 1e3)\n\nnew_action &lt;- function(instruction, x_range, y_range, grid) {\n    if (instruction == \"toggle\")\n        grid[x_range, y_range] &lt;- grid[x_range, y_range] + 2\n\n    else if (instruction == \"turn on\")\n        grid[x_range, y_range] &lt;- grid[x_range, y_range] + 1\n\n    else if (instruction == \"turn off\") \n        grid[x_range, y_range] &lt;- pmax(grid[x_range, y_range] - 1, 0)\n    \n    return(grid)\n}\n\n# initialize list\ngrid_story &lt;- vector(mode = \"list\", length = nrow(instructions))\nfor (i in 1:nrow(instructions)) grid_story[[i]] &lt;- grid_start\n\n# perform instructions\nfor (i in seq_along(grid_story)) {\n    \n    if (i == 1) {\n        grid_story[[1]] &lt;- new_action(instruction = instructions[[1, \"instruction\"]][[1]],\n                                      x_range     = instructions[[1, \"x_range\"]][[1]],\n                                      y_range     = instructions[[1, \"y_range\"]][[1]],\n                                      grid        = grid_story[[1]])\n    } else {\n        grid_story[[i]] &lt;- new_action(instruction = instructions[[i, \"instruction\"]][[1]],\n                                      x_range     = instructions[[i, \"x_range\"]][[1]],\n                                      y_range     = instructions[[i, \"y_range\"]][[1]],\n                                      grid        = grid_story[[i-1]])\n    }\n}\n\ninstructions &lt;- instructions |&gt; \n    mutate(grid       = grid_story,\n           brightness = map_int(grid, sum))\n\ninstructions |&gt; \n    tail(1) |&gt; \n    pull(brightness) |&gt; \n    cat()\n## 14687245",
    "crumbs": [
      "2015",
      "Day 6: Probably a Fire Hazard"
    ]
  },
  {
    "objectID": "solutions/2015/04.html",
    "href": "solutions/2015/04.html",
    "title": "Day 4: The Ideal Stocking Stuffer",
    "section": "",
    "text": "Reference\nlibrary(tidyverse)\n\ninput &lt;- \"bgvyzdsv\"\n\n# get md5 function from digest package\n# when using it remember to set serialize = FALSE\n# see help for more details\nmd5 &lt;- digest::getVDigest(algo = \"md5\")",
    "crumbs": [
      "2015",
      "Day 4: The Ideal Stocking Stuffer"
    ]
  },
  {
    "objectID": "solutions/2015/04.html#part-one",
    "href": "solutions/2015/04.html#part-one",
    "title": "Day 4: The Ideal Stocking Stuffer",
    "section": "Part One",
    "text": "Part One\n\nSolutionPartial Table\n\n\n\n# number of attempts, this is empirically enough\nn &lt;- 2.55e5\n\nmd5_hashes &lt;- tibble(number = 1:n,\n                     string = paste0(input, number),\n                     hash   = map_chr(.x = string, .f = \\(x) md5(x, serialize = FALSE)))\n\nmd5_hashes |&gt; \n    filter(str_sub(string = hash, start = 1, end = 5) == \"00000\") |&gt; \n    pull(number) |&gt; \n    cat()\n## 254575",
    "crumbs": [
      "2015",
      "Day 4: The Ideal Stocking Stuffer"
    ]
  },
  {
    "objectID": "solutions/2015/04.html#part-two",
    "href": "solutions/2015/04.html#part-two",
    "title": "Day 4: The Ideal Stocking Stuffer",
    "section": "Part Two",
    "text": "Part Two\n\nSolutionPartial Table\n\n\n\n# number of attempts, this is empirically enough\nn &lt;- 1.04e6\n\nmd5_hashes &lt;- tibble(number = 1:n,\n                     string = paste0(input, number),\n                     hash   = map_chr(.x = string, .f = \\(x) md5(x, serialize = FALSE))) \n    \nmd5_hashes |&gt; \n    filter(str_sub(string = hash, start = 1, end = 6) == \"000000\") |&gt; \n    pull(number) |&gt; \n    cat()\n## 1038736",
    "crumbs": [
      "2015",
      "Day 4: The Ideal Stocking Stuffer"
    ]
  },
  {
    "objectID": "solutions/2015/02.html",
    "href": "solutions/2015/02.html",
    "title": "Day 2: I Was Told There Would Be No Math",
    "section": "",
    "text": "Reference\nlibrary(tidyverse)\n\ninput &lt;- read_csv(file = \"inputs/2015/02.txt\", col_names = \"original\")",
    "crumbs": [
      "2015",
      "Day 2: I Was Told There Would Be No Math"
    ]
  },
  {
    "objectID": "solutions/2015/02.html#part-one",
    "href": "solutions/2015/02.html#part-one",
    "title": "Day 2: I Was Told There Would Be No Math",
    "section": "Part One",
    "text": "Part One\n\nSolutionFull Table\n\n\n\npaper_area &lt;- function(l, w, h) {\n    2L * (l*w + w*h + h*l) + min(l*w, w*h, h*l)\n}\n\npaper &lt;- input |&gt; \n\n    separate_wider_delim(cols        = original,\n                         names       = c(\"l\", \"w\", \"h\"),\n                         delim       = \"x\",\n                         cols_remove = FALSE) |&gt; \n\n    mutate(across(.cols = c(l, w, h), .fns = as.integer)) |&gt; \n\n    mutate(paper = pmap_int(.l = list(l, w, h), .f = paper_area))\n\npaper |&gt; \n    summarise(total_paper = sum(paper)) |&gt; \n    pull(total_paper) |&gt; \n    cat()\n## 1606483",
    "crumbs": [
      "2015",
      "Day 2: I Was Told There Would Be No Math"
    ]
  },
  {
    "objectID": "solutions/2015/02.html#part-two",
    "href": "solutions/2015/02.html#part-two",
    "title": "Day 2: I Was Told There Would Be No Math",
    "section": "Part Two",
    "text": "Part Two\n\nSolutionFull Table\n\n\n\nribbon_length &lt;- function(l, w, h) {\n    2L * (l+w+h - max(l, w, h)) + l*w*h\n}\n\npaper &lt;- paper |&gt;\n    mutate(ribbon = pmap_int(.l = list(l, w, h), .f = ribbon_length))\n\npaper |&gt; \n    summarise(total_ribbon = sum(ribbon)) |&gt; \n    pull(total_ribbon) |&gt; \n    cat()\n## 3842356",
    "crumbs": [
      "2015",
      "Day 2: I Was Told There Would Be No Math"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome",
    "section": "",
    "text": "This website contains my solutions to programming challenges proposed by Advent of Code"
  },
  {
    "objectID": "solutions/2015/01.html",
    "href": "solutions/2015/01.html",
    "title": "Day 1: Not Quite Lisp",
    "section": "",
    "text": "Reference\nlibrary(tidyverse)\n\ninput &lt;- read_lines(file = \"inputs/2015/01.txt\")",
    "crumbs": [
      "2015",
      "Day 1: Not Quite Lisp"
    ]
  },
  {
    "objectID": "solutions/2015/01.html#part-one",
    "href": "solutions/2015/01.html#part-one",
    "title": "Day 1: Not Quite Lisp",
    "section": "Part One",
    "text": "Part One\n\nSolutionFull Table\n\n\n\nmoves &lt;- tibble(input  = str_split_1(string = input, pattern = \"\"),\n                move   = case_match(input, \"(\" ~  1L, \")\" ~ -1L),\n                height = cumsum(move))\n\nmoves |&gt; \n    tail(1) |&gt; \n    pull(height) |&gt; \n    cat()\n## 232",
    "crumbs": [
      "2015",
      "Day 1: Not Quite Lisp"
    ]
  },
  {
    "objectID": "solutions/2015/01.html#part-two",
    "href": "solutions/2015/01.html#part-two",
    "title": "Day 1: Not Quite Lisp",
    "section": "Part Two",
    "text": "Part Two\n\nSolutionFull Table\n\n\n\nmoves &lt;- moves |&gt; \n    rowid_to_column(\"time\")\n\nmoves |&gt; \n    filter(height == -1) |&gt; \n    head(1) |&gt; \n    pull(time) |&gt; \n    cat()\n## 1783",
    "crumbs": [
      "2015",
      "Day 1: Not Quite Lisp"
    ]
  },
  {
    "objectID": "solutions/2015/01.html#plot",
    "href": "solutions/2015/01.html#plot",
    "title": "Day 1: Not Quite Lisp",
    "section": "Plot",
    "text": "Plot\n\nmoves |&gt; \n    ggplot(mapping = aes(x = time, y = height)) +\n    geom_line() +\n    theme_bw()",
    "crumbs": [
      "2015",
      "Day 1: Not Quite Lisp"
    ]
  },
  {
    "objectID": "solutions/2015/03.html",
    "href": "solutions/2015/03.html",
    "title": "Day 3: Perfectly Spherical Houses in a Vacuum",
    "section": "",
    "text": "Reference\nlibrary(tidyverse)\n\ninput &lt;- read_lines(file = \"inputs/2015/03.txt\")",
    "crumbs": [
      "2015",
      "Day 3: Perfectly Spherical Houses in a Vacuum"
    ]
  },
  {
    "objectID": "solutions/2015/03.html#part-one",
    "href": "solutions/2015/03.html#part-one",
    "title": "Day 3: Perfectly Spherical Houses in a Vacuum",
    "section": "Part One",
    "text": "Part One\n\nSolutionFull TablePlot\n\n\n\nmoves &lt;- tibble(input  = str_split_1(input, pattern = \"\"),\n                move_x = case_match(input, \"^\" ~  0, \"&gt;\" ~  1,\n                                           \"v\" ~  0, \"&lt;\" ~ -1),\n                move_y = case_match(input, \"^\" ~  1, \"&gt;\" ~  0,\n                                           \"v\" ~ -1, \"&lt;\" ~  0),\n                pos_x  = cumsum(move_x),\n                pos_y  = cumsum(move_y)) |&gt; \n    \n    add_row(pos_x = 0, pos_y = 0, .before = 1)\n    \nmoves |&gt; \n    distinct(pos_x, pos_y) |&gt; \n    nrow() |&gt;\n    cat()\n## 2081\n\n\n\n\n\n\n  \n\n\n\n\n\n\nmoves |&gt; \n    ggplot(mapping = aes(x = pos_x, y = pos_y)) +\n    geom_path() +\n    theme_bw()",
    "crumbs": [
      "2015",
      "Day 3: Perfectly Spherical Houses in a Vacuum"
    ]
  },
  {
    "objectID": "solutions/2015/03.html#part-two",
    "href": "solutions/2015/03.html#part-two",
    "title": "Day 3: Perfectly Spherical Houses in a Vacuum",
    "section": "Part Two",
    "text": "Part Two\n\nSolutionFull TablePlot\n\n\n\nmoves &lt;- moves |&gt; \n\n    mutate(who = case_when(row_number() - 1  == 0 ~ \"both\",\n                           row_number() %% 2 == 0 ~ \"santa\",\n                           .default = \"robo\")) |&gt; \n\n    mutate(pos_x = cumsum(move_x), pos_y = cumsum(move_y), .by = who) |&gt; \n\n    mutate(across(.cols = starts_with(\"pos\"), .fns = \\(x) coalesce(x, 0)))\n\nmoves |&gt;\n    distinct(pos_x, pos_y) |&gt;\n    nrow() |&gt;\n    cat()\n## 2341\n\n\n\n\n\n\n  \n\n\n\n\n\n\nmoves |&gt; \n    ggplot(mapping = aes(x = pos_x, y = pos_y, col = who)) +\n    geom_path() +\n    theme_bw()",
    "crumbs": [
      "2015",
      "Day 3: Perfectly Spherical Houses in a Vacuum"
    ]
  },
  {
    "objectID": "solutions/2015/05.html",
    "href": "solutions/2015/05.html",
    "title": "Day 5: Doesn’t He Have Intern-Elves For This?",
    "section": "",
    "text": "Reference\nlibrary(tidyverse)\n\ninput &lt;- read_csv(file = \"inputs/2015/05.txt\", col_names = \"original\")",
    "crumbs": [
      "2015",
      "Day 5: Doesn't He Have Intern-Elves For This?"
    ]
  },
  {
    "objectID": "solutions/2015/05.html#part-one",
    "href": "solutions/2015/05.html#part-one",
    "title": "Day 5: Doesn’t He Have Intern-Elves For This?",
    "section": "Part One",
    "text": "Part One\n\nSolutionFull Table\n\n\n\nhas_3more_vowels &lt;- function(string) {\n    str_count(string = string, pattern = \"[aeiou]\") &gt;= 3\n}\n\nhas_1more_double &lt;- function(string) {\n    str_count(string = string, pattern = \"([a-z])\\\\1\") &gt;= 1\n}\n\nhas_not_ab_cd_pq_xy &lt;- function(string) {\n    !str_detect(string = string, pattern = \"ab|cd|pq|xy\")\n}\n\nis_nice &lt;- function(string) {\n    has_3more_vowels(string) &\n    has_1more_double(string) &\n    has_not_ab_cd_pq_xy(string)\n}\n\nnice &lt;- input |&gt; \n    mutate(three_more_vowels = map_lgl(.x = original, .f = has_3more_vowels),\n           one_more_double   = map_lgl(.x = original, .f = has_1more_double),\n           not_ab_cd_pq_xy   = map_lgl(.x = original, .f = has_not_ab_cd_pq_xy),\n           nice              = map_lgl(.x = original, .f = is_nice))\n\nnice |&gt; \n    summarise(total_nice = sum(nice)) |&gt; \n    pull(total_nice) |&gt; \n    cat()\n## 258",
    "crumbs": [
      "2015",
      "Day 5: Doesn't He Have Intern-Elves For This?"
    ]
  },
  {
    "objectID": "solutions/2015/05.html#part-two",
    "href": "solutions/2015/05.html#part-two",
    "title": "Day 5: Doesn’t He Have Intern-Elves For This?",
    "section": "Part Two",
    "text": "Part Two\n\nSolutionFull Table\n\n\n\nhas_couple_twice &lt;- function(string) {\n    str_detect(string = string, pattern = \"[a-z]*([a-z]{2})[a-z]*\\\\1[a-z]*\")\n}\n\nhas_az_any_az &lt;- function(string) {\n    str_detect(string = string, pattern = \"([a-z])[a-z]\\\\1\")\n}\n\nis_nice_new &lt;- function(string) {\n    has_couple_twice(string) &\n    has_az_any_az(string)\n}\n\nnice_new &lt;- input |&gt; \n    mutate(couple_twice = map_lgl(.x = original, .f = has_couple_twice),\n           az_any_az    = map_lgl(.x = original, .f = has_az_any_az),\n           nice_new     = map_lgl(.x = original, .f = is_nice_new))\n\nnice_new |&gt; \n    summarise(total_nice = sum(nice_new)) |&gt; \n    pull(total_nice) |&gt; \n    cat()\n## 53",
    "crumbs": [
      "2015",
      "Day 5: Doesn't He Have Intern-Elves For This?"
    ]
  },
  {
    "objectID": "solutions/2016/01.html",
    "href": "solutions/2016/01.html",
    "title": "Day 1: No Time for a Taxicab",
    "section": "",
    "text": "Reference",
    "crumbs": [
      "2016",
      "Day 1: No Time for a Taxicab"
    ]
  },
  {
    "objectID": "solutions/2016/01.html#part-one",
    "href": "solutions/2016/01.html#part-one",
    "title": "Day 1: No Time for a Taxicab",
    "section": "Part One",
    "text": "Part One\n\nSolutionchange_direction() testsFull Table\n\n\n\nlibrary(tidyverse)\n\n# read input\ninput &lt;- read_lines(file = \"inputs/2016/01.txt\")\n\n# extract direction and length from input (first entry NA)\nmove &lt;- c(NA, str_split_1(string = input, pattern = \", \"))\n\nturn &lt;- str_extract(string = move, pattern = \"L|R\")\n\nlength &lt;- str_extract(string = move, pattern = \"[0-9]+\") |&gt; as.integer()\n\n# pre-allocate vectors for x/y-positions and x/y-direction\nposition_x &lt;- integer(length = length(move))\nposition_y &lt;- integer(length = length(move))\n\ndirection_x &lt;- integer(length = length(move))\ndirection_y &lt;- integer(length = length(move))\n\n# initialize position and direction (everything is pre-populated as 0)\n# position_x[1] &lt;- 0\n# position_y[1] &lt;- 0\n# \n# direction_x[1] &lt;- 0\ndirection_y[1] &lt;- 1L\n\nchange_direction &lt;- function(current_direction, turn) {\n    \n    if (turn == \"R\") new_direction &lt;- rev(current_direction) * c(1L, -1L)\n    if (turn == \"L\") new_direction &lt;- rev(current_direction) * c(-1L, 1L)\n    \n    return(new_direction)\n}\n\n# calculate directions and positions\nfor (i in 2:length(move)) {\n    # get current x/y-direction\n    current_direction &lt;- c(direction_x[i-1], direction_y[i-1])\n    \n    # calculate new direction\n    new_direction &lt;- change_direction(current_direction, turn[i])\n    \n    # update values\n    direction_x[i] &lt;- new_direction[1]\n    direction_y[i] &lt;- new_direction[2]\n    \n    # get current x/y-position\n    current_position &lt;- c(position_x[i-1], position_y[i-1])\n    \n    # calculate new position\n    new_position &lt;- current_position + new_direction * length[i]\n    \n    # update values\n    position_x[i] &lt;- new_position[1]\n    position_y[i] &lt;- new_position[2]    \n}\n\n# collect all vectors in a table\nmoves &lt;- tibble(move, turn, length,\n                direction_x, direction_y,\n                position_x, position_y) |&gt; \n    mutate(distance = abs(position_x) + abs(position_y))\n\n# result\nmoves |&gt; \n    select(distance) |&gt; \n    tail(1) |&gt; \n    pull() |&gt; \n    cat()\n## 288\n\n\n\n\n# tests for change_direction()\n\n# right turn\nchange_direction(c(0,1), \"R\")\n## [1] 1 0\nchange_direction(c(1,0), \"R\")\n## [1]  0 -1\nchange_direction(c(0,-1), \"R\")\n## [1] -1  0\nchange_direction(c(-1, 0), \"R\")\n## [1] 0 1\n\n# left turn\nchange_direction(c(0,1), \"L\")\n## [1] -1  0\nchange_direction(c(1,0), \"L\")\n## [1] 0 1\nchange_direction(c(0,-1), \"L\")\n## [1] 1 0\nchange_direction(c(-1, 0), \"L\")\n## [1]  0 -1\n\n\n\n\n# look at the full table\nmoves|&gt; print(n = 178)\n## # A tibble: 178 × 8\n##     move  turn  length direction_x direction_y position_x position_y distance\n##     &lt;chr&gt; &lt;chr&gt;  &lt;int&gt;       &lt;int&gt;       &lt;int&gt;      &lt;int&gt;      &lt;int&gt;    &lt;int&gt;\n##   1 &lt;NA&gt;  &lt;NA&gt;      NA           0           1          0          0        0\n##   2 R4    R          4           1           0          4          0        4\n##   3 R3    R          3           0          -1          4         -3        7\n##   4 L3    L          3           1           0          7         -3       10\n##   5 L2    L          2           0           1          7         -1        8\n##   6 L1    L          1          -1           0          6         -1        7\n##   7 R1    R          1           0           1          6          0        6\n##   8 L1    L          1          -1           0          5          0        5\n##   9 R2    R          2           0           1          5          2        7\n##  10 R3    R          3           1           0          8          2       10\n##  11 L5    L          5           0           1          8          7       15\n##  12 L5    L          5          -1           0          3          7       10\n##  13 R4    R          4           0           1          3         11       14\n##  14 L4    L          4          -1           0         -1         11       12\n##  15 R2    R          2           0           1         -1         13       14\n##  16 R4    R          4           1           0          3         13       16\n##  17 L3    L          3           0           1          3         16       19\n##  18 R3    R          3           1           0          6         16       22\n##  19 L3    L          3           0           1          6         19       25\n##  20 R3    R          3           1           0          9         19       28\n##  21 R4    R          4           0          -1          9         15       24\n##  22 R2    R          2          -1           0          7         15       22\n##  23 L1    L          1           0          -1          7         14       21\n##  24 R2    R          2          -1           0          5         14       19\n##  25 L3    L          3           0          -1          5         11       16\n##  26 L2    L          2           1           0          7         11       18\n##  27 L1    L          1           0           1          7         12       19\n##  28 R3    R          3           1           0         10         12       22\n##  29 R5    R          5           0          -1         10          7       17\n##  30 L1    L          1           1           0         11          7       18\n##  31 L4    L          4           0           1         11         11       22\n##  32 R2    R          2           1           0         13         11       24\n##  33 L4    L          4           0           1         13         15       28\n##  34 R3    R          3           1           0         16         15       31\n##  35 R1    R          1           0          -1         16         14       30\n##  36 R2    R          2          -1           0         14         14       28\n##  37 L5    L          5           0          -1         14          9       23\n##  38 R2    R          2          -1           0         12          9       21\n##  39 L189  L        189           0          -1         12       -180      192\n##  40 R5    R          5          -1           0          7       -180      187\n##  41 L5    L          5           0          -1          7       -185      192\n##  42 R52   R         52          -1           0        -45       -185      230\n##  43 R3    R          3           0           1        -45       -182      227\n##  44 L1    L          1          -1           0        -46       -182      228\n##  45 R4    R          4           0           1        -46       -178      224\n##  46 R5    R          5           1           0        -41       -178      219\n##  47 R1    R          1           0          -1        -41       -179      220\n##  48 R4    R          4          -1           0        -45       -179      224\n##  49 L1    L          1           0          -1        -45       -180      225\n##  50 L3    L          3           1           0        -42       -180      222\n##  51 R2    R          2           0          -1        -42       -182      224\n##  52 L2    L          2           1           0        -40       -182      222\n##  53 L3    L          3           0           1        -40       -179      219\n##  54 R4    R          4           1           0        -36       -179      215\n##  55 R3    R          3           0          -1        -36       -182      218\n##  56 L2    L          2           1           0        -34       -182      216\n##  57 L5    L          5           0           1        -34       -177      211\n##  58 R4    R          4           1           0        -30       -177      207\n##  59 R5    R          5           0          -1        -30       -182      212\n##  60 L2    L          2           1           0        -28       -182      210\n##  61 R2    R          2           0          -1        -28       -184      212\n##  62 L1    L          1           1           0        -27       -184      211\n##  63 L3    L          3           0           1        -27       -181      208\n##  64 R3    R          3           1           0        -24       -181      205\n##  65 L4    L          4           0           1        -24       -177      201\n##  66 R4    R          4           1           0        -20       -177      197\n##  67 R5    R          5           0          -1        -20       -182      202\n##  68 L1    L          1           1           0        -19       -182      201\n##  69 L1    L          1           0           1        -19       -181      200\n##  70 R3    R          3           1           0        -16       -181      197\n##  71 L5    L          5           0           1        -16       -176      192\n##  72 L2    L          2          -1           0        -18       -176      194\n##  73 R76   R         76           0           1        -18       -100      118\n##  74 R2    R          2           1           0        -16       -100      116\n##  75 R2    R          2           0          -1        -16       -102      118\n##  76 L1    L          1           1           0        -15       -102      117\n##  77 L3    L          3           0           1        -15        -99      114\n##  78 R189  R        189           1           0        174        -99      273\n##  79 L3    L          3           0           1        174        -96      270\n##  80 L4    L          4          -1           0        170        -96      266\n##  81 L1    L          1           0          -1        170        -97      267\n##  82 L3    L          3           1           0        173        -97      270\n##  83 R5    R          5           0          -1        173       -102      275\n##  84 R4    R          4          -1           0        169       -102      271\n##  85 L1    L          1           0          -1        169       -103      272\n##  86 R1    R          1          -1           0        168       -103      271\n##  87 L1    L          1           0          -1        168       -104      272\n##  88 L1    L          1           1           0        169       -104      273\n##  89 R2    R          2           0          -1        169       -106      275\n##  90 L4    L          4           1           0        173       -106      279\n##  91 R2    R          2           0          -1        173       -108      281\n##  92 L5    L          5           1           0        178       -108      286\n##  93 L5    L          5           0           1        178       -103      281\n##  94 L5    L          5          -1           0        173       -103      276\n##  95 R2    R          2           0           1        173       -101      274\n##  96 L4    L          4          -1           0        169       -101      270\n##  97 L5    L          5           0          -1        169       -106      275\n##  98 R4    R          4          -1           0        165       -106      271\n##  99 R4    R          4           0           1        165       -102      267\n## 100 R5    R          5           1           0        170       -102      272\n## 101 L5    L          5           0           1        170        -97      267\n## 102 R3    R          3           1           0        173        -97      270\n## 103 L1    L          1           0           1        173        -96      269\n## 104 L3    L          3          -1           0        170        -96      266\n## 105 L1    L          1           0          -1        170        -97      267\n## 106 L1    L          1           1           0        171        -97      268\n## 107 L3    L          3           0           1        171        -94      265\n## 108 L4    L          4          -1           0        167        -94      261\n## 109 R5    R          5           0           1        167        -89      256\n## 110 L3    L          3          -1           0        164        -89      253\n## 111 R5    R          5           0           1        164        -84      248\n## 112 R3    R          3           1           0        167        -84      251\n## 113 R3    R          3           0          -1        167        -87      254\n## 114 L5    L          5           1           0        172        -87      259\n## 115 L5    L          5           0           1        172        -82      254\n## 116 R3    R          3           1           0        175        -82      257\n## 117 R4    R          4           0          -1        175        -86      261\n## 118 L3    L          3           1           0        178        -86      264\n## 119 R3    R          3           0          -1        178        -89      267\n## 120 R1    R          1          -1           0        177        -89      266\n## 121 R3    R          3           0           1        177        -86      263\n## 122 R2    R          2           1           0        179        -86      265\n## 123 R2    R          2           0          -1        179        -88      267\n## 124 L1    L          1           1           0        180        -88      268\n## 125 R1    R          1           0          -1        180        -89      269\n## 126 L3    L          3           1           0        183        -89      272\n## 127 L3    L          3           0           1        183        -86      269\n## 128 L3    L          3          -1           0        180        -86      266\n## 129 L1    L          1           0          -1        180        -87      267\n## 130 R2    R          2          -1           0        178        -87      265\n## 131 L1    L          1           0          -1        178        -88      266\n## 132 R4    R          4          -1           0        174        -88      262\n## 133 R4    R          4           0           1        174        -84      258\n## 134 L1    L          1          -1           0        173        -84      257\n## 135 L1    L          1           0          -1        173        -85      258\n## 136 R3    R          3          -1           0        170        -85      255\n## 137 R3    R          3           0           1        170        -82      252\n## 138 R4    R          4           1           0        174        -82      256\n## 139 R1    R          1           0          -1        174        -83      257\n## 140 L5    L          5           1           0        179        -83      262\n## 141 L2    L          2           0           1        179        -81      260\n## 142 R2    R          2           1           0        181        -81      262\n## 143 R3    R          3           0          -1        181        -84      265\n## 144 R2    R          2          -1           0        179        -84      263\n## 145 L3    L          3           0          -1        179        -87      266\n## 146 R4    R          4          -1           0        175        -87      262\n## 147 L5    L          5           0          -1        175        -92      267\n## 148 R1    R          1          -1           0        174        -92      266\n## 149 R4    R          4           0           1        174        -88      262\n## 150 R5    R          5           1           0        179        -88      267\n## 151 R4    R          4           0          -1        179        -92      271\n## 152 L4    L          4           1           0        183        -92      275\n## 153 R1    R          1           0          -1        183        -93      276\n## 154 L3    L          3           1           0        186        -93      279\n## 155 R1    R          1           0          -1        186        -94      280\n## 156 R3    R          3          -1           0        183        -94      277\n## 157 L2    L          2           0          -1        183        -96      279\n## 158 L3    L          3           1           0        186        -96      282\n## 159 R1    R          1           0          -1        186        -97      283\n## 160 L2    L          2           1           0        188        -97      285\n## 161 R3    R          3           0          -1        188       -100      288\n## 162 L3    L          3           1           0        191       -100      291\n## 163 L1    L          1           0           1        191        -99      290\n## 164 L3    L          3          -1           0        188        -99      287\n## 165 R4    R          4           0           1        188        -95      283\n## 166 L4    L          4          -1           0        184        -95      279\n## 167 L5    L          5           0          -1        184       -100      284\n## 168 R3    R          3          -1           0        181       -100      281\n## 169 R5    R          5           0           1        181        -95      276\n## 170 R4    R          4           1           0        185        -95      280\n## 171 R1    R          1           0          -1        185        -96      281\n## 172 L2    L          2           1           0        187        -96      283\n## 173 R3    R          3           0          -1        187        -99      286\n## 174 R5    R          5          -1           0        182        -99      281\n## 175 L5    L          5           0          -1        182       -104      286\n## 176 L4    L          4           1           0        186       -104      290\n## 177 L1    L          1           0           1        186       -103      289\n## 178 L1    L          1          -1           0        185       -103      288",
    "crumbs": [
      "2016",
      "Day 1: No Time for a Taxicab"
    ]
  },
  {
    "objectID": "solutions/2016/01.html#part-two",
    "href": "solutions/2016/01.html#part-two",
    "title": "Day 1: No Time for a Taxicab",
    "section": "Part Two",
    "text": "Part Two\n\nSolutionVisited Twice\n\n\n\n# change_direction() allows no change in direction\nchange_direction &lt;- function(current_direction, turn) {\n    \n    if (turn == \"R\") new_direction &lt;- rev(current_direction) * c(1L, -1L)\n    if (turn == \"L\") new_direction &lt;- rev(current_direction) * c(-1L, 1L)\n    if (turn == \"N\") new_direction &lt;- current_direction\n    \n    return(new_direction)\n}\n\n# initialize new turn vector (first entry is NA as before)\nturn_unit &lt;- c(NA)\n\n# populate the vector: each turn + No turn for length - 1 times\nfor(i in seq_along(length)[-1]) {\n    turn_unit &lt;- c(turn_unit, turn[i], rep(\"N\", times = length[i]-1))\n}\n\n# length vector: NA + unit steps\nlength_unit &lt;- c(NA, rep(1L, times = length(turn_unit) - 1))\n\n\n# REPEAT WHAT'S DONE IN PART ONE\nposition_x &lt;- integer(length = length(turn_unit))\nposition_y &lt;- integer(length = length(turn_unit))\n\ndirection_x &lt;- integer(length = length(turn_unit))\ndirection_y &lt;- integer(length = length(turn_unit))\n\n# initialize position and direction (everything is pre-populated as 0)\n# position_x[1] &lt;- 0\n# position_y[1] &lt;- 0\n# \n# direction_x[1] &lt;- 0\ndirection_y[1] &lt;- 1L\n\n# calculate directions and positions\nfor (i in 2:length(turn_unit)) {\n    # get current x/y-direction\n    current_direction &lt;- c(direction_x[i-1], direction_y[i-1])\n    \n    # calculate new direction\n    new_direction &lt;- change_direction(current_direction, turn_unit[i])\n    \n    # update values\n    direction_x[i] &lt;- new_direction[1]\n    direction_y[i] &lt;- new_direction[2]\n    \n    # get current x/y-position\n    current_position &lt;- c(position_x[i-1], position_y[i-1])\n    \n    # calculate new position\n    new_position &lt;- current_position + new_direction * length_unit[i]\n    \n    # update values\n    position_x[i] &lt;- new_position[1]\n    position_y[i] &lt;- new_position[2]    \n}\n\n# collect all vectors in a table\nmoves_unit &lt;- tibble(turn_unit, length_unit,\n                     direction_x, direction_y,\n                     position_x, position_y) |&gt; \n    mutate(distance = abs(position_x) + abs(position_y))\n\n\n# results\nmoves_unit |&gt; \n    rowid_to_column(\"time\") |&gt; \n    group_by(position_x, position_y, distance) |&gt; \n    summarise(count = n(), second_time = nth(time, 2)) |&gt; \n    filter(count &gt; 1) |&gt; \n    arrange(second_time) |&gt; \n    select(distance) |&gt; \n    head(1) |&gt; \n    pull() |&gt; \n    cat()\n## 111\n\n\n\n\nmoves_unit |&gt; \n    rowid_to_column(\"time\") |&gt; \n    group_by(position_x, position_y, distance) |&gt; \n    summarise(count = n(), second_time = nth(time, 2)) |&gt; \n    filter(count &gt; 1) |&gt; \n    arrange(second_time) |&gt; \n    print(n = 49)\n## # A tibble: 49 × 5\n## # Groups:   position_x, position_y [49]\n##    position_x position_y distance count second_time\n##         &lt;int&gt;      &lt;int&gt;    &lt;int&gt; &lt;int&gt;       &lt;int&gt;\n##  1         12        -99      111     2         554\n##  2        173        -99      272     2         729\n##  3        173       -102      275     2         764\n##  4        173       -101      274     2         765\n##  5        169       -102      271     3         770\n##  6        169       -103      272     2         771\n##  7        169       -104      273     2         772\n##  8        169       -105      274     2         773\n##  9        169       -106      275     2         774\n## 10        170       -102      272     2         787\n## 11        170       -101      271     2         788\n## 12        170        -99      269     2         790\n## 13        170        -97      267     3         792\n## 14        171        -97      268     3         793\n## 15        172        -97      269     2         794\n## 16        173        -97      270     2         795\n## 17        173        -96      269     2         796\n## 18        172        -96      268     2         797\n## 19        171        -96      267     3         798\n## 20        170        -96      266     2         799\n## 21        177        -86      263     2         854\n## 22        178        -86      264     2         855\n## 23        179        -87      266     3         871\n## 24        178        -87      265     3         872\n## 25        178        -88      266     3         873\n## 26        177        -88      265     3         874\n## 27        172        -85      257     2         884\n## 28        172        -82      254     2         891\n## 29        173        -82      255     2         892\n## 30        174        -82      256     2         893\n## 31        175        -83      258     2         895\n## 32        179        -86      265     2         910\n## 33        177        -87      264     2         913\n## 34        175        -88      263     3         916\n## 35        174        -88      262     2         925\n## 36        176        -88      264     2         927\n## 37        179        -88      267     2         930\n## 38        188        -99      287     2         964\n## 39        188        -98      286     2         965\n## 40        188        -97      285     2         966\n## 41        184        -96      280     2         973\n## 42        183        -95      278     2         987\n## 43        184        -95      279     2         988\n## 44        185        -95      280     2         989\n## 45        185        -96      281     2         990\n## 46        186        -96      282     2         991\n## 47        187        -97      284     2         993\n## 48        184        -99      283     2         998\n## 49        182       -100      282     2        1001",
    "crumbs": [
      "2016",
      "Day 1: No Time for a Taxicab"
    ]
  },
  {
    "objectID": "solutions/2016/01.html#plot",
    "href": "solutions/2016/01.html#plot",
    "title": "Day 1: No Time for a Taxicab",
    "section": "Plot",
    "text": "Plot\n\nmoves |&gt; \n    ggplot(mapping = aes(x = position_x, y = position_y)) + \n    geom_path() +\n    theme_minimal()",
    "crumbs": [
      "2016",
      "Day 1: No Time for a Taxicab"
    ]
  },
  {
    "objectID": "solutions/2016/03.html",
    "href": "solutions/2016/03.html",
    "title": "Day 3: Squares With Three Sides",
    "section": "",
    "text": "Reference\nlibrary(tidyverse)\n\ninput &lt;- read_table(file = \"inputs/2016/03.txt\", col_names = c(\"x\", \"y\", \"z\"))",
    "crumbs": [
      "2016",
      "Day 3: Squares With Three Sides"
    ]
  },
  {
    "objectID": "solutions/2016/03.html#part-one",
    "href": "solutions/2016/03.html#part-one",
    "title": "Day 3: Squares With Three Sides",
    "section": "Part One",
    "text": "Part One\n\nSolutionFull Table\n\n\n\nis_triangle &lt;- function(x, y, z) {\n    max(x, y, z) &lt; x + y + z - max(x, y, z)\n}\n\ntriangles &lt;- input |&gt; \n    mutate(is_triangle = pmap_lgl(.l = list(x, y, z), .f = is_triangle))\n\ntriangles |&gt; \n    summarise(n = sum(is_triangle)) |&gt; \n    pull(n) |&gt; \n    cat()\n## 993",
    "crumbs": [
      "2016",
      "Day 3: Squares With Three Sides"
    ]
  },
  {
    "objectID": "solutions/2016/03.html#part-two",
    "href": "solutions/2016/03.html#part-two",
    "title": "Day 3: Squares With Three Sides",
    "section": "Part Two",
    "text": "Part Two\n\nSolutionFull Table\n\n\n\ntriangles &lt;- tibble(sides = c(pull(input, x), pull(input, y), pull(input, z))) |&gt; \n\n    mutate(triangle = rep(x = 1:nrow(input),    each = 3),\n           side     = rep(x = c(\"x\", \"y\", \"z\"), times = nrow(input))) |&gt; \n\n    pivot_wider(values_from = sides, names_from = side) |&gt; \n\n    mutate(is_triangle = pmap_lgl(.l = list(x, y, z), .f = is_triangle), .keep = \"used\")\n\ntriangles |&gt; \n    summarise(n = sum(is_triangle)) |&gt; \n    pull(n) |&gt; \n    cat()\n## 1849",
    "crumbs": [
      "2016",
      "Day 3: Squares With Three Sides"
    ]
  },
  {
    "objectID": "solutions/2016/05.html",
    "href": "solutions/2016/05.html",
    "title": "Day 5: How About a Nice Game of Chess?",
    "section": "",
    "text": "Reference\nlibrary(tidyverse)\n\ninput &lt;- \"uqwqemis\"\n\n# get md5 function from digest package\n# when using it remember to set serialize = FALSE\n# see help for more details\nmd5 &lt;- digest::getVDigest(algo = \"md5\")",
    "crumbs": [
      "2016",
      "Day 5: How About a Nice Game of Chess?"
    ]
  },
  {
    "objectID": "solutions/2016/05.html#md5-tests",
    "href": "solutions/2016/05.html#md5-tests",
    "title": "Day 5: How About a Nice Game of Chess?",
    "section": "md5() tests",
    "text": "md5() tests\n\n# example 1\nmd5(paste0(\"abc\", 3231929), serialize = FALSE)\n## [1] \"00000155f8105dff7f56ee10fa9b9abd\"\n\n# example 2\nmd5(paste0(\"abc\", 5017308), serialize = FALSE)\n## [1] \"000008f82c5b3924a1ecbebf60344e00\"\n\n# example 3\nmd5(paste0(\"abc\", 5278568), serialize = FALSE)\n## [1] \"00000f9a2c309875e05c5a5d09f1b8c4\"",
    "crumbs": [
      "2016",
      "Day 5: How About a Nice Game of Chess?"
    ]
  },
  {
    "objectID": "solutions/2016/05.html#part-one",
    "href": "solutions/2016/05.html#part-one",
    "title": "Day 5: How About a Nice Game of Chess?",
    "section": "Part One",
    "text": "Part One\n\nSolutionTarget Table\n\n\n\n# CODE TO CREATE THE FILE \"temp/md5_target.csv\"\n# number of attempts, this is empirically enough\n# n &lt;- 1.7e7\n# \n# md5_hashes &lt;- tibble(number = 1:n,\n#                      string = paste0(input, number),\n#                      hash   = map_chr(string, \\(x) md5(x, serialize = FALSE), .progress = TRUE))\n# \n# md5_target &lt;- md5_hashes |&gt;\n#     filter(str_sub(hash, start = 1, end = 5) == \"00000\")\n# \n# if(!dir.exists(\"temp\")) dir.create(\"temp\")\n# if(!dir.exists(\"temp/temp_2016_5_part1\")) dir.create(\"temp/temp_2016_5_part1\")\n# \n# md5_target |&gt;\n#     write_csv(file = \"temp/temp_2016_5_part1/md5_target.csv\")\n\nmd5_target &lt;- read_csv(file = \"temp/temp_2016_5_part1/md5_target.csv\")\n\nmd5_target |&gt; \n    mutate(char = str_sub(string = hash, start = 6, end = 6)) |&gt; \n    summarise(password = str_flatten(char)) |&gt; \n    pull(password) |&gt; \n    cat()\n## 1a3099aa",
    "crumbs": [
      "2016",
      "Day 5: How About a Nice Game of Chess?"
    ]
  },
  {
    "objectID": "solutions/2016/05.html#part-two",
    "href": "solutions/2016/05.html#part-two",
    "title": "Day 5: How About a Nice Game of Chess?",
    "section": "Part Two",
    "text": "Part Two\n\nSolutionFiltered TableValid PositionsFirst PositionsSorted Positions\n\n\n\nlibrary(arrow)\n\n# CODE TO CREATE THE CSV FILES IN \"temp_2016_5_csv\"\n# number of attempts, this is empirically enough\n# n &lt;- 1:3e7 # number of attempts\n# n_parts &lt;- 1e2  # number of parts\n# parts &lt;- split(n, cut_number(n, n_parts))\n# \n# if(!dir.exists(\"temp/temp_2016_5_part2\")) dir.create(\"temp/temp_2016_5_part2\")\n# if(!dir.exists(\"temp/temp_2016_5_part2/csv\")) dir.create(\"temp/temp_2016_5_part2/csv\")\n# \n# map2(.x = parts,\n#      .y = 1:n_parts,\n#      .f = \\(parts, id) tibble(id     = id,\n#                               number = parts,\n#                               string = paste0(input, number),\n#                               hash   = map_chr(.x = string,\n#                                                .f = \\(x) md5(x, serialize = FALSE))),\n#      .progress = TRUE) |&gt;\n# \n# walk2(.x = _,\n#       .y = 1:n_parts,\n#       .f = \\(data, id) write_csv(data, file = paste0(\"temp/temp_2016_5_part2/csv/chunk\", id, \".csv\")),\n#       .progress = TRUE)\n\n# csvs &lt;- open_dataset(sources = \"temp/temp_2016_5_part2/csv\", format = \"csv\")\n# \n# if(!dir.exists(\"temp/temp_2016_5_part2/parquet\")) dir.create(\"temp/temp_2016_5_part2/parquet\")\n# \n# csvs |&gt; \n#     write_dataset(path         = \"temp/temp_2016_5_part2/parquet\",\n#                   format       = \"parquet\",\n#                   partitioning = \"id\")\n\nmd5_hashes &lt;- open_dataset(sources = \"temp/temp_2016_5_part2/parquet\",\n                           schema  = schema(number = int64(),\n                                            string = string(),\n                                            hash   = string()))\n\nmd5_hashes_filtered &lt;- md5_hashes |&gt; \n    filter(str_sub(string = hash, start = 1, end = 5) == \"00000\") |&gt; \n    as_tibble() |&gt; \n    mutate(position = str_sub(string = hash, start = 6, end = 6),\n           char     = str_sub(string = hash, start = 7, end = 7))\n\nmd5_hashes_valid_positions &lt;- md5_hashes_filtered |&gt; \n    filter(position %in% 0:7)\n\nmd5_hashes_first_positions &lt;- md5_hashes_valid_positions |&gt; \n    arrange(number) |&gt; \n    summarise(across(everything(), first), .by = position)\n\nmd5_hashes_sorted_positions &lt;- md5_hashes_first_positions |&gt; \n    arrange(position) \n\nmd5_hashes_sorted_positions |&gt; \n    summarise(password = str_flatten(char)) |&gt; \n    pull(password) |&gt; \n    cat()\n## 694190cd",
    "crumbs": [
      "2016",
      "Day 5: How About a Nice Game of Chess?"
    ]
  },
  {
    "objectID": "solutions/2016/07.html",
    "href": "solutions/2016/07.html",
    "title": "Day 7: Internet Protocol Version 7",
    "section": "",
    "text": "Reference\nlibrary(tidyverse)\n\ninput &lt;- read_csv(file = \"inputs/2016/07.txt\", col_names = \"original\")",
    "crumbs": [
      "2016",
      "Day 7: Internet Protocol Version 7"
    ]
  },
  {
    "objectID": "solutions/2016/07.html#part-one",
    "href": "solutions/2016/07.html#part-one",
    "title": "Day 7: Internet Protocol Version 7",
    "section": "Part One",
    "text": "Part One\n\nSolutionFull Table\n\n\n\nremove_squadre_brackets &lt;- function(string) {\n    str_remove_all(string = string, pattern = \"\\\\[|\\\\]\")\n}\n\nhas_abba &lt;- function(string) {\n    str_detect(string = string, pattern = \"([a-z])(?!\\\\1)([a-z])\\\\2\\\\1\") |&gt; \n        coalesce(FALSE)\n}\n\nsupport_tls &lt;- input |&gt; \n    mutate(inside  = str_extract_all(string = original, pattern = \"\\\\[[a-z]*\\\\]\"),\n           outside = str_extract_all(string = original, pattern = \"^[a-z]*\\\\[|\\\\][a-z]*\\\\[|\\\\][a-z]*$\")) |&gt; \n    unnest_wider(col = inside,  names_sep = \"_\") |&gt; \n    unnest_wider(col = outside, names_sep = \"_\") |&gt; \n    mutate(across(-original, remove_squadre_brackets)) |&gt; \n    filter(if_all(starts_with(\"inside\"), compose(`!`, has_abba))) |&gt;\n    filter(if_any(starts_with(\"outside\"), has_abba))\n\ncat(nrow(support_tls))\n## 118",
    "crumbs": [
      "2016",
      "Day 7: Internet Protocol Version 7"
    ]
  },
  {
    "objectID": "solutions/2016/07.html#part-two",
    "href": "solutions/2016/07.html#part-two",
    "title": "Day 7: Internet Protocol Version 7",
    "section": "Part Two",
    "text": "Part Two\n\nSolutionFull Table\n\n\n\n# test &lt;- \"ada[cac]xyz[dad]dcx[rrdac]zzaca\"\n# \n# test |&gt; \n#     str_view(pattern = \"([a-z])(?!\\\\1)([a-z])\\\\1[a-z\\\\[\\\\]]*\\\\[[a-z]*\\\\2\\\\1\\\\2\")\n# \n# test |&gt; \n#     str_view(pattern = \"([a-z])(?!\\\\1)([a-z])\\\\1[a-z\\\\[\\\\]]*\\\\][a-z]*\\\\2\\\\1\\\\2\")\n\nhas_aba &lt;- function(string) {\n    one &lt;- str_detect(string = string, pattern = \"([a-z])(?!\\\\1)([a-z])\\\\1[a-z\\\\[\\\\]]*\\\\[[a-z]*\\\\2\\\\1\\\\2\")\n\n    two &lt;- str_detect(string = string, pattern = \"([a-z])(?!\\\\1)([a-z])\\\\1[a-z\\\\[\\\\]]*\\\\][a-z]*\\\\2\\\\1\\\\2\")\n\n    return(one | two)\n}\n\nsupport_ssl &lt;- input |&gt;\n    filter(has_aba(original))\n\ninput |&gt; \n    mutate(\n        one_s = str_extract(string = original, pattern = \"([a-z])(?!\\\\1)([a-z])\\\\1[a-z\\\\[\\\\]]*\\\\[[a-z]*\\\\2\\\\1\\\\2\"),\n        one   = str_detect(string = original, pattern = \"([a-z])(?!\\\\1)([a-z])\\\\1[a-z\\\\[\\\\]]*\\\\[[a-z]*\\\\2\\\\1\\\\2\"),\n        two_s = str_extract(string = original, pattern = \"([a-z])(?!\\\\1)([a-z])\\\\1[a-z\\\\[\\\\]]*\\\\][a-z]*\\\\2\\\\1\\\\2\"),\n        two   = str_detect(string = original, pattern = \"([a-z])(?!\\\\1)([a-z])\\\\1[a-z\\\\[\\\\]]*\\\\][a-z]*\\\\2\\\\1\\\\2\"),\n        has_aba = one | two\n    ) |&gt; \n    filter(has_aba(original)) |&gt; \n    view()",
    "crumbs": [
      "2016",
      "Day 7: Internet Protocol Version 7"
    ]
  },
  {
    "objectID": "solutions/2017/02.html",
    "href": "solutions/2017/02.html",
    "title": "Day 2: Corruption Checksum",
    "section": "",
    "text": "Reference",
    "crumbs": [
      "2017",
      "Day 2: Corruption Checksum"
    ]
  },
  {
    "objectID": "solutions/2017/02.html#part-one",
    "href": "solutions/2017/02.html#part-one",
    "title": "Day 2: Corruption Checksum",
    "section": "Part One",
    "text": "Part One\n\nlibrary(tidyverse)\n\ninput &lt;- read_table(file = \"inputs/2017/02.txt\", col_names = FALSE)\n\nmax_minus_min &lt;- function(x) max(x) - min(x)\n\ninput |&gt; \n    rowwise() |&gt;\n    mutate(line_check = max_minus_min(across(everything()))) |&gt; \n    ungroup() |&gt;\n    summarise(checksum = sum(line_check)) |&gt; \n    pull(checksum) |&gt; \n    cat()\n## 21845",
    "crumbs": [
      "2017",
      "Day 2: Corruption Checksum"
    ]
  },
  {
    "objectID": "solutions/2017/02.html#part-two",
    "href": "solutions/2017/02.html#part-two",
    "title": "Day 2: Corruption Checksum",
    "section": "Part Two",
    "text": "Part Two\n\ndivision &lt;- function(x) {\n    for(i in seq_along(x)) {\n        for(j in seq_along(x)) {\n            if (x[i] %% x[j] == 0 & i != j) return(x[i] / x[j])\n        }\n    }\n}\n\n# I couldn't find a purrr (or tidyverse) way of doing this\ninput |&gt; \n    apply(MARGIN = 1, FUN = division) |&gt; \n    sum() |&gt; \n    cat()\n## 191",
    "crumbs": [
      "2017",
      "Day 2: Corruption Checksum"
    ]
  },
  {
    "objectID": "solutions/2018/02.html",
    "href": "solutions/2018/02.html",
    "title": "Day 2: Inventory Management System",
    "section": "",
    "text": "Reference",
    "crumbs": [
      "2018",
      "Day 2: Inventory Management System"
    ]
  },
  {
    "objectID": "solutions/2018/02.html#part-one",
    "href": "solutions/2018/02.html#part-one",
    "title": "Day 2: Inventory Management System",
    "section": "Part One",
    "text": "Part One\n\nlibrary(tidyverse)\n\ninput &lt;- read_lines(file = \"inputs/2018/02.txt\")\n\ndoubles &lt;- function(x)\n    any(table(str_split_1(x, pattern = \"\")) == 2)\n\ntriples &lt;- function(x)\n    any(table(str_split_1(x, pattern = \"\")) == 3)\n\ncat(sum(map_lgl(input, doubles)) * sum(map_lgl(input, triples)))\n## 6944",
    "crumbs": [
      "2018",
      "Day 2: Inventory Management System"
    ]
  },
  {
    "objectID": "solutions/2018/02.html#part-two",
    "href": "solutions/2018/02.html#part-two",
    "title": "Day 2: Inventory Management System",
    "section": "Part Two",
    "text": "Part Two\n\nfind_almost_equal &lt;- function(input)\n    for (i in 1:(length(input) - 1))\n        for (j in (i+1):length(input))\n            if (adist(input[i], input[j]) == 1)\n                return(c(i,j))\n\ntargets &lt;- find_almost_equal(input)\n\ntarget_1 &lt;- str_split_1(input[targets[1]], pattern = \"\")\ntarget_2 &lt;- str_split_1(input[targets[2]], pattern = \"\")\n\nstr_split_1(input[targets[1]], pattern = \"\")[target_1 == target_2] |&gt; \n    paste0(collapse = \"\") |&gt; \n    cat()\n## srijafjzloguvlntqmphenbkd",
    "crumbs": [
      "2018",
      "Day 2: Inventory Management System"
    ]
  },
  {
    "objectID": "solutions/2019/02.html",
    "href": "solutions/2019/02.html",
    "title": "Day 2: 1202 Program Alarm",
    "section": "",
    "text": "Reference",
    "crumbs": [
      "2019",
      "Day 2: 1202 Program Alarm"
    ]
  },
  {
    "objectID": "solutions/2019/02.html#part-one",
    "href": "solutions/2019/02.html#part-one",
    "title": "Day 2: 1202 Program Alarm",
    "section": "Part One",
    "text": "Part One\n\nlibrary(tidyverse)\n\ninput &lt;- read_lines(file = \"inputs/2019/02.txt\") |&gt; \n    str_split_1(pattern = \",\") |&gt; \n    as.integer()\n\ninput[1 + 1] &lt;- 12\ninput[2 + 1] &lt;- 2\n\n# starting position\npointer &lt;- 0 + 1\n\nrepeat{\n    if (input[pointer] == 99) break\n    \n    # get values (1st value = noun, 2nd value = verb)\n    noun &lt;- input[input[pointer + 1] + 1]\n    verb &lt;- input[input[pointer + 2] + 1]\n    \n    # target location\n    target_pointer &lt;- input[pointer + 3] + 1\n    \n    # replace value\n    if (input[pointer] == 1) \n        input[target_pointer] &lt;- noun + verb\n    \n    else if (input[pointer] == 2)\n        input[target_pointer] &lt;- noun * verb\n    \n    # update pointer\n    pointer &lt;- pointer + 4\n}\n\ncat(input[1])\n## 3562624",
    "crumbs": [
      "2019",
      "Day 2: 1202 Program Alarm"
    ]
  },
  {
    "objectID": "solutions/2019/02.html#part-two",
    "href": "solutions/2019/02.html#part-two",
    "title": "Day 2: 1202 Program Alarm",
    "section": "Part Two",
    "text": "Part Two\n\n# create a function\noutput &lt;- function(input){\n    # starting position\n    pointer &lt;- 0 + 1\n    \n    repeat{\n        if (input[pointer] == 99) break\n        \n        # get values (1st value = noun, 2nd value = verb)\n        noun &lt;- input[input[pointer + 1] + 1]\n        verb &lt;- input[input[pointer + 2] + 1]\n        \n        # target location\n        target_pointer &lt;- input[pointer + 3] + 1\n        \n        # replace value\n        if (input[pointer] == 1) \n            input[target_pointer] &lt;- noun + verb\n        \n        else if (input[pointer] == 2)\n            input[target_pointer] &lt;- noun * verb\n        \n        # update pointer\n        pointer &lt;- pointer + 4\n    }\n    \n    return(input[1])\n}\n\n# search for noun and verb\nfor (noun in 0:99) {\n    for (verb in 0:99) {\n        input &lt;- read_lines(file = \"inputs/2019/02.txt\") |&gt; \n            str_split_1(pattern = \",\") |&gt; \n            as.integer()\n        \n        input[1 + 1] &lt;- noun\n        input[2 + 1] &lt;- verb\n        \n        if (output(input) == 19690720) cat(100 * noun + verb)\n        \n    }\n}\n## 8298",
    "crumbs": [
      "2019",
      "Day 2: 1202 Program Alarm"
    ]
  },
  {
    "objectID": "solutions/2020/02.html",
    "href": "solutions/2020/02.html",
    "title": "Day 2: Password Philosophy",
    "section": "",
    "text": "Reference",
    "crumbs": [
      "2020",
      "Day 2: Password Philosophy"
    ]
  },
  {
    "objectID": "solutions/2020/02.html#part-one",
    "href": "solutions/2020/02.html#part-one",
    "title": "Day 2: Password Philosophy",
    "section": "Part One",
    "text": "Part One\n\nlibrary(tidyverse)\n\ninput &lt;- read_lines(file = \"inputs/2020/02.txt\")\n\npasswords &lt;- tibble(original = input) |&gt; \n    \n    separate_wider_delim(cols = original,\n                         names = c(\"range\", \"letter\", \"password\"),\n                         delim = \" \") |&gt;\n    \n    mutate(letter = str_replace(string = letter,\n                                pattern = \":\",\n                                replacement = \"\")) |&gt;\n    \n    separate_wider_delim(cols = range, names = c(\"min\", \"max\"), delim = \"-\") |&gt; \n    \n    mutate(across(c(min, max), as.integer))\n\nvalidation_1 &lt;- passwords |&gt; \n    mutate(matches = str_count(password, pattern = letter),\n           valid   = between(matches, min, max))\n\nvalidation_1\n## # A tibble: 1,000 × 6\n##      min   max letter password             matches valid\n##    &lt;int&gt; &lt;int&gt; &lt;chr&gt;  &lt;chr&gt;                  &lt;int&gt; &lt;lgl&gt;\n##  1    15    16 l      klfbblslvjclmlnqklvg       6 FALSE\n##  2     6    13 h      pghjchdxhnjhjd             4 FALSE\n##  3     4    13 n      nnznntzznqnzbtzj           6 TRUE \n##  4    10    16 r      nrrrrkrjtxwrrrwx           8 FALSE\n##  5     1     6 t      rttftttttttttmdttttt      16 FALSE\n##  6     4    12 l      zhllfxlmvqtnhx             3 FALSE\n##  7     6     8 d      wxpwgdbjtffddkb            3 FALSE\n##  8     7     9 q      rqcqxjqhsm                 3 FALSE\n##  9     6     8 x      xxxfxdxxx                  7 TRUE \n## 10     5     9 d      dwnwnbsddfmc               3 FALSE\n## # ℹ 990 more rows\n\nvalidation_1 |&gt; \n    count(valid) |&gt; \n    filter(valid == TRUE) |&gt; \n    pull(n) |&gt; \n    cat()\n## 424",
    "crumbs": [
      "2020",
      "Day 2: Password Philosophy"
    ]
  },
  {
    "objectID": "solutions/2020/02.html#part-two",
    "href": "solutions/2020/02.html#part-two",
    "title": "Day 2: Password Philosophy",
    "section": "Part Two",
    "text": "Part Two\n\nvalidation_2 &lt;- passwords |&gt; \n    mutate(first   = str_sub(password, start = min, end = min),\n           second  = str_sub(password, start = max, end = max),\n           matches = (first == letter) + (second == letter))\n\nvalidation_2\n## # A tibble: 1,000 × 7\n##      min   max letter password             first second matches\n##    &lt;int&gt; &lt;int&gt; &lt;chr&gt;  &lt;chr&gt;                &lt;chr&gt; &lt;chr&gt;    &lt;int&gt;\n##  1    15    16 l      klfbblslvjclmlnqklvg n     q            0\n##  2     6    13 h      pghjchdxhnjhjd       h     j            1\n##  3     4    13 n      nnznntzznqnzbtzj     n     b            1\n##  4    10    16 r      nrrrrkrjtxwrrrwx     x     x            0\n##  5     1     6 t      rttftttttttttmdttttt r     t            1\n##  6     4    12 l      zhllfxlmvqtnhx       l     n            1\n##  7     6     8 d      wxpwgdbjtffddkb      d     j            1\n##  8     7     9 q      rqcqxjqhsm           q     s            1\n##  9     6     8 x      xxxfxdxxx            d     x            1\n## 10     5     9 d      dwnwnbsddfmc         n     d            1\n## # ℹ 990 more rows\n\nvalidation_2 |&gt; \n    filter(matches == 1) |&gt; \n    nrow() |&gt; \n    cat()\n## 747",
    "crumbs": [
      "2020",
      "Day 2: Password Philosophy"
    ]
  },
  {
    "objectID": "solutions/2021/02.html",
    "href": "solutions/2021/02.html",
    "title": "Day 2: Dive!",
    "section": "",
    "text": "Reference",
    "crumbs": [
      "2021",
      "Day 2: Dive!"
    ]
  },
  {
    "objectID": "solutions/2021/02.html#part-one",
    "href": "solutions/2021/02.html#part-one",
    "title": "Day 2: Dive!",
    "section": "Part One",
    "text": "Part One\n\nlibrary(tidyverse)\n\ncommands &lt;- read_delim(file      = \"inputs/2021/02.txt\",\n                       col_names = c(\"direction\", \"length\"))\n\ncommands &lt;- commands |&gt; \n    mutate(x = if_else(direction == \"forward\", 1, 0),\n           y = case_match(direction,\n                          \"down\"    ~ 1,\n                          \"forward\" ~ 0,\n                          \"up\"      ~ -1)) |&gt; \n    select(-direction) |&gt; \n    mutate(across(everything(), as.integer)) |&gt;\n    mutate(x = x * length,\n           y = y * length)\n\ncommands |&gt;\n    summarise(x = sum(x),\n              y = sum(y)) |&gt;\n    mutate(product = x * y) |&gt;\n    pull(product) |&gt;\n    cat()\n## 1762050",
    "crumbs": [
      "2021",
      "Day 2: Dive!"
    ]
  },
  {
    "objectID": "solutions/2021/02.html#part-two",
    "href": "solutions/2021/02.html#part-two",
    "title": "Day 2: Dive!",
    "section": "Part Two",
    "text": "Part Two\n\ncommands &lt;- read_delim(file      = \"inputs/2021/02.txt\",\n                       col_names = c(\"direction\", \"length\")) |&gt; \n    mutate(aim = NA_real_, x = NA_real_, y = NA_real_) |&gt; \n    add_row(direction = NA, length = NA, aim = 0, x = 0, y = 0, .before = 1)\n\nfor (i in 2:nrow(commands)){\n    if (commands[i, \"direction\"] == \"down\") {\n        commands[i, \"aim\"] = commands[i-1, \"aim\"] + commands[i, \"length\"]\n        commands[i, \"x\"]   = commands[i-1, \"x\"]\n        commands[i, \"y\"]   = commands[i-1, \"y\"]\n    }\n    \n    else if (commands[i, \"direction\"] == \"up\") {\n        commands[i, \"aim\"] = commands[i-1, \"aim\"] - commands[i, \"length\"]\n        commands[i, \"x\"]   = commands[i-1, \"x\"]\n        commands[i, \"y\"]   = commands[i-1, \"y\"]\n    }\n    \n    else if (commands[i, \"direction\"] == \"forward\") {\n        commands[i, \"aim\"] = commands[i-1, \"aim\"]\n        commands[i, \"x\"]   = commands[i-1, \"x\"] + commands[i, \"length\"]\n        commands[i, \"y\"]   = commands[i-1, \"y\"] + commands[i, \"aim\"] * commands[i, \"length\"]\n    }\n}\n\ncommands |&gt;\n    slice(nrow(commands)) |&gt; \n    mutate(product = x * y) |&gt; \n    pull(product) |&gt; \n    cat()\n## 1855892637",
    "crumbs": [
      "2021",
      "Day 2: Dive!"
    ]
  },
  {
    "objectID": "solutions/2022/01.html",
    "href": "solutions/2022/01.html",
    "title": "Day 1: Calorie Counting",
    "section": "",
    "text": "Reference",
    "crumbs": [
      "2022",
      "Day 1: Calorie Counting"
    ]
  },
  {
    "objectID": "solutions/2022/01.html#part-one",
    "href": "solutions/2022/01.html#part-one",
    "title": "Day 1: Calorie Counting",
    "section": "Part One",
    "text": "Part One\n\nSolutionFull Table\n\n\n\nlibrary(tidyverse)\n\ninput &lt;- read_lines(file = \"inputs/2022/01.txt\") |&gt; as.integer()\n\nelf_calories &lt;- tibble(calories = input,\n                       elf = cumsum(is.na(input)) + 1L) |&gt; \n    filter(!is.na(calories))\n\nelf_calories |&gt; \n    group_by(elf) |&gt; \n    summarise(total_calories = sum(calories)) |&gt; \n    slice_max(total_calories) |&gt; \n    pull(total_calories) |&gt; \n    cat()\n## 68787\n\n\n\n\n# look at the full table\nelf_calories |&gt; print(n = nrow(elf_calories))\n## # A tibble: 2,001 × 2\n##      calories   elf\n##         &lt;int&gt; &lt;int&gt;\n##    1     7896     1\n##    2     4992     1\n##    3     1382     1\n##    4     2920     1\n##    5     7533     1\n##    6     2709     1\n##    7     6020     1\n##    8     5321     1\n##    9     2698     1\n##   10     6806     1\n##   11     8008     1\n##   12     1340     2\n##   13     1472     2\n##   14     7147     2\n##   15     2707     2\n##   16     5491     2\n##   17     7003     2\n##   18     2337     2\n##   19     1401     2\n##   20     5309     2\n##   21     4385     2\n##   22     2805     2\n##   23     6019     3\n##   24     1924     3\n##   25     8917     3\n##   26     6303     3\n##   27     9358     3\n##   28     3640     3\n##   29     1563     3\n##   30     1902     3\n##   31    10946     4\n##   32    10333     4\n##   33     8504     4\n##   34     6110     4\n##   35    10157     4\n##   36     4578     5\n##   37     1711     5\n##   38     3343     5\n##   39     6159     5\n##   40     4045     5\n##   41     3487     5\n##   42     3070     5\n##   43     5663     5\n##   44     3518     5\n##   45     5839     5\n##   46     5911     5\n##   47     4970     5\n##   48     4852     5\n##   49     4512     5\n##   50     4277     6\n##   51     3324     6\n##   52     6172     6\n##   53     8272     6\n##   54     2707     6\n##   55     3292     6\n##   56     6599     6\n##   57     1204     6\n##   58     7030     6\n##   59     3075     6\n##   60     6907     7\n##   61     5595     7\n##   62    10251     7\n##   63     8654     7\n##   64     4036     7\n##   65    11545     7\n##   66    16787     8\n##   67    11035     8\n##   68    12217     8\n##   69     2196     9\n##   70     1519     9\n##   71     5810     9\n##   72     6837     9\n##   73     1193     9\n##   74     6480     9\n##   75     1237     9\n##   76     1659     9\n##   77     4323     9\n##   78     2896     9\n##   79     3878     9\n##   80     2894     9\n##   81    15886    10\n##   82    20356    10\n##   83    23636    10\n##   84     8795    11\n##   85     7986    11\n##   86    14228    11\n##   87    15738    11\n##   88    13503    11\n##   89     6598    12\n##   90    17951    12\n##   91    17508    12\n##   92     2446    12\n##   93     1382    13\n##   94     3232    13\n##   95     6467    13\n##   96     2791    13\n##   97     6250    13\n##   98     2704    13\n##   99     3898    13\n##  100     5569    13\n##  101     8676    13\n##  102     2582    14\n##  103     8767    14\n##  104     3195    14\n##  105     7957    14\n##  106     6614    14\n##  107    24737    15\n##  108    34912    15\n##  109    28868    16\n##  110    34308    16\n##  111     2703    17\n##  112    20947    17\n##  113     5548    18\n##  114     5930    18\n##  115     6705    18\n##  116     4227    18\n##  117     6120    18\n##  118     8723    18\n##  119     4597    18\n##  120     5877    19\n##  121     1223    19\n##  122     5789    19\n##  123     2207    19\n##  124     3488    19\n##  125     5210    19\n##  126     3056    19\n##  127     4300    19\n##  128     3880    19\n##  129     1826    19\n##  130     5366    19\n##  131     4531    19\n##  132     2016    19\n##  133     5304    19\n##  134     4226    20\n##  135     5314    20\n##  136     6437    20\n##  137     1737    20\n##  138     1229    20\n##  139     3757    20\n##  140     5128    20\n##  141     1058    20\n##  142     5940    20\n##  143     3344    20\n##  144     5188    20\n##  145     4963    20\n##  146     1403    20\n##  147     5498    20\n##  148     4969    21\n##  149     3096    21\n##  150     7035    21\n##  151     2695    21\n##  152     4747    21\n##  153     5109    21\n##  154     6294    21\n##  155     7990    21\n##  156     1539    21\n##  157     2608    21\n##  158     2944    21\n##  159    14127    22\n##  160     9751    22\n##  161     4842    22\n##  162     1106    22\n##  163     2779    22\n##  164    11896    23\n##  165     6643    23\n##  166    15874    23\n##  167    10487    23\n##  168     4141    23\n##  169     4696    24\n##  170     6644    24\n##  171     6285    24\n##  172     4321    24\n##  173     4080    24\n##  174     6888    24\n##  175     5213    24\n##  176     5048    24\n##  177     6545    24\n##  178     5848    24\n##  179     1690    24\n##  180     5351    24\n##  181     2560    24\n##  182    17296    25\n##  183     4277    25\n##  184     8327    25\n##  185     7931    25\n##  186     8374    26\n##  187     3794    26\n##  188     5435    26\n##  189     6968    26\n##  190     4768    26\n##  191     3458    26\n##  192     5090    27\n##  193     5614    27\n##  194     9448    27\n##  195    10331    27\n##  196     1311    27\n##  197    12604    27\n##  198     5126    28\n##  199     4860    28\n##  200     1299    28\n##  201     6934    28\n##  202    11746    28\n##  203     2628    28\n##  204    12132    28\n##  205     6648    29\n##  206     8567    29\n##  207    10219    29\n##  208     2385    29\n##  209     3642    29\n##  210    10478    29\n##  211     7662    29\n##  212     9206    30\n##  213     2176    30\n##  214     6472    30\n##  215    12314    30\n##  216     7006    31\n##  217     9478    31\n##  218     2742    31\n##  219    12074    31\n##  220    11993    31\n##  221     3221    31\n##  222     2458    32\n##  223     4271    32\n##  224     6417    32\n##  225    13749    32\n##  226     5411    32\n##  227     7826    33\n##  228     4566    33\n##  229    10845    33\n##  230     4535    33\n##  231     5673    33\n##  232     8305    33\n##  233     8264    34\n##  234    11302    34\n##  235     7040    34\n##  236     9481    34\n##  237     9935    34\n##  238     6624    34\n##  239     8376    34\n##  240    10460    35\n##  241    20936    35\n##  242     3456    36\n##  243     3498    36\n##  244     6808    36\n##  245     7408    36\n##  246     5543    36\n##  247     3673    36\n##  248     6672    36\n##  249     6650    36\n##  250     7560    36\n##  251     2477    36\n##  252     6505    36\n##  253     6943    37\n##  254     3217    37\n##  255     6235    37\n##  256     5079    37\n##  257     1386    37\n##  258     3453    37\n##  259     1736    37\n##  260     4569    37\n##  261     1422    37\n##  262     2804    37\n##  263     5807    37\n##  264     2241    38\n##  265     1925    38\n##  266     3348    38\n##  267     4805    38\n##  268     2575    38\n##  269     3656    38\n##  270     1379    38\n##  271     5628    38\n##  272     2348    38\n##  273     4652    38\n##  274     5052    38\n##  275     5788    38\n##  276     4128    38\n##  277     2160    38\n##  278     4839    39\n##  279     3854    39\n##  280     3192    39\n##  281     4055    39\n##  282     1892    39\n##  283     5418    39\n##  284     6415    39\n##  285     1645    39\n##  286     1609    39\n##  287     3844    39\n##  288     3097    39\n##  289     2117    39\n##  290     4043    39\n##  291     6996    40\n##  292    16021    40\n##  293    23549    40\n##  294     5493    41\n##  295     5824    41\n##  296     7101    41\n##  297     5017    41\n##  298     8221    41\n##  299     5407    41\n##  300     1963    41\n##  301     6083    41\n##  302     4896    42\n##  303    18916    42\n##  304    17584    42\n##  305    19464    42\n##  306     2897    43\n##  307     1198    43\n##  308     1847    43\n##  309     4416    43\n##  310     3086    43\n##  311     2006    43\n##  312     1743    43\n##  313     1387    43\n##  314     3390    43\n##  315     1416    43\n##  316     4713    43\n##  317     3831    43\n##  318     2789    43\n##  319     5146    43\n##  320     2220    43\n##  321     9452    44\n##  322     8265    44\n##  323     6453    44\n##  324     2831    44\n##  325     3803    44\n##  326     1928    44\n##  327     1047    44\n##  328     5087    44\n##  329     9454    44\n##  330     2885    45\n##  331     1518    45\n##  332     5218    45\n##  333     2629    45\n##  334     5204    45\n##  335     3715    45\n##  336     4468    45\n##  337     4399    45\n##  338     3020    45\n##  339     5194    45\n##  340     5361    45\n##  341     4566    45\n##  342     5875    45\n##  343     3995    45\n##  344     3081    45\n##  345     5435    46\n##  346     3159    46\n##  347     1378    46\n##  348     1333    46\n##  349     4491    46\n##  350     5405    46\n##  351     4858    46\n##  352     3744    46\n##  353     5468    46\n##  354     2313    46\n##  355     3014    46\n##  356     2236    46\n##  357     7027    47\n##  358     5112    47\n##  359     6675    47\n##  360     1149    47\n##  361     5519    47\n##  362     7197    47\n##  363     5210    47\n##  364     3811    47\n##  365     1259    47\n##  366     3794    47\n##  367     2700    47\n##  368     6518    47\n##  369     6066    48\n##  370     2040    48\n##  371     1948    48\n##  372     2972    48\n##  373     3816    48\n##  374     1477    48\n##  375     4477    48\n##  376     3085    48\n##  377     4169    48\n##  378     1245    48\n##  379     5008    48\n##  380     2016    48\n##  381     4449    48\n##  382     1544    48\n##  383     1511    48\n##  384     5909    49\n##  385     3378    49\n##  386    12050    49\n##  387     6988    49\n##  388    11093    49\n##  389     8034    49\n##  390     2552    49\n##  391     5647    50\n##  392     7225    50\n##  393     1416    50\n##  394     4531    50\n##  395     2148    50\n##  396     5176    50\n##  397     1086    50\n##  398     1268    50\n##  399     3907    50\n##  400     8824    51\n##  401    12672    51\n##  402     6094    51\n##  403     4105    51\n##  404     9982    52\n##  405     1255    52\n##  406     5102    52\n##  407     2060    52\n##  408     8348    52\n##  409     8610    52\n##  410     9019    52\n##  411     6442    53\n##  412     8353    53\n##  413     2849    53\n##  414     6823    53\n##  415     5061    53\n##  416     8540    53\n##  417     1020    54\n##  418     4819    54\n##  419     2371    54\n##  420     6452    54\n##  421     2589    54\n##  422     2140    54\n##  423     3018    54\n##  424     6422    54\n##  425     2079    54\n##  426     1049    54\n##  427     4183    54\n##  428     1959    54\n##  429     6889    54\n##  430     3370    55\n##  431    20341    55\n##  432     6283    55\n##  433     3568    56\n##  434     8914    56\n##  435     2474    56\n##  436     1840    56\n##  437     1092    56\n##  438     2901    56\n##  439     4619    56\n##  440     5489    57\n##  441     5048    57\n##  442     2151    57\n##  443     1275    57\n##  444     4555    57\n##  445     6105    57\n##  446     6393    57\n##  447     5439    57\n##  448     1175    57\n##  449     3143    57\n##  450     1039    57\n##  451     6159    57\n##  452     4280    57\n##  453    25302    58\n##  454    11104    58\n##  455    16342    59\n##  456    19486    59\n##  457     6818    59\n##  458     5872    59\n##  459     4287    60\n##  460     7300    60\n##  461     5106    60\n##  462     6009    60\n##  463     5397    60\n##  464     4743    60\n##  465     8786    60\n##  466     5374    60\n##  467     7723    60\n##  468     3342    60\n##  469     7830    61\n##  470     4687    61\n##  471     3639    61\n##  472     5942    61\n##  473     8019    61\n##  474     7531    61\n##  475     4763    61\n##  476     8086    61\n##  477     2928    62\n##  478    12662    62\n##  479     1729    62\n##  480    15599    62\n##  481     7031    62\n##  482     4504    63\n##  483     8351    63\n##  484     3310    63\n##  485     2860    63\n##  486     7474    63\n##  487     1052    63\n##  488     7088    63\n##  489     7300    63\n##  490     7653    63\n##  491     3800    64\n##  492     3285    64\n##  493     2244    64\n##  494     6146    64\n##  495     1527    64\n##  496     2496    64\n##  497     3373    64\n##  498     2935    64\n##  499     4073    64\n##  500     2708    64\n##  501     5854    64\n##  502     4532    64\n##  503     4265    64\n##  504    38782    65\n##  505     3895    66\n##  506     2886    66\n##  507     3397    66\n##  508    10665    66\n##  509     7954    66\n##  510     5994    66\n##  511     3830    67\n##  512     4381    67\n##  513     4042    67\n##  514     3631    67\n##  515     2109    67\n##  516     2742    67\n##  517     2748    67\n##  518     1117    67\n##  519     2772    67\n##  520     1921    67\n##  521     4357    67\n##  522     2960    67\n##  523     4504    67\n##  524     6021    67\n##  525     2300    67\n##  526     5684    68\n##  527    30508    68\n##  528     5467    69\n##  529     4827    69\n##  530     7991    69\n##  531     4299    69\n##  532     4152    69\n##  533     7070    69\n##  534     1911    69\n##  535     1345    69\n##  536     5607    69\n##  537     6490    69\n##  538     5631    69\n##  539     2288    70\n##  540     4534    70\n##  541     1402    70\n##  542     2221    70\n##  543     2137    70\n##  544     4623    70\n##  545     5745    70\n##  546     1848    70\n##  547     1638    70\n##  548     2562    70\n##  549     1095    70\n##  550     2539    70\n##  551     4090    70\n##  552     3929    70\n##  553     4330    70\n##  554     3776    71\n##  555    11693    71\n##  556     1189    71\n##  557     2039    71\n##  558     2662    71\n##  559    11224    71\n##  560     9212    71\n##  561     3778    72\n##  562     1619    72\n##  563     4008    72\n##  564     1706    72\n##  565     1926    72\n##  566     3844    72\n##  567     5194    72\n##  568     3554    72\n##  569     6272    72\n##  570     2988    72\n##  571     4779    72\n##  572     5481    72\n##  573     1443    72\n##  574     6297    72\n##  575     1712    73\n##  576     6076    73\n##  577     7332    73\n##  578     5267    73\n##  579     6685    73\n##  580     2555    73\n##  581     4517    73\n##  582     8692    73\n##  583     1819    73\n##  584    23640    74\n##  585    10894    74\n##  586    25482    74\n##  587    10592    75\n##  588     9277    75\n##  589     1228    75\n##  590     1197    75\n##  591     9162    75\n##  592     4838    75\n##  593     3783    75\n##  594     2691    75\n##  595    15579    76\n##  596    16090    76\n##  597     5228    76\n##  598     4273    76\n##  599     5288    76\n##  600     4044    77\n##  601    10911    77\n##  602     4767    77\n##  603     8658    77\n##  604     5775    77\n##  605     9369    77\n##  606     5332    77\n##  607     8063    78\n##  608     4322    78\n##  609     5109    78\n##  610     6744    78\n##  611     5653    78\n##  612     9544    78\n##  613     2610    78\n##  614     2241    78\n##  615     3885    79\n##  616     1140    79\n##  617    10508    79\n##  618    11910    79\n##  619     6096    79\n##  620     7234    80\n##  621    15371    80\n##  622    10892    80\n##  623    15338    80\n##  624    12191    80\n##  625     3698    81\n##  626     3413    81\n##  627     3783    81\n##  628     3362    81\n##  629     1828    81\n##  630     1302    81\n##  631     3426    81\n##  632     3147    81\n##  633     5558    81\n##  634     2644    81\n##  635     3636    81\n##  636     5842    81\n##  637     5261    81\n##  638     3312    81\n##  639     3164    81\n##  640     3088    82\n##  641     1303    82\n##  642     2194    82\n##  643     5841    82\n##  644     5330    82\n##  645     5986    82\n##  646     4108    82\n##  647     4571    82\n##  648     7161    82\n##  649     6276    82\n##  650     5920    82\n##  651     5011    82\n##  652     6546    83\n##  653    30555    83\n##  654     5922    84\n##  655     2401    84\n##  656     4792    84\n##  657     7175    84\n##  658     7942    84\n##  659     5040    84\n##  660     3601    84\n##  661     2213    84\n##  662     6802    84\n##  663     2244    84\n##  664     6891    84\n##  665     2694    85\n##  666     7905    85\n##  667     6046    85\n##  668     3782    85\n##  669     5591    85\n##  670     3665    85\n##  671     4195    85\n##  672     4579    85\n##  673     4300    85\n##  674     1822    85\n##  675     6308    86\n##  676     2993    86\n##  677     5663    86\n##  678     4780    86\n##  679     6638    86\n##  680     6503    86\n##  681     6307    86\n##  682     4682    86\n##  683     7281    86\n##  684     4580    86\n##  685     7441    86\n##  686     5611    86\n##  687     9706    87\n##  688     4619    87\n##  689     2108    87\n##  690     8345    87\n##  691     2422    87\n##  692    12140    87\n##  693     9146    87\n##  694     4984    88\n##  695    10121    88\n##  696     4062    88\n##  697     3797    88\n##  698     5130    88\n##  699     1641    88\n##  700    11492    88\n##  701     7592    89\n##  702     9412    89\n##  703     5474    89\n##  704     7809    89\n##  705     8073    89\n##  706     2056    89\n##  707     3839    89\n##  708     3557    89\n##  709     7893    90\n##  710     3556    90\n##  711     9427    90\n##  712     2836    90\n##  713    10256    90\n##  714     4410    91\n##  715     3041    91\n##  716     2124    91\n##  717     5830    91\n##  718     4200    91\n##  719     4102    91\n##  720     5146    91\n##  721     3355    91\n##  722     4318    91\n##  723     5422    91\n##  724     4992    91\n##  725     1979    91\n##  726     2696    91\n##  727     5277    91\n##  728     4058    91\n##  729    13134    92\n##  730    35366    92\n##  731     5363    93\n##  732     1706    93\n##  733     4925    93\n##  734     5967    93\n##  735     8514    93\n##  736     3362    93\n##  737     1424    93\n##  738     4427    93\n##  739     8906    93\n##  740     2891    94\n##  741     4388    94\n##  742    10112    94\n##  743     3409    94\n##  744     2477    94\n##  745     1138    94\n##  746     3790    94\n##  747     4712    94\n##  748     9130    95\n##  749     4622    95\n##  750     9723    95\n##  751     4660    95\n##  752     2778    95\n##  753     1083    95\n##  754     2326    95\n##  755     9254    95\n##  756     3221    96\n##  757     4739    96\n##  758     3752    96\n##  759     1220    96\n##  760    10337    96\n##  761     1159    96\n##  762     2367    96\n##  763     1900    96\n##  764     2038    97\n##  765     5545    97\n##  766     5904    97\n##  767     5378    97\n##  768     4334    97\n##  769     2897    97\n##  770     5745    97\n##  771     3670    97\n##  772     4773    97\n##  773     3087    97\n##  774     5760    97\n##  775     4026    97\n##  776     3719    97\n##  777     3084    97\n##  778     8674    98\n##  779     8656    98\n##  780     4162    98\n##  781     5125    98\n##  782     4183    98\n##  783     3496    98\n##  784     7379    98\n##  785     6150    98\n##  786     5225    98\n##  787     8014    98\n##  788    10321    99\n##  789    16081    99\n##  790     6163    99\n##  791     2030    99\n##  792    31755   100\n##  793    18352   100\n##  794     1666   101\n##  795    15493   101\n##  796     8858   101\n##  797    15689   101\n##  798     1903   102\n##  799     7006   102\n##  800     9002   102\n##  801     5067   102\n##  802     9397   102\n##  803     8703   102\n##  804     7534   102\n##  805     8188   102\n##  806     4983   102\n##  807     4398   103\n##  808    12055   103\n##  809     6820   103\n##  810     2412   103\n##  811    10308   103\n##  812    11231   103\n##  813     5914   104\n##  814     9582   104\n##  815     4568   104\n##  816     7679   104\n##  817     5867   104\n##  818     5798   104\n##  819     2955   104\n##  820     7834   104\n##  821     1833   104\n##  822     2554   105\n##  823     1886   105\n##  824     4590   105\n##  825     3753   105\n##  826     3161   105\n##  827     4039   105\n##  828     2435   105\n##  829     1172   105\n##  830     2690   105\n##  831     4564   105\n##  832     5160   105\n##  833     3715   105\n##  834     2834   105\n##  835     6074   105\n##  836     1251   105\n##  837     9837   106\n##  838     4501   106\n##  839     3669   106\n##  840     7682   106\n##  841     2762   106\n##  842     6072   106\n##  843     8731   106\n##  844     2324   106\n##  845     7030   107\n##  846     6956   107\n##  847     3040   107\n##  848     2185   107\n##  849     4717   107\n##  850     2907   107\n##  851     5255   107\n##  852     1194   107\n##  853     1309   107\n##  854     5100   107\n##  855     5630   107\n##  856     5164   107\n##  857    18808   108\n##  858     5780   108\n##  859    13062   108\n##  860    16131   108\n##  861     5436   109\n##  862    13758   109\n##  863    12390   109\n##  864    14884   109\n##  865     5344   110\n##  866     3178   110\n##  867     1907   110\n##  868     6945   110\n##  869     6435   110\n##  870     3985   110\n##  871     3637   110\n##  872     6984   110\n##  873     2108   110\n##  874     2282   110\n##  875     6870   111\n##  876     3774   111\n##  877     4149   111\n##  878     3361   111\n##  879     3208   111\n##  880     3696   111\n##  881     4265   111\n##  882     2295   111\n##  883     7068   111\n##  884     4365   111\n##  885     6729   111\n##  886     9828   112\n##  887     3819   112\n##  888     7654   112\n##  889     2391   112\n##  890    11354   112\n##  891     6751   112\n##  892     5409   113\n##  893     6025   113\n##  894     6772   113\n##  895     4005   113\n##  896     6894   113\n##  897     2723   113\n##  898     2485   113\n##  899     5866   113\n##  900     5744   113\n##  901     1804   113\n##  902     2509   113\n##  903     3285   113\n##  904     5663   113\n##  905     6630   114\n##  906     7966   114\n##  907     6366   114\n##  908     2854   114\n##  909     3478   114\n##  910     6566   114\n##  911     3790   114\n##  912     4047   114\n##  913     8471   114\n##  914     5911   114\n##  915     5930   115\n##  916     4813   115\n##  917    10365   115\n##  918     1430   115\n##  919    13119   116\n##  920    11915   116\n##  921     4732   116\n##  922     9949   116\n##  923    13699   116\n##  924     9790   116\n##  925     3413   117\n##  926     3027   117\n##  927     5513   117\n##  928     3320   117\n##  929     4421   117\n##  930     2507   117\n##  931     5781   117\n##  932     2622   117\n##  933     5472   117\n##  934     6590   117\n##  935     2021   117\n##  936     2164   117\n##  937     4106   117\n##  938    49386   118\n##  939     3656   119\n##  940     7422   119\n##  941     6157   119\n##  942     5982   119\n##  943     3944   119\n##  944     5726   119\n##  945     2628   119\n##  946     6618   119\n##  947     6138   119\n##  948     2186   119\n##  949     4744   119\n##  950    33805   120\n##  951     9976   121\n##  952     4213   121\n##  953     4359   121\n##  954     3723   121\n##  955     4106   122\n##  956     1423   122\n##  957     3334   122\n##  958     5115   122\n##  959     3819   122\n##  960     1308   122\n##  961     2652   122\n##  962     5954   122\n##  963     4439   122\n##  964     2188   122\n##  965     3415   122\n##  966     1104   122\n##  967     2973   122\n##  968     1681   122\n##  969     4704   122\n##  970    64085   123\n##  971     1097   124\n##  972     4369   124\n##  973     3803   124\n##  974     3247   124\n##  975     5135   124\n##  976     6928   124\n##  977     3419   124\n##  978     2418   124\n##  979     5130   124\n##  980     2555   124\n##  981     3043   124\n##  982     4831   125\n##  983     2425   125\n##  984     2023   125\n##  985     1667   125\n##  986     6410   125\n##  987     6422   125\n##  988     5851   125\n##  989     4966   125\n##  990     6721   125\n##  991     5312   125\n##  992     3792   125\n##  993     6700   125\n##  994     1545   125\n##  995     1742   126\n##  996     5176   126\n##  997     8587   126\n##  998     9261   126\n##  999    15254   126\n## 1000     3097   127\n## 1001     6016   127\n## 1002     5558   127\n## 1003     3004   127\n## 1004     4372   127\n## 1005     1986   127\n## 1006     5576   127\n## 1007     6105   127\n## 1008     1709   127\n## 1009     1326   127\n## 1010     4997   127\n## 1011     5528   127\n## 1012     2823   127\n## 1013     3072   127\n## 1014     1228   128\n## 1015     2891   128\n## 1016     3056   128\n## 1017     5874   128\n## 1018     2267   128\n## 1019     2232   128\n## 1020     1754   128\n## 1021     3979   128\n## 1022     1881   128\n## 1023     6633   128\n## 1024     1889   128\n## 1025     5506   128\n## 1026     4377   128\n## 1027     3703   129\n## 1028     6310   129\n## 1029     1020   129\n## 1030     4891   129\n## 1031     4911   129\n## 1032     2913   129\n## 1033     3888   129\n## 1034     4642   129\n## 1035     1963   129\n## 1036     3716   129\n## 1037     2222   129\n## 1038     4528   129\n## 1039     1030   129\n## 1040     6081   129\n## 1041    10172   130\n## 1042     1472   130\n## 1043     6212   130\n## 1044     9125   130\n## 1045     9365   130\n## 1046     7866   130\n## 1047     3525   130\n## 1048     4752   130\n## 1049     2546   131\n## 1050     2326   131\n## 1051     5739   131\n## 1052     1010   131\n## 1053     4724   131\n## 1054     5324   131\n## 1055     2495   131\n## 1056     2999   131\n## 1057     5272   131\n## 1058     1937   131\n## 1059     4396   131\n## 1060     6333   131\n## 1061     3632   131\n## 1062     2944   132\n## 1063     1285   132\n## 1064     3457   132\n## 1065     1980   132\n## 1066     2346   132\n## 1067     5712   132\n## 1068     5088   132\n## 1069     3718   132\n## 1070     2036   132\n## 1071     6725   132\n## 1072     4335   133\n## 1073     5577   133\n## 1074     4533   133\n## 1075     3275   133\n## 1076     4297   133\n## 1077     2774   133\n## 1078     5029   133\n## 1079     1396   134\n## 1080     5993   134\n## 1081     4058   134\n## 1082     1095   134\n## 1083     4388   134\n## 1084     1843   134\n## 1085     1643   134\n## 1086     6192   134\n## 1087     2801   134\n## 1088     2583   134\n## 1089     4286   134\n## 1090     5483   134\n## 1091     2308   134\n## 1092     1577   134\n## 1093     1584   135\n## 1094     7552   135\n## 1095     8133   135\n## 1096     9503   135\n## 1097     1989   135\n## 1098     4584   136\n## 1099     7691   136\n## 1100     4707   136\n## 1101     5757   136\n## 1102     2519   136\n## 1103     2097   136\n## 1104     1460   136\n## 1105     6651   136\n## 1106     3569   136\n## 1107     1159   136\n## 1108     9366   137\n## 1109     3998   137\n## 1110     2020   137\n## 1111     2598   137\n## 1112     2166   137\n## 1113     3298   137\n## 1114     6533   137\n## 1115     1323   137\n## 1116    10007   138\n## 1117     2282   138\n## 1118    10952   138\n## 1119     3217   138\n## 1120     8819   138\n## 1121     7164   138\n## 1122     3095   139\n## 1123     1126   139\n## 1124     1893   139\n## 1125     1540   139\n## 1126     3172   139\n## 1127     2310   139\n## 1128     2566   139\n## 1129     2438   139\n## 1130     4431   139\n## 1131     3423   139\n## 1132     6675   139\n## 1133     4131   140\n## 1134     9513   140\n## 1135    11678   140\n## 1136     5248   140\n## 1137     7769   140\n## 1138     3887   140\n## 1139     3494   140\n## 1140     5382   141\n## 1141     1013   141\n## 1142     4021   141\n## 1143     7366   141\n## 1144    12330   141\n## 1145    13746   141\n## 1146     3536   142\n## 1147     4407   142\n## 1148     1205   142\n## 1149     6210   142\n## 1150     1388   142\n## 1151     6202   142\n## 1152     5314   142\n## 1153     3286   142\n## 1154     6888   142\n## 1155     3049   142\n## 1156     3946   142\n## 1157     3684   142\n## 1158     4187   142\n## 1159     1934   143\n## 1160     1285   143\n## 1161     3262   143\n## 1162     4136   143\n## 1163     5790   143\n## 1164     1340   143\n## 1165     2597   143\n## 1166     2992   143\n## 1167     3008   143\n## 1168     5698   143\n## 1169     3688   143\n## 1170     3086   143\n## 1171     2459   143\n## 1172     2413   143\n## 1173     4769   143\n## 1174     2150   144\n## 1175     1030   144\n## 1176     3068   144\n## 1177     3747   144\n## 1178     5417   144\n## 1179     4237   144\n## 1180     3311   144\n## 1181     5081   144\n## 1182     4846   144\n## 1183     5555   144\n## 1184     4650   144\n## 1185     3830   144\n## 1186     2209   144\n## 1187     3069   144\n## 1188     9935   145\n## 1189     9564   145\n## 1190    15110   145\n## 1191     3038   146\n## 1192     2079   146\n## 1193     1059   146\n## 1194     4905   146\n## 1195     4104   146\n## 1196     3502   146\n## 1197     6338   146\n## 1198     1366   146\n## 1199     5990   146\n## 1200     6073   146\n## 1201     4692   146\n## 1202     4706   146\n## 1203     3474   146\n## 1204     3469   146\n## 1205     5845   147\n## 1206     1176   147\n## 1207     5553   147\n## 1208     4578   147\n## 1209     3868   147\n## 1210     6154   147\n## 1211     4799   147\n## 1212     5079   147\n## 1213     5927   147\n## 1214     4185   147\n## 1215     1806   147\n## 1216     4449   147\n## 1217     6248   147\n## 1218     1280   148\n## 1219     2823   148\n## 1220     1372   148\n## 1221     5899   148\n## 1222     2547   148\n## 1223     5738   148\n## 1224     1545   148\n## 1225     1046   148\n## 1226     2917   148\n## 1227     4931   148\n## 1228     6094   148\n## 1229     3690   148\n## 1230     5021   148\n## 1231     4657   148\n## 1232     1214   148\n## 1233     3046   149\n## 1234     4952   149\n## 1235     1138   149\n## 1236     2373   149\n## 1237     1412   149\n## 1238     4848   149\n## 1239     5772   149\n## 1240     4750   149\n## 1241     4741   149\n## 1242     5752   149\n## 1243     5977   149\n## 1244     5270   149\n## 1245     5526   149\n## 1246     3509   149\n## 1247     1793   149\n## 1248     3228   150\n## 1249     9849   150\n## 1250    11815   150\n## 1251     6507   150\n## 1252    10144   150\n## 1253     4756   150\n## 1254     5119   151\n## 1255     1764   151\n## 1256     1718   151\n## 1257     4813   151\n## 1258     3662   151\n## 1259     4731   151\n## 1260     2755   151\n## 1261     1315   151\n## 1262     1975   151\n## 1263     5716   151\n## 1264     4859   151\n## 1265     4748   151\n## 1266     4809   151\n## 1267     1296   151\n## 1268     1689   151\n## 1269     2909   152\n## 1270     7209   152\n## 1271     6124   152\n## 1272     3235   152\n## 1273     4089   152\n## 1274     1271   152\n## 1275     6220   152\n## 1276    10328   152\n## 1277     5630   153\n## 1278    10237   153\n## 1279     5572   153\n## 1280     1065   153\n## 1281     2126   153\n## 1282     7181   153\n## 1283    32487   154\n## 1284     2379   154\n## 1285     2718   155\n## 1286     4228   155\n## 1287     7834   155\n## 1288     6711   155\n## 1289     7619   155\n## 1290     6321   155\n## 1291     1080   155\n## 1292     8584   155\n## 1293     6860   155\n## 1294     6542   155\n## 1295     5106   156\n## 1296     8514   156\n## 1297     6109   156\n## 1298     1204   156\n## 1299     5159   156\n## 1300     7935   156\n## 1301     7292   156\n## 1302     8114   156\n## 1303     5898   157\n## 1304     4837   157\n## 1305     6825   157\n## 1306     4587   157\n## 1307     1021   157\n## 1308     5713   157\n## 1309     4862   157\n## 1310     3864   157\n## 1311     2022   157\n## 1312     1129   157\n## 1313     4444   157\n## 1314     6439   157\n## 1315     4369   157\n## 1316     8875   158\n## 1317     7916   158\n## 1318     2177   158\n## 1319     2085   158\n## 1320     8103   158\n## 1321     7908   158\n## 1322     6266   158\n## 1323     9099   158\n## 1324    23274   159\n## 1325    30650   159\n## 1326     5537   160\n## 1327    21092   160\n## 1328    21841   160\n## 1329     5852   161\n## 1330     9025   161\n## 1331     4459   161\n## 1332     4883   161\n## 1333     2577   161\n## 1334     4679   161\n## 1335     5673   161\n## 1336     1548   161\n## 1337     6726   161\n## 1338     4034   162\n## 1339     2542   162\n## 1340    15179   162\n## 1341     6499   162\n## 1342     3472   162\n## 1343     2228   163\n## 1344     5558   163\n## 1345     7863   163\n## 1346     5080   163\n## 1347     6441   163\n## 1348     2064   163\n## 1349     1676   163\n## 1350     8473   163\n## 1351    18854   164\n## 1352     5610   164\n## 1353    18471   164\n## 1354     1196   165\n## 1355     3063   165\n## 1356    13221   165\n## 1357    19006   165\n## 1358    37369   166\n## 1359    24756   166\n## 1360     4271   167\n## 1361     6806   167\n## 1362     6381   167\n## 1363     6363   167\n## 1364     5221   167\n## 1365     5729   167\n## 1366     3829   167\n## 1367     7832   167\n## 1368     1150   167\n## 1369     3352   167\n## 1370     3210   167\n## 1371     1422   168\n## 1372     2606   168\n## 1373     6070   168\n## 1374     4950   168\n## 1375     4300   168\n## 1376     4023   168\n## 1377     1862   168\n## 1378     5027   168\n## 1379     5668   168\n## 1380     5058   168\n## 1381     3969   168\n## 1382     2359   168\n## 1383     5394   168\n## 1384     6001   168\n## 1385    12165   169\n## 1386    13318   169\n## 1387    11945   169\n## 1388    12507   169\n## 1389    11398   169\n## 1390     9539   170\n## 1391     8607   170\n## 1392     7451   170\n## 1393    11189   170\n## 1394    11056   170\n## 1395     3209   170\n## 1396     5845   171\n## 1397     2759   171\n## 1398     4046   171\n## 1399     3838   171\n## 1400     2768   171\n## 1401     1168   171\n## 1402     1237   171\n## 1403     6370   171\n## 1404     3384   171\n## 1405     3938   171\n## 1406     3946   171\n## 1407     5028   171\n## 1408     2603   171\n## 1409    20671   172\n## 1410     8067   172\n## 1411     7232   172\n## 1412     7376   173\n## 1413     3530   173\n## 1414     3343   173\n## 1415     4917   173\n## 1416     6712   173\n## 1417     5080   173\n## 1418     5846   173\n## 1419     2774   173\n## 1420     3020   173\n## 1421     5738   173\n## 1422     5500   173\n## 1423     5185   174\n## 1424     2455   174\n## 1425     6887   174\n## 1426     7349   174\n## 1427     1917   174\n## 1428     2435   174\n## 1429     2458   174\n## 1430     3676   174\n## 1431     1783   174\n## 1432     8567   174\n## 1433     5585   175\n## 1434     3750   175\n## 1435     2664   175\n## 1436     6867   175\n## 1437     1506   175\n## 1438     6830   175\n## 1439     1279   175\n## 1440     7877   175\n## 1441     2757   175\n## 1442     4091   175\n## 1443     2731   175\n## 1444    11132   176\n## 1445     6128   177\n## 1446     2421   177\n## 1447     5519   177\n## 1448     4390   177\n## 1449     6457   177\n## 1450     2769   177\n## 1451     1410   177\n## 1452     3365   177\n## 1453     5682   177\n## 1454     5685   177\n## 1455     1502   177\n## 1456     3245   177\n## 1457     1265   178\n## 1458     7559   178\n## 1459     8923   178\n## 1460     1805   178\n## 1461     9738   178\n## 1462     3780   178\n## 1463     9131   178\n## 1464     3052   179\n## 1465     5440   179\n## 1466     1672   179\n## 1467     3462   179\n## 1468     1053   179\n## 1469     2902   179\n## 1470     2137   179\n## 1471     5053   179\n## 1472     4905   179\n## 1473     3544   179\n## 1474     4374   179\n## 1475     2718   179\n## 1476     5799   179\n## 1477    24868   180\n## 1478    18500   180\n## 1479    13495   180\n## 1480     4653   181\n## 1481     5142   181\n## 1482     2117   181\n## 1483     2908   181\n## 1484     2324   181\n## 1485     4335   181\n## 1486     1096   181\n## 1487     6733   181\n## 1488     2380   181\n## 1489     5352   181\n## 1490     1830   181\n## 1491     1893   181\n## 1492     2491   181\n## 1493     3142   182\n## 1494     4111   182\n## 1495     4577   182\n## 1496     6019   182\n## 1497     1075   182\n## 1498     2596   182\n## 1499     4950   182\n## 1500     5814   182\n## 1501     5880   182\n## 1502     5573   182\n## 1503     3672   182\n## 1504     2623   182\n## 1505     5602   182\n## 1506     1032   182\n## 1507     5599   182\n## 1508     7365   183\n## 1509     2959   183\n## 1510     6303   183\n## 1511     6111   183\n## 1512     4607   183\n## 1513     6530   183\n## 1514     4873   183\n## 1515     4367   183\n## 1516     3776   183\n## 1517    16700   184\n## 1518     7439   184\n## 1519     4758   184\n## 1520     6160   184\n## 1521     4203   185\n## 1522     1817   185\n## 1523     2941   185\n## 1524     5662   185\n## 1525     1387   185\n## 1526     1698   185\n## 1527     3031   185\n## 1528     3718   185\n## 1529     6087   185\n## 1530     4971   185\n## 1531     5592   185\n## 1532     4460   185\n## 1533     5271   185\n## 1534     3867   185\n## 1535     4998   185\n## 1536    22671   186\n## 1537     4704   186\n## 1538    23657   186\n## 1539     5028   187\n## 1540     5059   187\n## 1541     4212   187\n## 1542     1200   187\n## 1543     2284   187\n## 1544     6082   187\n## 1545     4589   187\n## 1546     4383   187\n## 1547     4682   187\n## 1548     1243   187\n## 1549     6449   187\n## 1550     1380   187\n## 1551     4515   187\n## 1552    10431   188\n## 1553    11132   188\n## 1554    13078   188\n## 1555     3070   188\n## 1556     8963   188\n## 1557     1329   188\n## 1558     3931   189\n## 1559     6924   189\n## 1560     5760   189\n## 1561     2448   189\n## 1562     4709   189\n## 1563    13742   189\n## 1564     4493   190\n## 1565     4759   190\n## 1566     5130   190\n## 1567     5004   190\n## 1568     7898   190\n## 1569     8508   190\n## 1570     6718   190\n## 1571     2769   190\n## 1572     5103   190\n## 1573     4254   190\n## 1574     2261   191\n## 1575     4383   191\n## 1576     1602   191\n## 1577     3767   191\n## 1578     4634   191\n## 1579     3704   191\n## 1580     4242   191\n## 1581     6316   191\n## 1582     5351   191\n## 1583     3531   191\n## 1584     3470   191\n## 1585     3904   191\n## 1586     3541   192\n## 1587     2879   192\n## 1588     1596   192\n## 1589     4477   192\n## 1590     1209   192\n## 1591     2089   192\n## 1592     4365   192\n## 1593     4813   192\n## 1594     1830   192\n## 1595     1069   192\n## 1596     2994   192\n## 1597     6076   192\n## 1598     3379   192\n## 1599     4130   192\n## 1600     4102   192\n## 1601    11774   193\n## 1602    16285   193\n## 1603    15432   193\n## 1604     1364   194\n## 1605     3558   194\n## 1606     5162   194\n## 1607     4115   194\n## 1608     2730   194\n## 1609     3464   194\n## 1610     2673   194\n## 1611     4541   194\n## 1612     5020   194\n## 1613     5299   194\n## 1614     3199   194\n## 1615     3221   194\n## 1616     4372   194\n## 1617     2696   195\n## 1618     2080   195\n## 1619     4206   195\n## 1620     1901   195\n## 1621     6091   195\n## 1622     4955   195\n## 1623     2674   195\n## 1624     2184   195\n## 1625     4977   195\n## 1626     4339   195\n## 1627     1011   195\n## 1628     3766   195\n## 1629     5911   195\n## 1630     5316   195\n## 1631     3703   195\n## 1632    21030   196\n## 1633     6714   197\n## 1634     3093   197\n## 1635     1168   197\n## 1636     1507   197\n## 1637     5134   197\n## 1638     6516   197\n## 1639     1572   197\n## 1640     8383   197\n## 1641     5080   198\n## 1642     7055   198\n## 1643     6559   198\n## 1644     4514   198\n## 1645     7036   198\n## 1646     7348   198\n## 1647     5836   198\n## 1648     2223   198\n## 1649     1996   198\n## 1650     4888   198\n## 1651     3666   198\n## 1652    25117   199\n## 1653    18822   199\n## 1654     2855   200\n## 1655     4165   200\n## 1656     4812   200\n## 1657     8068   200\n## 1658     6471   200\n## 1659     4447   200\n## 1660     4482   200\n## 1661     4775   200\n## 1662     1002   200\n## 1663     5999   201\n## 1664     5674   201\n## 1665     4022   201\n## 1666     7403   201\n## 1667     5593   201\n## 1668     6164   201\n## 1669     5109   201\n## 1670     6856   201\n## 1671     3449   201\n## 1672     1689   201\n## 1673     3727   201\n## 1674     2115   201\n## 1675     5781   202\n## 1676     4639   202\n## 1677     3684   202\n## 1678     4010   202\n## 1679     4018   202\n## 1680     1004   202\n## 1681     3081   202\n## 1682     1003   202\n## 1683     1702   202\n## 1684     1457   202\n## 1685     1301   202\n## 1686     2122   202\n## 1687     2014   202\n## 1688     5790   202\n## 1689     6373   203\n## 1690     1849   203\n## 1691     4389   203\n## 1692     5772   203\n## 1693     4888   203\n## 1694     7981   203\n## 1695     4238   203\n## 1696     1476   203\n## 1697     5550   203\n## 1698     2922   203\n## 1699     1513   204\n## 1700     8603   204\n## 1701     5489   204\n## 1702     6664   204\n## 1703     4505   204\n## 1704     7378   204\n## 1705     4185   204\n## 1706     8087   204\n## 1707     6799   204\n## 1708     6482   205\n## 1709     3622   205\n## 1710     5516   205\n## 1711     6214   205\n## 1712     6243   205\n## 1713     6214   205\n## 1714     4711   205\n## 1715     3038   205\n## 1716     3398   205\n## 1717     5483   205\n## 1718     3145   205\n## 1719     3536   205\n## 1720     9125   206\n## 1721     5549   206\n## 1722     8576   206\n## 1723     5240   206\n## 1724     6032   206\n## 1725     7952   206\n## 1726     5140   206\n## 1727     7580   206\n## 1728     6079   207\n## 1729     2048   207\n## 1730     4407   207\n## 1731     5706   207\n## 1732     2535   207\n## 1733     4588   207\n## 1734     5182   207\n## 1735     3204   207\n## 1736     5287   207\n## 1737     5221   207\n## 1738     2457   207\n## 1739     6932   207\n## 1740     4174   207\n## 1741     5505   208\n## 1742     1576   208\n## 1743    13849   208\n## 1744     5436   208\n## 1745     2535   208\n## 1746     3865   208\n## 1747     2178   209\n## 1748     5420   209\n## 1749     1013   209\n## 1750     6435   209\n## 1751     3810   209\n## 1752     2903   209\n## 1753     5079   209\n## 1754     4332   209\n## 1755     6257   209\n## 1756     1344   209\n## 1757     4511   209\n## 1758     3127   209\n## 1759     6464   209\n## 1760     3805   210\n## 1761     2215   210\n## 1762     1614   210\n## 1763     2501   210\n## 1764     1067   210\n## 1765     1874   210\n## 1766     6199   210\n## 1767     1733   210\n## 1768     2146   210\n## 1769     6581   210\n## 1770     3514   210\n## 1771     1175   210\n## 1772     1099   210\n## 1773     6473   211\n## 1774     3376   211\n## 1775     4934   211\n## 1776     5773   211\n## 1777     4970   211\n## 1778     7229   211\n## 1779     5716   211\n## 1780     1014   211\n## 1781     7507   211\n## 1782     6012   211\n## 1783     3636   212\n## 1784     3377   212\n## 1785     5729   212\n## 1786     2413   212\n## 1787     6252   212\n## 1788     3314   212\n## 1789     2928   212\n## 1790     2317   212\n## 1791     1157   212\n## 1792     2788   212\n## 1793     3842   212\n## 1794     3906   212\n## 1795     4650   212\n## 1796     5338   212\n## 1797     5103   213\n## 1798     2724   213\n## 1799     3794   213\n## 1800     1431   213\n## 1801     5838   213\n## 1802     3971   213\n## 1803     2107   213\n## 1804     6475   213\n## 1805     1746   213\n## 1806     5986   213\n## 1807     3736   213\n## 1808     6345   213\n## 1809     4124   213\n## 1810     5664   213\n## 1811     3774   214\n## 1812     2420   214\n## 1813     1478   214\n## 1814     2100   214\n## 1815     2608   214\n## 1816     1168   214\n## 1817     1584   214\n## 1818     1266   214\n## 1819     1346   214\n## 1820     1262   214\n## 1821     6217   214\n## 1822     6392   214\n## 1823     2148   214\n## 1824     4525   214\n## 1825     3294   215\n## 1826    14112   215\n## 1827     2438   215\n## 1828    13482   215\n## 1829     4287   215\n## 1830    10170   216\n## 1831     4078   216\n## 1832     4238   216\n## 1833     3724   216\n## 1834     8472   216\n## 1835     9110   216\n## 1836     5386   216\n## 1837     3743   216\n## 1838    10397   217\n## 1839    11155   217\n## 1840     4476   217\n## 1841     7990   217\n## 1842     8374   217\n## 1843     3340   217\n## 1844     4575   217\n## 1845    27723   218\n## 1846     7777   219\n## 1847     9699   219\n## 1848     8470   219\n## 1849     1721   219\n## 1850     7728   219\n## 1851     1288   219\n## 1852     4458   219\n## 1853     3428   219\n## 1854    12000   220\n## 1855     5191   220\n## 1856     8549   220\n## 1857     9184   220\n## 1858     3081   220\n## 1859    11587   220\n## 1860     9430   220\n## 1861    13626   221\n## 1862     2596   221\n## 1863    12534   221\n## 1864     7672   221\n## 1865     5161   221\n## 1866     1160   221\n## 1867     7830   222\n## 1868     3505   222\n## 1869     7940   222\n## 1870     4756   222\n## 1871     6977   222\n## 1872     3085   222\n## 1873     2639   222\n## 1874     6439   222\n## 1875     4919   222\n## 1876     1421   222\n## 1877     5196   222\n## 1878     2714   223\n## 1879     1424   223\n## 1880     7020   223\n## 1881     8593   223\n## 1882     1436   223\n## 1883     7652   223\n## 1884     1146   223\n## 1885     4168   223\n## 1886     2069   223\n## 1887     5958   223\n## 1888    38215   224\n## 1889     1436   225\n## 1890     6327   225\n## 1891    10725   225\n## 1892     4280   225\n## 1893     4509   225\n## 1894    10301   225\n## 1895     5183   225\n## 1896     5166   225\n## 1897     6068   226\n## 1898     8243   226\n## 1899     6171   226\n## 1900     5575   226\n## 1901     9093   226\n## 1902     6123   226\n## 1903     2831   226\n## 1904     5664   226\n## 1905     6278   226\n## 1906     4093   227\n## 1907     4619   227\n## 1908     2578   227\n## 1909     5902   227\n## 1910     1131   227\n## 1911     3288   227\n## 1912     4886   227\n## 1913     4994   227\n## 1914     6088   227\n## 1915     6377   227\n## 1916     1852   227\n## 1917     4254   227\n## 1918     1419   227\n## 1919     1504   227\n## 1920     7127   228\n## 1921     8649   228\n## 1922     2523   228\n## 1923     8023   228\n## 1924     3063   228\n## 1925     2677   228\n## 1926     1759   228\n## 1927     8632   228\n## 1928     7805   228\n## 1929     2999   228\n## 1930     3419   229\n## 1931     1111   229\n## 1932     5599   229\n## 1933     1055   229\n## 1934     3407   229\n## 1935     4964   229\n## 1936     3556   229\n## 1937     7249   229\n## 1938     1100   229\n## 1939     7148   229\n## 1940     1852   229\n## 1941     1549   229\n## 1942     5414   230\n## 1943    11474   230\n## 1944     1685   230\n## 1945     8818   230\n## 1946    10288   230\n## 1947     6138   230\n## 1948     1983   230\n## 1949    23129   231\n## 1950     2195   231\n## 1951     3104   232\n## 1952     1599   232\n## 1953     2327   232\n## 1954     3640   232\n## 1955     2230   232\n## 1956     2791   232\n## 1957     2344   232\n## 1958     1035   232\n## 1959     1046   232\n## 1960     3399   232\n## 1961     5096   232\n## 1962     1067   232\n## 1963     1987   232\n## 1964     5786   232\n## 1965     1395   232\n## 1966    32647   233\n## 1967    10609   233\n## 1968     6020   234\n## 1969     2279   234\n## 1970     8718   234\n## 1971     3103   234\n## 1972     7022   234\n## 1973     6464   234\n## 1974     6180   234\n## 1975     3968   234\n## 1976     3275   234\n## 1977     3221   235\n## 1978     5381   235\n## 1979     6110   235\n## 1980     1860   235\n## 1981     4557   235\n## 1982     4705   235\n## 1983     3658   235\n## 1984     4172   235\n## 1985     5002   235\n## 1986     5578   235\n## 1987     1355   235\n## 1988     4114   235\n## 1989     3501   235\n## 1990     4821   235\n## 1991     1312   236\n## 1992     1921   236\n## 1993     2644   236\n## 1994     5044   236\n## 1995     3336   236\n## 1996     4520   236\n## 1997     1253   236\n## 1998     3184   236\n## 1999     3732   236\n## 2000     6754   236\n## 2001     2139   236",
    "crumbs": [
      "2022",
      "Day 1: Calorie Counting"
    ]
  },
  {
    "objectID": "solutions/2022/01.html#part-two",
    "href": "solutions/2022/01.html#part-two",
    "title": "Day 1: Calorie Counting",
    "section": "Part Two",
    "text": "Part Two\n\nelf_calories |&gt;\n    group_by(elf) |&gt; \n    summarise(total_calories = sum(calories)) |&gt; \n    slice_max(total_calories, n = 3) |&gt; \n    summarise(total_3 = sum(total_calories)) |&gt; \n    pull(total_3) |&gt; \n    cat()\n## 198041",
    "crumbs": [
      "2022",
      "Day 1: Calorie Counting"
    ]
  },
  {
    "objectID": "solutions/2022/03.html",
    "href": "solutions/2022/03.html",
    "title": "Day 3: Rucksack Reorganization",
    "section": "",
    "text": "Reference",
    "crumbs": [
      "2022",
      "Day 3: Rucksack Reorganization"
    ]
  },
  {
    "objectID": "solutions/2022/03.html#part-one",
    "href": "solutions/2022/03.html#part-one",
    "title": "Day 3: Rucksack Reorganization",
    "section": "Part One",
    "text": "Part One\n\nSolutionFull Table\n\n\n\nlibrary(tidyverse)\n\ninput &lt;- read_lines(file = \"inputs/2022/03.txt\")\n\nmatch_one &lt;- function(first, second) {\n    str_extract(string  = first,\n                pattern = str_flatten(str_split_1(second, \"\"),\n                                      collapse = \"|\"))\n}\n\npriority &lt;- 1:52\nnames(priority) &lt;- c(letters, LETTERS)\n\nrucksacks &lt;- tibble(original = input,\n                    length   = str_length(original),\n                    first    = str_sub(original, 1, length/2),\n                    second   = str_sub(original, length/2 + 1, length),\n                    match    = map2_chr(first, second, match_one),\n                    priority = priority[match])\n\nrucksacks |&gt; \n    summarise(total_priority = sum(priority)) |&gt; \n    pull(total_priority) |&gt; \n    cat()\n## 7746\n\n\n\n\nrucksacks |&gt; print(n = nrow(rucksacks))\n## # A tibble: 300 × 6\n##     original                                  length first second match priority\n##     &lt;chr&gt;                                      &lt;int&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;int&gt;\n##   1 RCMRQjLLWGTjnlnZwwnZJRZH                      24 RCMR… nlnZw… R           44\n##   2 qnvfhpSbvSppNddNdSqbbmmdPrwttJVrVPDVrJtH…     48 qnvf… Prwtt… h            8\n##   3 BFpFzSSqSFFSvQsnWgCMjTLzng                    26 BFpF… QsnWg… z           26\n##   4 DbWVcVRRdlLffvtqjTWNgQ                        22 DbWV… ffvtq… W           49\n##   5 mJJMpsmrMrJSHJpsHrFHvBvgHvqfNvzffgTvfj        38 mJJM… HvBvg… H           34\n##   6 mMhPjmjmFPJhMSGGcDRlwRdcLGPc                  28 mMhP… GGcDR… P           42\n##   7 qFcbmWFJqqWpRJcQWpqsQQQwSPCPrHRHCPdNZtSr…     46 qFcb… wSPCP… R           44\n##   8 jGMjGLhhhgTvghgtGVjnNCrPVwZSZffSNSwHZZdH      40 jGMj… NCrPV… V           48\n##   9 DvzDlvvhnjlMlglglGGhDLpqqcJWWtsmszpWbBBB…     44 DvzD… pqqcJ… z           26\n##  10 SPLPHQbJSbPsvTLmfDvVDctvWhcDlD                30 SPLP… mfDvV… v           22\n##  11 jdRRzzGgJqwrpMRMgdjlcVcWqfWWlfDlmmlWhB        38 jdRR… lcVcW… q           17\n##  12 rwgRGdpGprNNLQLsbZJPsn                        22 rwgR… NLQLs… N           40\n##  13 GZhTVLztHrSzrRBz                              16 GZhT… HrSzr… z           26\n##  14 MJWjMvsfSCLSnrJn                              16 MJWj… SCLSn… J           36\n##  15 MjglcgWMdccvZGFtTDchLLLh                      24 Mjgl… ZGFtT… c            3\n##  16 rgDHBgBjRgRTgwzwthBnQwmBtB                    26 rgDH… wzwth… B           28\n##  17 MsMpSfMsTGTFFLdFFFMFsnNmthNnzhthtwmWnznz      40 MsMp… snNmt… s           19\n##  18 pZMpJdvJMGRHVJJTVHjb                          20 pZMp… RHVJJ… J           36\n##  19 TQVqZVBcBBdBfbpN                              16 TQVq… BBdBf… B           28\n##  20 zvzrtCshrntCHslPMMMFpZHbNSpb                  28 zvzr… lPMMM… H           34\n##  21 hLWhGLttsvLvrrWvhzVmQgwJZTRcggTjGcgT          36 hLWh… VmQgw… G           33\n##  22 SqRGLHtSbtNTbhjFTjDDpF                        22 SqRG… TbhjF… b            2\n##  23 WwgJgmdmMdwPDVQQBBhSBFwV                      24 WwgJ… DVQQB… w           23\n##  24 JMPlmlSldWZmRqtLsRGRtvls                      24 JMPl… RqtLs… l           12\n##  25 mZvmvPNmlNJPJzzmgNvNgdqqdBSpfHBqSsHqHfwp…     44 mZvm… qqdBS… d            4\n##  26 nhDQDrwLrVVnqfGnsBGBGGsH                      24 nhDQ… qfGns… n           14\n##  27 VjCDMhbDjLjtFhtLhLhQjNZcZPwWWcczmvglgJJN      40 VjCD… jNZcZ… j           10\n##  28 wwqnwZGGZqqMpMprpZqwGlLDtNDffdBdNVBmNGBN      40 wwqn… GlLDt… G           33\n##  29 TSTchTFbRLfLmVhNDm                            18 TSTc… LfLmV… h            8\n##  30 SCLRvJQvRFTSRjqMqPZrZnrzZzjp                  28 SCLR… qMqPZ… j           10\n##  31 cJfqGjgGJcsgsPnghgBm                          20 cJfq… sgsPn… g            7\n##  32 FHHbQQHLWLbPQThqQQRnZs                        22 FHHb… PQThq… Q           43\n##  33 lLLMSCvrlFMwlSlFcNwqDVVpJcfjzVDf              32 lLLM… cNwqD… w           23\n##  34 cRdRDhsDFzPztwJdGP                            18 cRdR… zPztw… d            4\n##  35 CVqpCqCgSNfCSQBpjtBwtlBBHLlmGjGG              32 CVqp… jtBwt… B           28\n##  36 qfQfCVQfgQnVNpQCMqfcrFrwWDhrDnsvcRDsbc        38 qfQf… crFrw… n           14\n##  37 nFWWzqWZQSqnJzNJzslJVsdV                      24 nFWW… JzNJz… z           26\n##  38 vBBvsLvbBmBmRlGTNJJvRRTD                      24 vBBv… RlGTN… v           22\n##  39 tBbpmmPwCmHpMHHMrPCCcSnZSgcFcZgWFscSfgth      40 tBbp… cSnZS… t           20\n##  40 LLssTJrqrpvrvvpJvdjggMlgzVgVggPlFPqz          36 LLss… jggMl… q           17\n##  41 HwZwCZfHNtbMzjgVnFPC                          20 HwZw… bMzjg… C           29\n##  42 RSttfRwZDtBcZwQMQdrQsdTBQQmW                  28 RStt… QMQdr… B           28\n##  43 lJnNhMJqljlNhSrdWlGGGQHwwH                    26 lJnN… SrdWl… l           12\n##  44 vbTpbCsTFCTmbSmcRfVCfRpwcPdwWQQrdwHwBHrP…     46 vbTp… wcPdw… c            3\n##  45 sVTmDfmCTVmJjgSzzntDtt                        22 sVTm… JjgSz… D           30\n##  46 DQtMjZHZHvMbwwTSpqLtpJ                        22 DQtM… bwwTS… t           20\n##  47 FzVFlsNdVczWPzWcslVfSLqLsqJpSwwsJswLrf        38 FzVF… fSLqL… s           19\n##  48 dNFFWcmzWFGLWcdcFgvZvvRHQvjMHDMBGD            34 dNFF… gvZvv… G           33\n##  49 MVPTmPvbMgrTmmmmMRMvPvBwFGhhDCdFFwLCLdJh…     46 MVPT… wFGhh… R           44\n##  50 fqqWfpZWzWsDwhwdhwqGLD                        22 fqqW… Dwhwd… q           17\n##  51 ZWSSftStnnplcQLSbVMBvTbrMlbrBvvl              32 ZWSS… bVMBv… l           12\n##  52 FSsHDmtFLbbFbLGg                              16 FSsH… LbbFb… F           32\n##  53 vrvzTzWzzzvppzSzTMnfTggjVgbgjbLjgPPnbGbV…     42 vrvz… ggjVg… n           14\n##  54 pdMwrBpfwfSMTTWdMTpBDCBtmsmltslcBDCshDHs      40 pdMw… DCBtm… B           28\n##  55 RgbmfGtmRVgLLSVSnSrWWSHhnh                    26 Rgbm… SVSnS… V           48\n##  56 ccTvlvNppsFnbFnhnWnPHJ                        22 ccTv… nbFnh… F           32\n##  57 pqNjDBjNNjvpZfmtjbCLbCmb                      24 pqNj… Zfmtj… j           10\n##  58 qsSVpSVfWqgNrVtWptpmSfqbPQljbHPHlDnljRSl…     46 qsSV… bPQlj… S           45\n##  59 dcGBrMFMdLTGGdlwDwMRHwwMbjHP                  28 dcGB… lwDwM… M           39\n##  60 CFBvhFhTLFCGvFchChBdBTJtsNpWqfVgtszprmVW…     46 CFBv… tsNpW… v           22\n##  61 sjsTgNSNqSjgMmVPmmmrpH                        22 sjsT… gMmVP… g            7\n##  62 RftCcWddRCZfPtCfcQZdcZDcrBllBFpVHprHWlHH…     48 RftC… rBllB… W           49\n##  63 thPZRtLcDRdDCTTsqbnwjhvNjq                    26 thPZ… TTsqb… h            8\n##  64 TQPtgfgdPcdSQhjwHhHBLS                        22 TQPt… SQhjw… Q           43\n##  65 RrqCqVVbJmVRJmsrzmJpWljlSHLSBwSSRWllWv        38 RrqC… pWljl… R           44\n##  66 CVrDNbHrJHVMCbrDJsdFdFcPFZngMfFdTPfP          36 CVrD… dFdFc… M           39\n##  67 NNlZgndqmGVGGVZNWQmWmbhbbhpbbhtCbhtgCpCt…     42 NNlZ… bhbbh… g            7\n##  68 THfLPTzwJTJrvHRwwsbFbhfbMCpphVtBbB            34 THfL… sbFbh… f            6\n##  69 RjrvzHLzPDvLzPHrTJVrwPndZQNlDZGndZWDdNNc…     44 Rjrv… ndZQN… D           30\n##  70 tjDsjDGtTjVVbQVCggvrbg                        22 tjDs… VbQVC… V           48\n##  71 qrWWRBllRFrdlSMCdbSJCP                        22 qrWW… dlSMC… l           12\n##  72 cZcncRnhphpZWRNtrmsrGpHffmwH                  28 cZcn… Ntrms… p           16\n##  73 qpRjdcqTcMbbMRTwtnplnwnhPzhBhw                30 qpRj… wtnpl… p           16\n##  74 FSFLvNrsPNrsGSLsrFSGfnwBQwZnZwhQQLwwQhnn      40 FSFL… fnwBQ… L           38\n##  75 sWNVmVmCFNWGsCrrjRTmMjRjPRqgJqJg              32 sWNV… jRTmM… m           13\n##  76 sVCnzVpmFpVSnNFCmnmzwRFDWDdMllDccMdwDMjW…     46 sVCn… DWDdM… w           23\n##  77 BJbPJGGGHPZqZQbpMlWWMWlBljjjgDjh              32 BJbP… MlWWM… B           28\n##  78 tGQPpZtfTPpqrHsVLSzmRNLtSFsN                  28 tGQP… sVLSz… t           20\n##  79 WCDlBWWlvMFWlQWpmSZdZnNmGfJZFZ                30 WCDl… pmSZd… F           32\n##  80 LqjTjgtjPcHTTJgLThztcLTLnHnmdSpZdpdffnmZ…     48 LqjT… nHnmd… H           34\n##  81 PtzqzjtqJgggzhqqccqhrQMsMvMwrCwMlBvMwvvs…     42 Ptzq… QMsMv… r           18\n##  82 NMsJfsHTMVbjnLnVsC                            18 NMsJ… VbjnL… s           19\n##  83 htWllhmZcWDWBwhZPcmpVRjnVMRLCCjLFpCwRb        38 htWl… pVRjn… w           23\n##  84 PmZMrBtcPmZWhzDWBtMmJQdddHfQGNSqHqQGGTgr      40 PmZM… JQddd… r           18\n##  85 NmfnnsPlHnGqnlsNNmRPltRLvrhvrSGJSJjvFFFS…     46 Nmfn… Lvrhv… G           33\n##  86 PzQZccVPVwgPjrJSJjhFFpQr                      24 PzQZ… jrJSJ… Q           43\n##  87 TdwBgdTVwzdwzlmNfRqPmqqTql                    26 TdwB… lmNfR… T           46\n##  88 BVLLBPmPmWBlMlLJnJlBlFQVgdRDdRZRZHpZjQzd…     48 BVLL… gdRDd… Q           43\n##  89 trGTsfbTTgHZptzSZW                            18 trGT… gHZpt… t           20\n##  90 fsfTNcCqqNhhVhVFVhVBWLLB                      24 fsfT… VhVFV… h            8\n##  91 LJwgJNfbCvwCJCwBCCNhhHmGHWWSMWmWmbMmTmmG…     42 LJwg… HmGHW… b            2\n##  92 lzRnnltsstZzzRTfHtHWHGWftfHW                  28 lzRn… TfHtH… t           20\n##  93 ZFFzVFqzqlFcZscZpRZsNphjhjvjfgJhQgQvwvhC      40 ZFFz… Nphjh… p           16\n##  94 HHzcFNcHFjhjZjlrghLL                          20 HHzc… hjZjl… j           10\n##  95 pMZJptpZWCmpttRMCWnnDnBGGDLhlLQrhl            34 pMZJ… WnnDn… W           49\n##  96 MJsMCTZTTpTJRmMCJzfNsNcfNHqzvvfcww            34 MJsM… zfNsN… s           19\n##  97 ZDtllsDlVsrQBqQqRfWl                          20 ZDtl… rQBqQ… l           12\n##  98 wvJgpPhhscgvpJFNrRjRrWRjqrRjdjRv              32 wvJg… rRjRr… v           22\n##  99 zpsNzCsNCJCCPPHSLzznMnDSLGLM                  28 zpsN… HSLzz… z           26\n## 100 rfrJjFWrwjpnJjjjfrjJJnFVTgTggRWRRRPPLQgC…     46 rfrJ… VTgTg… W           49\n## 101 sSNbSvqmsSZDZZBtNTTPGgMLMRVcgPCMRb            34 sSNb… TTPGg… b            2\n## 102 zZDZzNNSmrfpjFCjzj                            18 zZDZ… rfpjF… z           26\n## 103 dbbNJPBbbrFqNqttqrGbqDcmDQRmFmwcwSnQSDcp…     42 dbbN… DcmDQ… F           32\n## 104 ZMMTsHjzLlLcnSVwpRRQ                          20 ZMMT… LcnSV… L           38\n## 105 hZTWjWvTZzTTWhszfwbJhrgJqtBbJGdqNPqt          36 hZTW… bJhrg… h            8\n## 106 rrqgHrgtcHJRRjWZlRvnnWBn                      24 rrqg… RjWZl… R           44\n## 107 QbhVmdFppwbdjnMvlnBwMWZP                      24 QbhV… jnMvl… w           23\n## 108 TpFDdVTFTDfhHfJcSJSzGZGf                      24 TpFD… HfJcS… f            6\n## 109 sqNTNZHsHjjFBBwJMMNMcCJD                      24 sqNT… BBwJM… N           40\n## 110 WGLQPjfWfQWPWmtLSRRRLwBJDbtCCJJCbbwCMBbM…     42 WGLQ… wBJDb… t           20\n## 111 RnPdLQfPLRdndGGRvfjlgdrTTgTsrgTrZFzF          36 RnPd… jlgdr… d            4\n## 112 BfHbjVVqSBFfMSlCLCDrGSQssvlr                  28 BfHb… lCLCD… S           45\n## 113 tTpnnzpcPnwzhcnJTDtTPRprGlRGGGCWlQsWvrlv…     46 tTpn… rGlRG… R           44\n## 114 DPwhghDTpPVHqqdgZbZq                          20 DPwh… VHqqd… g            7\n## 115 ZzPqfGPtRtqfqPbqfGgGZbrhMjmjBCpHpHNCmHtH…     46 ZzPq… hMjmj… t           20\n## 116 QJwllvFWwDvnwCBBzjwwpC                        22 QJwl… nwCBB… w           23\n## 117 ccJLVQzWFJvVJlVbgrZZLZLRRPSgdr                30 ccJL… bgrZZ… L           38\n## 118 rBGbLbnTfnZrQbTnHldqsMmHsqlsWfMd              32 rBGb… Hldqs… f            6\n## 119 JcJjCCPzPtjCNHdlGGMlll                        22 JcJj… CNHdl… C           29\n## 120 jjgpRRvcGbwpThVppT                            18 jjgp… bwpTh… p           16\n## 121 ttDfjtqfjtpTWWwfTbtlWccNGRSZNGPGhZGhGhcw…     42 ttDf… ccNGR… w           23\n## 122 LbCrHdvzLSSHmSRNmc                            18 LbCr… SSHmS… H           34\n## 123 JCsBvrvBLzFQbbvlVVnpQpDtWlDqfq                30 JCsB… lVVnp… Q           43\n## 124 vvdvJBfvdTvRBflBJPNmmffmgPCMwDgsss            34 vvdv… PNmmf… f            6\n## 125 rFjqLnMcnqrrtMLtjNgCPCsNzzgsPCGFNs            34 rFjq… NgCPC… F           32\n## 126 VqLqnLVZqjMZqWnrVtWlZJJSvHvBdRSvBdRvvJ        38 VqLq… lZJJS… Z           52\n## 127 zZBDzgQQZLlcglzjrCrCMFjGZbMsHm                30 zZBD… jrCrC… Z           52\n## 128 PnnJVRfttTtwVnnVFGHVsjCFCjrsMM                30 PnnJ… VFGHV… V           48\n## 129 wPRpRpRnNTpPNlBdQQDdgDNMhN                    26 wPRp… lBdQQ… N           40\n## 130 bNQpFpnwgtDHpbnhWtffmfmhvhhfsZ                30 bNQp… hWtff… t           20\n## 131 LcdLdwCLPPSVSqqwZGhWdJhGJZhlGlsm              32 LcdL… ZGhWd… d            4\n## 132 TBwSLPSPVRSVqSVqVrcnpMDDngMgnQpbRQFDNH        38 TBwS… npMDD… R           44\n## 133 vPSvBJZSSdJgpJJZBDGDGrdqGdllGrGDrh            34 vPSv… DGDGr… d            4\n## 134 HMtsltFlRVVFtlscRjjMcsWwWChWmrnwDWGwChmj…     44 HMts… WwWCh… j           10\n## 135 MQHNlTVHNVHpbbpbTvvBvf                        22 MQHN… pbbpb… T           46\n## 136 VsbPMwhbWhzdpzNNggnBcTBWNngQ                  28 VsbP… NNggn… W           49\n## 137 RmtZZFZqSjqVHmGQNcBHNLGLGHQH                  28 RmtZ… GQNcB… H           34\n## 138 JjRClqCjZlDZmqSqljFZZqRCvsvPfshhMdwsDwbV…     48 JjRC… vsvPf… D           30\n## 139 bfGtRgfDtVmsMzTbmz                            18 bfGt… VmsMz… b            2\n## 140 LjGZwQLLdjFdHLNMhmzBzMNHNmzN                  28 LjGZ… NMhmz… H           34\n## 141 wjQLCFvnnQGdZLGWSjdqWDfPlrRpqRDDRqrpPr        38 wjQL… qWDfP… W           49\n## 142 pqnBZqjCNCqQqmllpHGMGdTfML                    26 pqnB… mllpH… p           16\n## 143 PsFgrRvSPsWTwWWQwGHLHW                        22 PsFg… TwWWQ… W           49\n## 144 SrvgsFbrrPJJFsrFPtFSCChBDQjqCqtNhDqhCqNC      40 Srvg… CChBD… t           20\n## 145 RJZRWZWMWZPZffRCPWMdRdfQQQjJzHQsssjrSQFV…     46 RJZR… QQQjJ… J           36\n## 146 NgpnDgvGTNTVFHFFjVFF                          20 Ngpn… TVFHF… T           46\n## 147 jntvgljpGvlnbLtLbBvnLRPlCCwwCfRqMCCqqqdd…     42 jntv… RPlCC… l           12\n## 148 PFBMVDSVPHMTThtMtSBMMVNbQprHbNRgNRRgLnvp…     44 PFBM… NbQpr… H           34\n## 149 scGcrcwlswdGlcqvbQgnnpQnqLjnpp                30 scGc… vbQgn… q           17\n## 150 ffwswWzcmlcWWsmcZhrDFrZMFZBMFzhM              32 ffws… ZhrDF… z           26\n## 151 LMdZGqdRSSZmCZMRfQjnggvlvggRcznz              32 LMdZ… fQjng… R           44\n## 152 tjjFhBrtpthpslcvvlcQzFnFvQ                    26 tjjF… lcvvl… F           32\n## 153 jrhbjtpJtbZqCLdWLq                            18 jrhb… bZqCL… b            2\n## 154 HBGBfBttZzbGbljPdpFddFqRmqRzRN                30 HBGB… PdpFd… z           26\n## 155 JDWghDDSDqmmDDpc                              16 JDWg… DqmmD… D           30\n## 156 CLvgMvChCvLphCTSShhMhQsBbfTfsGsrBfjfrljr…     44 CLvg… sBbfT… T           46\n## 157 RgHgDqDzqQqgcdHqcZGTNlGffGBDGZBTGZ            34 RgHg… ZGTNl… D           30\n## 158 LFLPWsmvrbwhwwswrTlTTCBNGFfGlNJZNS            34 LFLP… TlTTC… F           32\n## 159 vhrLnvhNmWvMsrvwqMdRcptQtztcjptz              32 vhrL… qMdRc… M           39\n## 160 sLMLsThhjgqLlsnsLgTLtMFcRbcPcJSwJbbSbtSW…     44 sLML… FcRbc… t           20\n## 161 fvrjjDjvNprdPwwJCCSrWPFP                      24 fvrj… PwwJC… r           18\n## 162 vfZdGzVzfvGGVGpBjnnMglTsgZlqsMlM              32 vfZd… jnnMg… Z           52\n## 163 TCVMfCfBnHHfLLPFWb                            18 TCVM… HHfLL… f            6\n## 164 GgQlGJzNzbzHcHHLlcPLHL                        22 GgQl… HcHHL… l           12\n## 165 tQbNQGgRZZCVtVMZ                              16 tQbN… ZZCVt… t           20\n## 166 QFFMzwjwngsvsBjGGJWbBbBWbB                    26 QFFM… BjGGJ… j           10\n## 167 QdmVDmVDWRPWVPVV                              16 QdmV… WRPWV… V           48\n## 168 QHtHSdDpLQCCSHrtqrdrttDfLgvnFvFghNszzwgn…     46 QHtH… fLgvn… L           38\n## 169 RzzTNpSRBzSBVpSRlHNSHBSSGPcLNGtjhPPcbcGh…     48 RzzT… GPcLN… N           40\n## 170 CCmmCwwdfFJqDmdwsddhsmvdcMbLfcftttbPnjMP…     48 CCmm… cMbLf… f            6\n## 171 mdZQmvssFdqsFZvsZQmvDvmWzgQBWTRzTzHlppWR…     46 mdZQ… WzgQB… Q           43\n## 172 VWmnfQWzWWnHWMfmmMVNMfWjtBtBNSNSrlStlpjJ…     46 VWmn… jtBtB… N           40\n## 173 cZZvbwsZsbbZvvscCRdFTTTQrBStdBJgSdhjgBjB…     46 cZZv… QrBSt… d            4\n## 174 wCFTCbZbFwwCTvFTwsPGccMzMDWVWfzLGmqHnnDH…     44 wCFT… MzMDW… G           33\n## 175 sNQQHbbhdlpdrQllqpsqSpGjZDZGgDnVcnjjnnDZ      40 sNQQ… SpGjZ… p           16\n## 176 WWRLGFvJBJPvzzWjnTncDVZTTPgDff                30 WWRL… jnTnc… P           42\n## 177 FLRLGRFRJLBWJmJzMRLCvldrMrbbltdhQQlNqtMb…     42 FLRL… ldrMr… M           39\n## 178 HZllwlZSlSZwhvmQjcZhTqcT                      24 HZll… hvmQj… Z           52\n## 179 sPzzdgpszpzsBdvvMccvcqPThjhM                  28 sPzz… vvMcc… P           42\n## 180 JDdsDspLzsdzBgVdBGBzCLlwbbwWSnlnnWffHwJc…     44 JDds… lwbbw… J           36\n## 181 nzCTCnpqJqfCnvvjZjWjPcZrmcmZfW                30 nzCT… jZjWj… f            6\n## 182 GNdwgVjwRdRglMrPWLPWZWcNWW                    26 GNdw… MrPWL… N           40\n## 183 dVblgtRwQgSGVBldbQBbBRJnQJTsJHTqnzzJFpjv…     44 dVbl… JnQJT… Q           43\n## 184 dqpQQrdqQpLfqcGSdggQdgRMmwHBMMBVNRNDFFBD…     44 dqpQ… RMmwH… g            7\n## 185 vTzsnZCnlCnshbPlvZJbBzVmmVRDNwtHFBwMDVBR      40 vTzs… BzVmm… z           26\n## 186 lJCshjTJbVqfVdjjjG                            18 lJCs… VqfVd… j           10\n## 187 WlLCJlHLcZcJWcWZJnLHnPqlFtSthTnFNThVtNhV…     48 WlLC… FtSth… n           14\n## 188 QfbgRsspfDRsgfjqqRRpDbSNSTFzBbTbhttVBhVN…     44 Qfbg… SNSTF… b            2\n## 189 fwgfRdpdfQDqgPHHZJZCcdGddH                    26 fwgf… PHHZJ… d            4\n## 190 sbrbmVmfddzJntZZtwtMMf                        22 sbrb… JntZZ… f            6\n## 191 PvhwPRlvvWhFvSRhpFMMJGMFppnBTBGJ              32 Pvhw… pFMMJ… F           32\n## 192 RPlCCLDPDClwHbrdzsdNLzgs                      24 RPlC… Hbrdz… L           38\n## 193 HZgqtgbqRZvzwzCh                              16 HZgq… RZvzw… Z           52\n## 194 BFqmGfrNLQfhzJWBhRJwJR                        22 BFqm… hzJWB… B           28\n## 195 LFqFQjrcrcqFNMmMdHggntDPMnsDbn                30 LFqF… MdHgg… M           39\n## 196 NmWmPblGnnTTNlFGPmNWfwdchdlHdBdwcfCfZppZ      40 NmWm… fwdch… l           12\n## 197 rzqzRjgVrJrzzcFdqdCBFBhZhH                    26 rzqz… cFdqd… q           17\n## 198 VDRsRMjRJJrQsJPTGFNvsbnsnLGm                  28 VDRs… PTGFN… s           19\n## 199 nrbrBLTffjNRzGQSJHJQGT                        22 nrbr… RzGQS… T           46\n## 200 tcZqMcppCmHRQPGGCG                            18 tcZq… mHRQP… C           29\n## 201 pMDcZhpgcpFDfrwNDDrLVjGj                      24 pMDc… frwND… D           30\n## 202 LWlmlmWqvrBMWWBlmjLThBrfPJZfZZCwPCJJwPCT…     46 LWlm… fPJZf… T           46\n## 203 pSbRHbzpHDVFRQRfPdfnZswgcJcppp                30 pSbR… fPdfn… p           16\n## 204 SzRNGbzSWNPLWqLv                              16 SzRN… WNPLW… N           40\n## 205 vqslblpspsvqBFSqcrrZZDdTfFPHccrf              32 vqsl… crrZZ… F           32\n## 206 GWRhWmjwhRcQdCDrPjDP                          20 GWRh… cQdCD… j           10\n## 207 mcWLVnnWJgGRzVSsVSpSSptNpMvb                  28 mcWL… SsVSp… V           48\n## 208 wHTPfdTvHlPHGpdvvTddGfcJLLWWwWWcCWrqrVMW…     44 wHTP… cJLLW… w           23\n## 209 zhsSNZhnshNSnvZmvsCWWSLrVMcrSCLWJcrq          36 zhsS… CWWSL… S           45\n## 210 snDnshmNsjnTdHPfDGvdDT                        22 snDn… TdHPf… D           30\n## 211 CfrnFFMnnsRNrNCwFCrdssgqgqvVZvZqlTWBNWZq…     44 Cfrn… gqgqv… N           40\n## 212 htDhDLhwPWWBqTghgB                            18 htDh… WWBqT… h            8\n## 213 DPLPzHDtSPStjLGLtzSMwbdMdnCHrRdCFsmfnR        38 DPLP… MwbdM… H           34\n## 214 nBNWCvJmVPNnCPNDJWbtmSwqTttcQsSqtqTjQQ        38 nBNW… tmSwq… m           13\n## 215 pMflzLlffRRMRdFlflpLddGdsTjwHqzcvwTqtsSt…     48 pMfl… sTjwH… z           26\n## 216 ZhGlphlpvvLLfFGvMLhfrfWNJNNPVPbnPhnDgDbD…     44 ZhGl… WNJNN… h            8\n## 217 ZCpCmVlZvlpBBwvvMCrJhrfhMfjjWMSG              32 ZCpC… MCrJh… C           29\n## 218 qhstFzFFqzHGzNfSMJSGzM                        22 qhst… GzNfS… z           26\n## 219 QnHRPRgRQPtPhtnDsqsbDQPBlTcpBwmVmTvbwdwB…     46 QnHR… BlTcp… b            2\n## 220 PHmqHdddqBWMmTvMvTGMBWPdwhssnnHlhgsNwhwN…     48 PHmq… whssn… H           34\n## 221 cSbVcDLtbfLSFzhlhJswgtrsww                    26 cSbV… zhlhJ… t           20\n## 222 bSLlFLFFLDZVLpZVjFLdPMdBBqGGPmmqWGdGjM        38 bSLl… dPMdB… j           10\n## 223 FQCnQwFRbnrSfgQgwFRCnswmPLpMppPdMMllpLMp…     48 FQCn… PLpMp… S           45\n## 224 cJhhJcJVBJjhfHDvJqThvVDcpdGGqdZGdlltpqWd…     48 cJhh… pdGGq… q           17\n## 225 HhzTjJBzJTvNJHvzvvNBzBFnFCNCbCwrbnRbgRwf…     44 HhzT… FnFCN… N           40\n## 226 jRzDgbDDQDgVqqDGsjttNdwqNJZNwNdTWrpB          36 jRzD… ttNdw… q           17\n## 227 MHvvvlSHFllMhhMrpWBJtlWdpJrTwZ                30 MHvv… rpWBJ… l           12\n## 228 mFcFFHmCmtcvfvFFHHLDGnRVzjDgnmgmnzGgGg        38 mFcF… DGnRV… m           13\n## 229 JJhDpDdmsJJdgmhrpPjGjFLPPSNpjL                30 JJhD… rpPjG… p           16\n## 230 WbznbRGnPfrfRSrN                              16 Wbzn… PfrfR… R           44\n## 231 WqGnnVGVMGHtWTCgJvZHggBggZCg                  28 WqGn… CgJvZ… H           34\n## 232 wlrPQtZQvwrzlvNfZLMZBjbbqjqLbSBjTg            34 wlrP… LMZBj… Z           52\n## 233 PGJDVdsdhsPVPjbTcLcGLgjqbM                    26 PGJD… jbTcL… G           33\n## 234 VPDRHWRdsRQvpfmmlw                            18 VPDR… RQvpf… R           44\n## 235 pvTZTSpTZvGGphNvvbDpdrMqrjlWdPqqjWdldNrd      40 pvTZ… drMqr… N           40\n## 236 gmmJmsQfJgcRQJQJJncVQjMWllSnqljqBlPPjPHH…     42 gmmJ… jMWll… n           14\n## 237 QVJQRVcwmJcchwpSZLwGbSZZ                      24 QVJQ… hwpSZ… w           23\n## 238 zjrDMWcjDzQjDlWrnqqRBRNhBJRBhBJqnf            34 zjrD… qqRBR… n           14\n## 239 TTGPPdgGLwdHGwGPTgLbbvhHtRRNRRSfchqRvSqH…     42 TTGP… vhHtR… H           34\n## 240 TZTccPpdZwPQjllsspjVzD                        22 TZTc… Qjlls… p           16\n## 241 jHLHhHFRjhcblDRRWbWTdtppLTntTnMmGLMvTp        38 jHLH… Tdtpp… L           38\n## 242 BBQBgBBCrrgqJqTtMZMpngdtpvpG                  28 BBQB… TtMZM… g            7\n## 243 QJJJQrsVsQQfQVPCNqsNSjHdhhdRHDNHFHFclh        38 QJJJ… NSjHd… N           40\n## 244 RbCLnvdtnLRLRbmLPpHdQCvmNJpJSZSJlgDzglGl…     48 RbCL… NJpJS… p           16\n## 245 qBBwMjfsFMjsMbfWbwjlzDZlcWclJczgNDGNDl        38 qBBw… lzDZl… W           49\n## 246 wqjhrwwhhCvbQPrRnC                            18 wqjh… CvbQP… r           18\n## 247 vpWDDDWZQQNGllwHlwWVGj                        22 vpWD… GllwH… W           49\n## 248 LCPdqdcdtsvdsCtsddvmVrVjjrBwHlmswmBnmw        38 LCPd… mVrVj… s           19\n## 249 fLfvSgvMfdCPqzZNThfNNpTJJQ                    26 fLfv… zZNTh… f            6\n## 250 CVVVLbNVmGNQbGbGHHbHbvdwgQlwJDTFgJQdDZDJ…     42 CVVV… vdwgQ… Q           43\n## 251 ssWBsBWrjSzWrPtBjnSCTwvFZlDjwZDdgwTDwggv      40 ssWB… TwvFZ… j           10\n## 252 nntPBqBrPsBfnCRCBWzCVcGVHMLNcbHLNmHqGphp      40 nntP… VcGVH… q           17\n## 253 sbbwwzdsbqQQbQnnNbPNGbznHHRdLTggMVHFVvRZ…     48 sbbw… HHRdL… d            4\n## 254 mWffDWfflBpfmcWjWrrJVvgRLlMZVVhMFFTlHhMM      40 mWff… VvgRL… l           12\n## 255 rJJCctmjcfvzsqsqbtbqPP                        22 rJJC… zsqsq… t           20\n## 256 HGWjHWzVctQVcJVtjvRsvLTddqDDDsjRLg            34 HGWj… vRsvL… j           10\n## 257 bbMnlNChZQLZhdDs                              16 bbMn… ZQLZh… h            8\n## 258 SMMMMMMNmMllSlrmCczGcVzBcGWFBQGcrt            34 SMMM… czGcV… r           18\n## 259 VwQlqcLfdLGqdqDjjgZrjZBdttjd                  28 VwQl… DjjgZ… d            4\n## 260 zSPPPJzJGjJjZrCBDt                            18 zSPP… jJjZr… J           36\n## 261 WMTMsTWsccsvGGwH                              16 WMTM… ccsvG… s           19\n## 262 hZvbQrjTTZjZcjWNrjnQrcTRpGMqcRfRRGzHfHfp…     46 hZvb… RpGMq… c            3\n## 263 mDJlFmwCVVwbCVbPBRLMMLpRLwRLHqpR              32 mDJl… BRLMM… w           23\n## 264 gsCmgJsPDCtCVlvbhgQjhgQbnQbd                  28 gsCm… vbhgQ… g            7\n## 265 fSgbhhGPGJGhRDmlhhHcHDBH                      24 fSgb… RDmlh… h            8\n## 266 LsMwQWFswsQMsQMvjslcBcDldBTWfDcHRRdl          36 LsMw… lcBcD… W           49\n## 267 ZpVFwLQwVLQvCVsMjrJbbCNPbzSJtPbPPf            34 ZpVF… rJbbC… C           29\n## 268 VDzWMCpfCcCRDzqDzqNnvLZnfntHQnPPLQlt          36 VDzW… NnvLZ… f            6\n## 269 sJmdbTBdmmGhFhhbJNNQlJnQlQLHPZNn              32 sJmd… JNNQl… J           36\n## 270 sdwmwsdrmMRpDRMLcw                            18 sdwm… MRpDR… w           23\n## 271 JpWmSWpCnCbJBZHZVldbdfZf                      24 JpWm… BZHZV… b            2\n## 272 rgdrgNdrjgNPrMjwTssrPdfDZqsVfQHDFlQDDHQV…     44 rgdr… fDZqs… s           19\n## 273 TRPdNNLgjNwrRTrJpppzCmzmCLSnvS                30 TRPd… Jpppz… L           38\n## 274 QbtQJHQmbmfmBRvbQRzBvldqcFljsGcFdGdvsqqG…     42 QbtQ… ldqcF… v           22\n## 275 ChCPWhDhWZWJVnZpCNChhVDcMcDdcdgGscjgFjGF…     46 ChCP… cMcDd… D           30\n## 276 WZNTWNhNZfJJbTJTmR                            18 WZNT… fJJbT… T           46\n## 277 CHGCHFcZvCrchrZrhsVtsBQjMstfZMMBgg            34 CHGC… sVtsB… Z           52\n## 278 NNqwDLmDjJgQBmVQ                              16 NNqw… jJgQB… m           13\n## 279 wdWLLTgWRTWcCcbrHCHhGW                        22 wdWL… cCcbr… W           49\n## 280 bTZZvNjNjLgTCHcWhccfhWJdhvnc                  28 bTZZ… cWhcc… v           22\n## 281 mnFFmPGSwRPShzVPPWPdhhzr                      24 mnFF… hzVPP… P           42\n## 282 FRtBFGBMFQFttRwtZgTjCTnQNbNLjTCH              32 FRtB… ZgTjC… Q           43\n## 283 bJSqrSpDJbSNbFjSFCfPWGcwGWPrcTCfwr            34 bJSq… CfPWG… r           18\n## 284 tRtLhDsvhQZlHRhRtQQnCnCcdwCPwTwdGcGP          36 tRtL… QnCnC… Q           43\n## 285 HsHvsmBZvmvsmBhHvLssVqDSNgFMDzgbbDVJzbpM…     42 HsHv… qDSNg… V           48\n## 286 nSSDHRRRQRBCLCQC                              16 nSSD… QRBCL… R           44\n## 287 qGmfPzGmGlrrrpfrqlzrJtLvBlhQbSCvbtCtlFhL…     42 qGmf… tLvBl… l           12\n## 288 zzpmqqJJVVfJfPfMpfdHNndsNwDSMSDDNcsc          36 zzpm… dHNnd… M           39\n## 289 CscQsVMhCsMsMHhhVthtwmgZNRqzWLBRLRLmBWmZ…     44 CscQ… gZNRq… m           13\n## 290 JQJdddrjrLqBgDBq                              16 JQJd… rLqBg… r           18\n## 291 QbFlTffpMbMnsPCh                              16 QbFl… MbMns… b            2\n## 292 gDdbVbVDddDfVfWQfBRLQZsZLRQQ                  28 gDdb… WQfBR… f            6\n## 293 FCCTrGCMStwGHTtTWLQhLZrlRssRhRhp              32 FCCT… WLQhL… r           18\n## 294 FSHqtFTmFwmCsSwGTHtMTSdjjcdnVddgzmbVmjmn…     44 FSHq… djjcd… m           13\n## 295 JtBBMcLWLdfFLhMttcWWhfWLrTRGFsbwTmRGwmwb…     48 JtBB… rTRGF… F           32\n## 296 PzQpSQQQvzVvpzHqjvNvQSvGRmmTDVRDmsGsRGsr…     46 PzQp… GRmmT… V           48\n## 297 cQPHSPvPvZHqcZjzpZjnZNtWlLdtldJWfnfhlJJt…     44 cQPH… tWlLd… n           14\n## 298 nPPssTBnMJPdtHPVHtRhpv                        22 nPPs… dtHPV… P           42\n## 299 bSSgGFWDgWwDFFlmWlcShqdpRqpVcHvvnqpvpRHd      40 bSSg… hqdpR… c            3\n## 300 bGFnGljgSsjBCTBszz                            18 bGFn… sjBCT… j           10",
    "crumbs": [
      "2022",
      "Day 3: Rucksack Reorganization"
    ]
  },
  {
    "objectID": "solutions/2022/03.html#part-two",
    "href": "solutions/2022/03.html#part-two",
    "title": "Day 3: Rucksack Reorganization",
    "section": "Part Two",
    "text": "Part Two\n\nSolutionFull Table\n\n\n\nmatch_more &lt;- function(first, second) {\n    str_extract_all(string  = first,\n                    pattern = str_flatten(str_split_1(second, \"\"),\n                                          collapse = \"|\")) |&gt; \n        unlist() |&gt; # str_extract_all returns a list!\n        unique() |&gt; # remove duplicates\n        str_flatten(collapse = \"\")\n}\n\ngroups &lt;- tibble(rucksack = input,\n                 elf      = rep(c(\"elf1\", \"elf2\", \"elf3\"),\n                                times = length(input)/3),\n                 group    = rep(1:(length(input)/3), each = 3)) |&gt; \n    \n    pivot_wider(names_from = elf, values_from = rucksack) |&gt; \n    \n    mutate(match_1_and_2 = map2_chr(elf1, elf2, match_more),\n           match         = map2_chr(match_1_and_2, elf3, match_one),\n           priority      = priority[match])\n\ngroups |&gt; \n    summarise(total_priority = sum(priority)) |&gt; \n    pull(total_priority) |&gt; \n    cat()\n## 2604\n\n\n\n\ngroups |&gt; print(n = nrow(groups))\n## # A tibble: 100 × 7\n##     group elf1                          elf2  elf3  match_1_and_2 match priority\n##     &lt;int&gt; &lt;chr&gt;                         &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;         &lt;chr&gt;    &lt;int&gt;\n##   1     1 RCMRQjLLWGTjnlnZwwnZJRZH      qnvf… BFpF… nZwJH         n           14\n##   2     2 DbWVcVRRdlLffvtqjTWNgQ        mJJM… mMhP… fvqjTNg       j           10\n##   3     3 qFcbmWFJqqWpRJcQWpqsQQQwSPCP… jGMj… DvzD… wSPCrHdNZt    t           20\n##   4     4 SPLPHQbJSbPsvTLmfDvVDctvWhcD… jdRR… rwgR… JmfDVcWhl     J           36\n##   5     5 GZhTVLztHrSzrRBz              MJWj… Mjgl… LrS           L           38\n##   6     6 rgDHBgBjRgRTgwzwthBnQwmBtB    MsMp… pZMp… Twzthnm       T           46\n##   7     7 TQVqZVBcBBdBfbpN              zvzr… hLWh… ZbpN          Z           52\n##   8     8 SqRGLHtSbtNTbhjFTjDDpF        WwgJ… JMPl… ShFD          S           45\n##   9     9 mZvmvPNmlNJPJzzmgNvNgdqqdBSp… nhDQ… VjCD… qBfHsw        w           23\n##  10    10 wwqnwZGGZqqMpMprpZqwGlLDtNDf… TSTc… SCLR… LDNfVm        L           38\n##  11    11 cJfqGjgGJcsgsPnghgBm          FHHb… lLLM… qsPnh         q           17\n##  12    12 cRdRDhsDFzPztwJdGP            CVqp… qfQf… twG           w           23\n##  13    13 nFWWzqWZQSqnJzNJzslJVsdV      vBBv… tBbp… JNsl          s           19\n##  14    14 LLssTJrqrpvrvvpJvdjggMlgzVgV… HwZw… RStt… jgMzVPF       M           39\n##  15    15 lJnNhMJqljlNhSrdWlGGGQHwwH    vbTp… sVTm… SrdWQHw       S           45\n##  16    16 DQtMjZHZHvMbwwTSpqLtpJ        FzVF… dNFF… wSpqLJ        L           38\n##  17    17 MVPTmPvbMgrTmmmmMRMvPvBwFGhh… fqqW… ZWSS… wGhDdL        L           38\n##  18    18 FSsHDmtFLbbFbLGg              vrvz… pdMw… SLbGg         S           45\n##  19    19 RgbmfGtmRVgLLSVSnSrWWSHhnh    ccTv… pqNj… bnWHh         b            2\n##  20    20 qsSVpSVfWqgNrVtWptpmSfqbPQlj… dcGB… CFBv… rbPljHDRw     r           18\n##  21    21 sjsTgNSNqSjgMmVPmmmrpH        RftC… thPZ… mVPrpH        P           42\n##  22    22 TQPtgfgdPcdSQhjwHhHBLS        RrqC… CVrD… SjwHBL        H           34\n##  23    23 NNlZgndqmGVGGVZNWQmWmbhbbhpb… THfL… Rjrv… VbhptCMF      V           48\n##  24    24 tjDsjDGtTjVVbQVCggvrbg        qrWW… cZcn… bCr           r           18\n##  25    25 qpRjdcqTcMbbMRTwtnplnwnhPzhB… FSFL… sWNV… wnhPB         P           42\n##  26    26 sVCnzVpmFpVSnNFCmnmzwRFDWDdM… BJbP… tGQP… pDWMljg       p           16\n##  27    27 WCDlBWWlvMFWlQWpmSZdZnNmGfJZ… LqjT… Ptzq… pmSZdnGfJ     J           36\n##  28    28 NMsJfsHTMVbjnLnVsC            htWl… PmZM… MVbjnLC       M           39\n##  29    29 NmfnnsPlHnGqnlsNNmRPltRLvrhv… PzQZ… TdwB… PrhSJjF       P           42\n##  30    30 BVLLBPmPmWBlMlLJnJlBlFQVgdRD… trGT… fsfT… WgZHpz        W           49\n##  31    31 LJwgJNfbCvwCJCwBCCNhhHmGHWWS… lzRn… ZFFz… fHGWT         f            6\n##  32    32 HHzcFNcHFjhjZjlrghLL          pMZJ… MJsM… hZlrL         Z           52\n##  33    33 ZDtllsDlVsrQBqQqRfWl          wvJg… zpsN… srqRW         s           19\n##  34    34 rfrJjFWrwjpnJjjjfrjJJnFVTgTg… sSNb… zZDZ… VTgRPLCc      C           29\n##  35    35 dbbNJPBbbrFqNqttqrGbqDcmDQRm… ZMMT… hZTW… cQRwSnp       w           23\n##  36    36 rrqgHrgtcHJRRjWZlRvnnWBn      QbhV… TpFD… jWZlvnB       Z           52\n##  37    37 sqNTNZHsHjjFBBwJMMNMcCJD      WGLQ… RnPd… jBwJMcCD      j           10\n##  38    38 BfHbjVVqSBFfMSlCLCDrGSQssvlr  tTpn… DPwh… lCDrGQsv      D           30\n##  39    39 ZzPqfGPtRtqfqPbqfGgGZbrhMjmj… QJwl… ccJL… zjBCpn        z           26\n##  40    40 rBGbLbnTfnZrQbTnHldqsMmHsqls… JcJj… jjgp… GHldM         G           33\n##  41    41 ttDfjtqfjtpTWWwfTbtlWccNGRSZ… LbCr… JCsB… bcNRS         b            2\n##  42    42 vvdvJBfvdTvRBflBJPNmmffmgPCM… rFjq… VqLq… PNgCMs        M           39\n##  43    43 zZBDzgQQZLlcglzjrCrCMFjGZbMs… PnnJ… wPRp… jrCMFGsH      M           39\n##  44    44 bNQpFpnwgtDHpbnhWtffmfmhvhhf… LcdL… TBwS… whWmsZ        w           23\n##  45    45 vPSvBJZSSdJgpJJZBDGDGrdqGdll… HMts… MQHN… DGrqlh        l           12\n##  46    46 VsbPMwhbWhzdpzNNggnBcTBWNngQ  RmtZ… JjRC… VNBcQ         V           48\n##  47    47 bfGtRgfDtVmsMzTbmz            LjGZ… wjQL… GmMz          G           33\n##  48    48 pqnBZqjCNCqQqmllpHGMGdTfML    PsFg… Srvg… QHGTL         Q           43\n##  49    49 RJZRWZWMWZPZffRCPWMdRdfQQQjJ… Ngpn… jntv… jHFV          j           10\n##  50    50 PFBMVDSVPHMTThtMtSBMMVNbQprH… scGc… ffws… bQprgLnvj     r           18\n##  51    51 LMdZGqdRSSZmCZMRfQjnggvlvggR… tjjF… jrhb… Qjnvlcz       j           10\n##  52    52 HBGBfBttZzbGbljPdpFddFqRmqRz… JDWg… CLvg… pqm           p           16\n##  53    53 RgHgDqDzqQqgcdHqcZGTNlGffGBD… LFLP… vhrL… ZGTNlfB       N           40\n##  54    54 sLMLsThhjgqLlsnsLgTLtMFcRbcP… fvrj… vfZd… jFPJSwW       j           10\n##  55    55 TCVMfCfBnHHfLLPFWb            GgQl… tQbN… HLPb          b            2\n##  56    56 QFFMzwjwngsvsBjGGJWbBbBWbB    QdmV… QHtH… QW            Q           43\n##  57    57 RzzTNpSRBzSBVpSRlHNSHBSSGPcL… CCmm… mdZQ… PcLtjhbn      h            8\n##  58    58 VWmnfQWzWWnHWMfmmMVNMfWjtBtB… cZZv… wCFT… QjtBSrpJg     Q           43\n##  59    59 sNQQHbbhdlpdrQllqpsqSpGjZDZG… WWRL… FLRL… GjZDgnVc      G           33\n##  60    60 HZllwlZSlSZwhvmQjcZhTqcT      sPzz… JDds… hvjcTq        c            3\n##  61    61 nzCTCnpqJqfCnvvjZjWjPcZrmcmZ… GNdw… dVbl… jZWPcr        j           10\n##  62    62 dqpQQrdqQpLfqcGSdggQdgRMmwHB… vTzs… lJCs… RMmwHBVNDFt   V           48\n##  63    63 WlLCJlHLcZcJWcWZJnLHnPqlFtSt… Qfbg… fwgf… qFtShTNVz     q           17\n##  64    64 sbrbmVmfddzJntZZtwtMMf        Pvhw… RPlC… JnwM          w           23\n##  65    65 HZgqtgbqRZvzwzCh              BFqm… LFqF… qRzwh         q           17\n##  66    66 NmWmPblGnnTTNlFGPmNWfwdchdlH… rzqz… VDRs… FdchHBCZ      F           32\n##  67    67 nrbrBLTffjNRzGQSJHJQGT        tcZq… pMDc… RGQH          G           33\n##  68    68 LWlmlmWqvrBMWWBlmjLThBrfPJZf… pSbR… SzRN… fPJZwcgsd     P           42\n##  69    69 vqslblpspsvqBFSqcrrZZDdTfFPH… GWRh… mcWL… crDdP         c            3\n##  70    70 wHTPfdTvHlPHGpdvvTddGfcJLLWW… zhsS… snDn… vcJLWCrqVM    v           22\n##  71    71 CfrnFFMnnsRNrNCwFCrdssgqgqvV… htDh… DPLP… wgqTWB        w           23\n##  72    72 nBNWCvJmVPNnCPNDJWbtmSwqTttc… pMfl… ZhGl… vtSwqTcQsj    v           22\n##  73    73 ZCpCmVlZvlpBBwvvMCrJhrfhMfjj… qhst… QnHR… MJhfSG        h            8\n##  74    74 PHmqHdddqBWMmTvMvTGMBWPdwhss… cSbV… bSLl… whslgzr       l           12\n##  75    75 FQCnQwFRbnrSfgQgwFRCnswmPLpM… cJhh… HhzT… fpMdltZ       f            6\n##  76    76 jRzDgbDDQDgVqqDGsjttNdwqNJZN… MHvv… mFcF… tdwJZTWrpB    t           20\n##  77    77 JJhDpDdmsJJdgmhrpPjGjFLPPSNp… Wbzn… WqGn… rPGSN         G           33\n##  78    78 wlrPQtZQvwrzlvNfZLMZBjbbqjqL… PGJD… VPDR… PLMjbqTg      P           42\n##  79    79 pvTZTSpTZvGGphNvvbDpdrMqrjlW… gmmJ… QVJQ… SMqjlWP       S           45\n##  80    80 zjrDMWcjDzQjDlWrnqqRBRNhBJRB… TTGP… TZTc… cqRNhJf       c            3\n##  81    81 jHLHhHFRjhcblDRRWbWTdtppLTnt… BBQB… QJJJ… TdtpnMGv      d            4\n##  82    82 RbCLnvdtnLRLRbmLPpHdQCvmNJpJ… qBBw… wqjh… bNJZlgDzGc    b            2\n##  83    83 vpWDDDWZQQNGllwHlwWVGj        LCPd… fLfv… vlwHVj        v           22\n##  84    84 CVVVLbNVmGNQbGbGHHbHbvdwgQlw… ssWB… nntP… CvdwglDTFZ    C           29\n##  85    85 sbbwwzdsbqQQbQnnNbPNGbznHHRd… mWff… rJJC… HRLTgMVFvZ    v           22\n##  86    86 HGWjHWzVctQVcJVtjvRsvLTddqDD… bbMn… SMMM… QsLdD         Q           43\n##  87    87 VwQlqcLfdLGqdqDjjgZrjZBdttjd  zSPP… WMTM… GDjZrBt       G           33\n##  88    88 hZvbQrjTTZjZcjWNrjnQrcTRpGMq… mDJl… gsCm… bRpMqH        b            2\n##  89    89 fSgbhhGPGJGhRDmlhhHcHDBH      LsMw… ZpVF… fRDlHcB       f            6\n##  90    90 VDzWMCpfCcCRDzqDzqNnvLZnfntH… sJmd… sdwm… NnLZHQPl      L           38\n##  91    91 JpWmSWpCnCbJBZHZVldbdfZf      rgdr… TRPd… BZHVldf       d            4\n##  92    92 QbtQJHQmbmfmBRvbQRzBvldqcFlj… ChCP… WZNT… JldqcFjsG     J           36\n##  93    93 CHGCHFcZvCrchrZrhsVtsBQjMstf… NNqw… wdWL… VBQjg         g            7\n##  94    94 bTZZvNjNjLgTCHcWhccfhWJdhvnc  mnFF… FRtB… Whdn          n           14\n##  95    95 bJSqrSpDJbSNbFjSFCfPWGcwGWPr… tRtL… HsHv… DCPGcwT       D           30\n##  96    96 nSSDHRRRQRBCLCQC              qGmf… zzpm… SQBCL         S           45\n##  97    97 CscQsVMhCsMsMHhhVthtwmgZNRqz… JQJd… QbFl… QgqLBD        Q           43\n##  98    98 gDdbVbVDddDfVfWQfBRLQZsZLRQQ  FCCT… FSHq… WQRLZs        s           19\n##  99    99 JtBBMcLWLdfFLhMttcWWhfWLrTRG… PzQp… cQPH… crTRGsmCD     c            3\n## 100   100 nPPssTBnMJPdtHPVHtRhpv        bSSg… bGFn… ndHVRhpv      n           14",
    "crumbs": [
      "2022",
      "Day 3: Rucksack Reorganization"
    ]
  },
  {
    "objectID": "solutions/2023/01.html",
    "href": "solutions/2023/01.html",
    "title": "Day 1: Trebuchet?!",
    "section": "",
    "text": "Reference",
    "crumbs": [
      "2023",
      "Day 1: Trebuchet?!"
    ]
  },
  {
    "objectID": "solutions/2023/01.html#part-one",
    "href": "solutions/2023/01.html#part-one",
    "title": "Day 1: Trebuchet?!",
    "section": "Part One",
    "text": "Part One\n\nlibrary(tidyverse)\n\ntibble(original = read_lines(file = \"inputs/2023/01.txt\")) |&gt; \n    \n    mutate(first       = str_extract(original, pattern = \"\\\\d\"),\n           last        = str_extract(original, pattern = \"\\\\d(?=\\\\D*$)\"),\n           calibration = as.integer(paste0(first, last))) |&gt; \n    \n    summarise(sum = sum(calibration)) |&gt;\n    \n    pull(sum) |&gt; \n    cat()\n## 54338",
    "crumbs": [
      "2023",
      "Day 1: Trebuchet?!"
    ]
  },
  {
    "objectID": "solutions/2023/01.html#part-one-1",
    "href": "solutions/2023/01.html#part-one-1",
    "title": "Day 1: Trebuchet?!",
    "section": "Part One",
    "text": "Part One\n\nconvert_number &lt;- function(x) {\n    if (x %in% as.character(0:9))\n        return(x)\n    \n    else {\n        numbers &lt;- c(\"one\", \"two\", \"three\", \"four\", \"five\", \"six\",\n                     \"seven\", \"eight\", \"nine\")\n        \n        return(as.character(match(x, numbers)))\n    }\n}\n\ntibble(original = read_lines(file = \"inputs/2023/01.txt\")) |&gt; \n    mutate(first = str_extract(original, pattern = \"\\\\d|one|two|three|four|five|six|seven|eight|nine\"),\n           # this has problems with overlaps (for example \"2911threeninesdvxvheightwobm\" matches \"eight\" not \"two\")\n           #last  = str_extract(original,\n           #                    pattern = \"(\\\\d|one|two|three|four|five|six|seven|eight|nine)(?!.*(\\\\d|one|two|three|four|five|six|seven|eight|nine).*$)\")\n           original_rev = stringi::stri_reverse(original),\n           last = str_extract(original_rev, pattern = \"\\\\d|eno|owt|eerht|ruof|evif|xis|neves|thgie|enin\"),\n           last = stringi::stri_reverse(last)) |&gt; \n    \n    mutate(first = map_chr(first, convert_number),\n           last  = map_chr(last, convert_number)) |&gt; \n    \n    mutate(calibration = as.integer(paste0(first, last))) |&gt; \n    \n    summarise(sum = sum(calibration)) |&gt;\n    \n    pull(sum) |&gt; \n    cat()\n## 53389",
    "crumbs": [
      "2023",
      "Day 1: Trebuchet?!"
    ]
  }
]