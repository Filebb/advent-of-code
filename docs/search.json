[
  {
    "objectID": "solutions/2016/01.html",
    "href": "solutions/2016/01.html",
    "title": "Day 1: No Time for a Taxicab",
    "section": "",
    "text": "Reference"
  },
  {
    "objectID": "solutions/2016/01.html#part-one",
    "href": "solutions/2016/01.html#part-one",
    "title": "Day 1: No Time for a Taxicab",
    "section": "Part One",
    "text": "Part One\n\nSolutionchange_direction() testsFull Table\n\n\n\nlibrary(tidyverse)\n\n# read input\ninput &lt;- readLines(con = \"../../inputs/2016/01.txt\")\n\n# extract direction and length from input (first entry NA)\nmove &lt;- c(NA, str_split_1(string = input, pattern = \", \"))\n\nturn &lt;- str_extract(string = move, pattern = \"L|R\")\n\nlength &lt;- str_extract(string = move, pattern = \"[0-9]+\") |&gt; as.integer()\n\n# pre-allocate vectors for x/y-positions and x/y-direction\nposition_x &lt;- integer(length = length(move))\nposition_y &lt;- integer(length = length(move))\n\ndirection_x &lt;- integer(length = length(move))\ndirection_y &lt;- integer(length = length(move))\n\n# initialize position and direction (everything is pre-populated as 0)\n# position_x[1] &lt;- 0\n# position_y[1] &lt;- 0\n# \n# direction_x[1] &lt;- 0\ndirection_y[1] &lt;- 1L\n\nchange_direction &lt;- function(current_direction, turn) {\n    \n    if (turn == \"R\") new_direction &lt;- rev(current_direction) * c(1L, -1L)\n    if (turn == \"L\") new_direction &lt;- rev(current_direction) * c(-1L, 1L)\n    \n    return(new_direction)\n}\n\n# calculate directions and positions\nfor (i in 2:length(move)) {\n    # get current x/y-direction\n    current_direction &lt;- c(direction_x[i-1], direction_y[i-1])\n    \n    # calculate new direction\n    new_direction &lt;- change_direction(current_direction, turn[i])\n    \n    # update values\n    direction_x[i] &lt;- new_direction[1]\n    direction_y[i] &lt;- new_direction[2]\n    \n    # get current x/y-position\n    current_position &lt;- c(position_x[i-1], position_y[i-1])\n    \n    # calculate new position\n    new_position &lt;- current_position + new_direction * length[i]\n    \n    # update values\n    position_x[i] &lt;- new_position[1]\n    position_y[i] &lt;- new_position[2]    \n}\n\n# collect all vectors in a table\nmoves &lt;- tibble(move, turn, length,\n                direction_x, direction_y,\n                position_x, position_y) |&gt; \n    mutate(distance = abs(position_x) + abs(position_y))\n\n# result\nmoves |&gt; \n    select(distance) |&gt; \n    tail(1) |&gt; \n    pull() |&gt; \n    cat()\n## 288\n\n\n\n\n# tests for change_direction()\n\n# right turn\nchange_direction(c(0,1), \"R\")\n## [1] 1 0\nchange_direction(c(1,0), \"R\")\n## [1]  0 -1\nchange_direction(c(0,-1), \"R\")\n## [1] -1  0\nchange_direction(c(-1, 0), \"R\")\n## [1] 0 1\n\n# left turn\nchange_direction(c(0,1), \"L\")\n## [1] -1  0\nchange_direction(c(1,0), \"L\")\n## [1] 0 1\nchange_direction(c(0,-1), \"L\")\n## [1] 1 0\nchange_direction(c(-1, 0), \"L\")\n## [1]  0 -1\n\n\n\n\n# look at the full table\nmoves|&gt; print(n = 178)\n## # A tibble: 178 Ã— 8\n##     move  turn  length direction_x direction_y position_x position_y distance\n##     &lt;chr&gt; &lt;chr&gt;  &lt;int&gt;       &lt;int&gt;       &lt;int&gt;      &lt;int&gt;      &lt;int&gt;    &lt;int&gt;\n##   1 &lt;NA&gt;  &lt;NA&gt;      NA           0           1          0          0        0\n##   2 R4    R          4           1           0          4          0        4\n##   3 R3    R          3           0          -1          4         -3        7\n##   4 L3    L          3           1           0          7         -3       10\n##   5 L2    L          2           0           1          7         -1        8\n##   6 L1    L          1          -1           0          6         -1        7\n##   7 R1    R          1           0           1          6          0        6\n##   8 L1    L          1          -1           0          5          0        5\n##   9 R2    R          2           0           1          5          2        7\n##  10 R3    R          3           1           0          8          2       10\n##  11 L5    L          5           0           1          8          7       15\n##  12 L5    L          5          -1           0          3          7       10\n##  13 R4    R          4           0           1          3         11       14\n##  14 L4    L          4          -1           0         -1         11       12\n##  15 R2    R          2           0           1         -1         13       14\n##  16 R4    R          4           1           0          3         13       16\n##  17 L3    L          3           0           1          3         16       19\n##  18 R3    R          3           1           0          6         16       22\n##  19 L3    L          3           0           1          6         19       25\n##  20 R3    R          3           1           0          9         19       28\n##  21 R4    R          4           0          -1          9         15       24\n##  22 R2    R          2          -1           0          7         15       22\n##  23 L1    L          1           0          -1          7         14       21\n##  24 R2    R          2          -1           0          5         14       19\n##  25 L3    L          3           0          -1          5         11       16\n##  26 L2    L          2           1           0          7         11       18\n##  27 L1    L          1           0           1          7         12       19\n##  28 R3    R          3           1           0         10         12       22\n##  29 R5    R          5           0          -1         10          7       17\n##  30 L1    L          1           1           0         11          7       18\n##  31 L4    L          4           0           1         11         11       22\n##  32 R2    R          2           1           0         13         11       24\n##  33 L4    L          4           0           1         13         15       28\n##  34 R3    R          3           1           0         16         15       31\n##  35 R1    R          1           0          -1         16         14       30\n##  36 R2    R          2          -1           0         14         14       28\n##  37 L5    L          5           0          -1         14          9       23\n##  38 R2    R          2          -1           0         12          9       21\n##  39 L189  L        189           0          -1         12       -180      192\n##  40 R5    R          5          -1           0          7       -180      187\n##  41 L5    L          5           0          -1          7       -185      192\n##  42 R52   R         52          -1           0        -45       -185      230\n##  43 R3    R          3           0           1        -45       -182      227\n##  44 L1    L          1          -1           0        -46       -182      228\n##  45 R4    R          4           0           1        -46       -178      224\n##  46 R5    R          5           1           0        -41       -178      219\n##  47 R1    R          1           0          -1        -41       -179      220\n##  48 R4    R          4          -1           0        -45       -179      224\n##  49 L1    L          1           0          -1        -45       -180      225\n##  50 L3    L          3           1           0        -42       -180      222\n##  51 R2    R          2           0          -1        -42       -182      224\n##  52 L2    L          2           1           0        -40       -182      222\n##  53 L3    L          3           0           1        -40       -179      219\n##  54 R4    R          4           1           0        -36       -179      215\n##  55 R3    R          3           0          -1        -36       -182      218\n##  56 L2    L          2           1           0        -34       -182      216\n##  57 L5    L          5           0           1        -34       -177      211\n##  58 R4    R          4           1           0        -30       -177      207\n##  59 R5    R          5           0          -1        -30       -182      212\n##  60 L2    L          2           1           0        -28       -182      210\n##  61 R2    R          2           0          -1        -28       -184      212\n##  62 L1    L          1           1           0        -27       -184      211\n##  63 L3    L          3           0           1        -27       -181      208\n##  64 R3    R          3           1           0        -24       -181      205\n##  65 L4    L          4           0           1        -24       -177      201\n##  66 R4    R          4           1           0        -20       -177      197\n##  67 R5    R          5           0          -1        -20       -182      202\n##  68 L1    L          1           1           0        -19       -182      201\n##  69 L1    L          1           0           1        -19       -181      200\n##  70 R3    R          3           1           0        -16       -181      197\n##  71 L5    L          5           0           1        -16       -176      192\n##  72 L2    L          2          -1           0        -18       -176      194\n##  73 R76   R         76           0           1        -18       -100      118\n##  74 R2    R          2           1           0        -16       -100      116\n##  75 R2    R          2           0          -1        -16       -102      118\n##  76 L1    L          1           1           0        -15       -102      117\n##  77 L3    L          3           0           1        -15        -99      114\n##  78 R189  R        189           1           0        174        -99      273\n##  79 L3    L          3           0           1        174        -96      270\n##  80 L4    L          4          -1           0        170        -96      266\n##  81 L1    L          1           0          -1        170        -97      267\n##  82 L3    L          3           1           0        173        -97      270\n##  83 R5    R          5           0          -1        173       -102      275\n##  84 R4    R          4          -1           0        169       -102      271\n##  85 L1    L          1           0          -1        169       -103      272\n##  86 R1    R          1          -1           0        168       -103      271\n##  87 L1    L          1           0          -1        168       -104      272\n##  88 L1    L          1           1           0        169       -104      273\n##  89 R2    R          2           0          -1        169       -106      275\n##  90 L4    L          4           1           0        173       -106      279\n##  91 R2    R          2           0          -1        173       -108      281\n##  92 L5    L          5           1           0        178       -108      286\n##  93 L5    L          5           0           1        178       -103      281\n##  94 L5    L          5          -1           0        173       -103      276\n##  95 R2    R          2           0           1        173       -101      274\n##  96 L4    L          4          -1           0        169       -101      270\n##  97 L5    L          5           0          -1        169       -106      275\n##  98 R4    R          4          -1           0        165       -106      271\n##  99 R4    R          4           0           1        165       -102      267\n## 100 R5    R          5           1           0        170       -102      272\n## 101 L5    L          5           0           1        170        -97      267\n## 102 R3    R          3           1           0        173        -97      270\n## 103 L1    L          1           0           1        173        -96      269\n## 104 L3    L          3          -1           0        170        -96      266\n## 105 L1    L          1           0          -1        170        -97      267\n## 106 L1    L          1           1           0        171        -97      268\n## 107 L3    L          3           0           1        171        -94      265\n## 108 L4    L          4          -1           0        167        -94      261\n## 109 R5    R          5           0           1        167        -89      256\n## 110 L3    L          3          -1           0        164        -89      253\n## 111 R5    R          5           0           1        164        -84      248\n## 112 R3    R          3           1           0        167        -84      251\n## 113 R3    R          3           0          -1        167        -87      254\n## 114 L5    L          5           1           0        172        -87      259\n## 115 L5    L          5           0           1        172        -82      254\n## 116 R3    R          3           1           0        175        -82      257\n## 117 R4    R          4           0          -1        175        -86      261\n## 118 L3    L          3           1           0        178        -86      264\n## 119 R3    R          3           0          -1        178        -89      267\n## 120 R1    R          1          -1           0        177        -89      266\n## 121 R3    R          3           0           1        177        -86      263\n## 122 R2    R          2           1           0        179        -86      265\n## 123 R2    R          2           0          -1        179        -88      267\n## 124 L1    L          1           1           0        180        -88      268\n## 125 R1    R          1           0          -1        180        -89      269\n## 126 L3    L          3           1           0        183        -89      272\n## 127 L3    L          3           0           1        183        -86      269\n## 128 L3    L          3          -1           0        180        -86      266\n## 129 L1    L          1           0          -1        180        -87      267\n## 130 R2    R          2          -1           0        178        -87      265\n## 131 L1    L          1           0          -1        178        -88      266\n## 132 R4    R          4          -1           0        174        -88      262\n## 133 R4    R          4           0           1        174        -84      258\n## 134 L1    L          1          -1           0        173        -84      257\n## 135 L1    L          1           0          -1        173        -85      258\n## 136 R3    R          3          -1           0        170        -85      255\n## 137 R3    R          3           0           1        170        -82      252\n## 138 R4    R          4           1           0        174        -82      256\n## 139 R1    R          1           0          -1        174        -83      257\n## 140 L5    L          5           1           0        179        -83      262\n## 141 L2    L          2           0           1        179        -81      260\n## 142 R2    R          2           1           0        181        -81      262\n## 143 R3    R          3           0          -1        181        -84      265\n## 144 R2    R          2          -1           0        179        -84      263\n## 145 L3    L          3           0          -1        179        -87      266\n## 146 R4    R          4          -1           0        175        -87      262\n## 147 L5    L          5           0          -1        175        -92      267\n## 148 R1    R          1          -1           0        174        -92      266\n## 149 R4    R          4           0           1        174        -88      262\n## 150 R5    R          5           1           0        179        -88      267\n## 151 R4    R          4           0          -1        179        -92      271\n## 152 L4    L          4           1           0        183        -92      275\n## 153 R1    R          1           0          -1        183        -93      276\n## 154 L3    L          3           1           0        186        -93      279\n## 155 R1    R          1           0          -1        186        -94      280\n## 156 R3    R          3          -1           0        183        -94      277\n## 157 L2    L          2           0          -1        183        -96      279\n## 158 L3    L          3           1           0        186        -96      282\n## 159 R1    R          1           0          -1        186        -97      283\n## 160 L2    L          2           1           0        188        -97      285\n## 161 R3    R          3           0          -1        188       -100      288\n## 162 L3    L          3           1           0        191       -100      291\n## 163 L1    L          1           0           1        191        -99      290\n## 164 L3    L          3          -1           0        188        -99      287\n## 165 R4    R          4           0           1        188        -95      283\n## 166 L4    L          4          -1           0        184        -95      279\n## 167 L5    L          5           0          -1        184       -100      284\n## 168 R3    R          3          -1           0        181       -100      281\n## 169 R5    R          5           0           1        181        -95      276\n## 170 R4    R          4           1           0        185        -95      280\n## 171 R1    R          1           0          -1        185        -96      281\n## 172 L2    L          2           1           0        187        -96      283\n## 173 R3    R          3           0          -1        187        -99      286\n## 174 R5    R          5          -1           0        182        -99      281\n## 175 L5    L          5           0          -1        182       -104      286\n## 176 L4    L          4           1           0        186       -104      290\n## 177 L1    L          1           0           1        186       -103      289\n## 178 L1    L          1          -1           0        185       -103      288"
  },
  {
    "objectID": "solutions/2016/01.html#part-two",
    "href": "solutions/2016/01.html#part-two",
    "title": "Day 1: No Time for a Taxicab",
    "section": "Part Two",
    "text": "Part Two\n\nSolutionVisited Twice\n\n\n\n# change_direction() allows no change in direction\nchange_direction &lt;- function(current_direction, turn) {\n    \n    if (turn == \"R\") new_direction &lt;- rev(current_direction) * c(1L, -1L)\n    if (turn == \"L\") new_direction &lt;- rev(current_direction) * c(-1L, 1L)\n    if (turn == \"N\") new_direction &lt;- current_direction\n    \n    return(new_direction)\n}\n\n# initialize new turn vector (first entry is NA as before)\nturn_unit &lt;- c(NA)\n\n# populate the vector: each turn + No turn for length - 1 times\nfor(i in seq_along(length)[-1]) {\n    turn_unit &lt;- c(turn_unit, turn[i], rep(\"N\", times = length[i]-1))\n}\n\n# length vector: NA + unit steps\nlength_unit &lt;- c(NA, rep(1L, times = length(turn_unit) - 1))\n\n\n# REPEAT WHAT'S DONE IN PART ONE\nposition_x &lt;- integer(length = length(turn_unit))\nposition_y &lt;- integer(length = length(turn_unit))\n\ndirection_x &lt;- integer(length = length(turn_unit))\ndirection_y &lt;- integer(length = length(turn_unit))\n\n# initialize position and direction (everything is pre-populated as 0)\n# position_x[1] &lt;- 0\n# position_y[1] &lt;- 0\n# \n# direction_x[1] &lt;- 0\ndirection_y[1] &lt;- 1L\n\n# calculate directions and positions\nfor (i in 2:length(turn_unit)) {\n    # get current x/y-direction\n    current_direction &lt;- c(direction_x[i-1], direction_y[i-1])\n    \n    # calculate new direction\n    new_direction &lt;- change_direction(current_direction, turn_unit[i])\n    \n    # update values\n    direction_x[i] &lt;- new_direction[1]\n    direction_y[i] &lt;- new_direction[2]\n    \n    # get current x/y-position\n    current_position &lt;- c(position_x[i-1], position_y[i-1])\n    \n    # calculate new position\n    new_position &lt;- current_position + new_direction * length_unit[i]\n    \n    # update values\n    position_x[i] &lt;- new_position[1]\n    position_y[i] &lt;- new_position[2]    \n}\n\n# collect all vectors in a table\nmoves_unit &lt;- tibble(turn_unit, length_unit,\n                     direction_x, direction_y,\n                     position_x, position_y) |&gt; \n    mutate(distance = abs(position_x) + abs(position_y))\n\n\n# results\nmoves_unit |&gt; \n    rowid_to_column(\"time\") |&gt; \n    group_by(position_x, position_y, distance) |&gt; \n    summarise(count = n(), second_time = nth(time, 2)) |&gt; \n    filter(count &gt; 1) |&gt; \n    arrange(second_time) |&gt; \n    select(distance) |&gt; \n    head(1) |&gt; \n    pull() |&gt; \n    cat()\n## 111\n\n\n\n\nmoves_unit |&gt; \n    rowid_to_column(\"time\") |&gt; \n    group_by(position_x, position_y, distance) |&gt; \n    summarise(count = n(), second_time = nth(time, 2)) |&gt; \n    filter(count &gt; 1) |&gt; \n    arrange(second_time) |&gt; \n    print(n = 49)\n## # A tibble: 49 Ã— 5\n## # Groups:   position_x, position_y [49]\n##    position_x position_y distance count second_time\n##         &lt;int&gt;      &lt;int&gt;    &lt;int&gt; &lt;int&gt;       &lt;int&gt;\n##  1         12        -99      111     2         554\n##  2        173        -99      272     2         729\n##  3        173       -102      275     2         764\n##  4        173       -101      274     2         765\n##  5        169       -102      271     3         770\n##  6        169       -103      272     2         771\n##  7        169       -104      273     2         772\n##  8        169       -105      274     2         773\n##  9        169       -106      275     2         774\n## 10        170       -102      272     2         787\n## 11        170       -101      271     2         788\n## 12        170        -99      269     2         790\n## 13        170        -97      267     3         792\n## 14        171        -97      268     3         793\n## 15        172        -97      269     2         794\n## 16        173        -97      270     2         795\n## 17        173        -96      269     2         796\n## 18        172        -96      268     2         797\n## 19        171        -96      267     3         798\n## 20        170        -96      266     2         799\n## 21        177        -86      263     2         854\n## 22        178        -86      264     2         855\n## 23        179        -87      266     3         871\n## 24        178        -87      265     3         872\n## 25        178        -88      266     3         873\n## 26        177        -88      265     3         874\n## 27        172        -85      257     2         884\n## 28        172        -82      254     2         891\n## 29        173        -82      255     2         892\n## 30        174        -82      256     2         893\n## 31        175        -83      258     2         895\n## 32        179        -86      265     2         910\n## 33        177        -87      264     2         913\n## 34        175        -88      263     3         916\n## 35        174        -88      262     2         925\n## 36        176        -88      264     2         927\n## 37        179        -88      267     2         930\n## 38        188        -99      287     2         964\n## 39        188        -98      286     2         965\n## 40        188        -97      285     2         966\n## 41        184        -96      280     2         973\n## 42        183        -95      278     2         987\n## 43        184        -95      279     2         988\n## 44        185        -95      280     2         989\n## 45        185        -96      281     2         990\n## 46        186        -96      282     2         991\n## 47        187        -97      284     2         993\n## 48        184        -99      283     2         998\n## 49        182       -100      282     2        1001"
  },
  {
    "objectID": "solutions/2016/01.html#plot",
    "href": "solutions/2016/01.html#plot",
    "title": "Day 1: No Time for a Taxicab",
    "section": "Plot",
    "text": "Plot\n\nmoves |&gt; \n    ggplot(mapping = aes(x = position_x, y = position_y)) + \n    geom_path() +\n    theme_minimal()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome",
    "section": "",
    "text": "This website contains my solutions to programming challenges proposed by Advent of Code"
  },
  {
    "objectID": "solutions/2015/01.html",
    "href": "solutions/2015/01.html",
    "title": "Day 1: Not Quite Lisp",
    "section": "",
    "text": "Reference"
  },
  {
    "objectID": "solutions/2015/01.html#part-one",
    "href": "solutions/2015/01.html#part-one",
    "title": "Day 1: Not Quite Lisp",
    "section": "Part One",
    "text": "Part One\n\nlibrary(tidyverse)\n\ninput &lt;- readLines(con = \"../../inputs/2015/01.txt\")\n\nmoves &lt;- tibble(move     = str_split_1(string = input, pattern = \"\"),\n                number   = case_match(move, \"(\" ~  1, \")\" ~ -1),\n                position = cumsum(number)) |&gt; \n    rowid_to_column(\"time\")\n    \nmoves |&gt; \n    summarize(position = sum(number)) |&gt; \n    pull(position) |&gt; \n    cat()\n## 232"
  },
  {
    "objectID": "solutions/2015/01.html#part-two",
    "href": "solutions/2015/01.html#part-two",
    "title": "Day 1: Not Quite Lisp",
    "section": "Part Two",
    "text": "Part Two\n\nmoves |&gt; \n    filter(position == -1) |&gt; \n    slice(1) |&gt; \n    pull(time) |&gt; \n    cat()\n## 1783"
  },
  {
    "objectID": "solutions/2015/01.html#plot",
    "href": "solutions/2015/01.html#plot",
    "title": "Day 1: Not Quite Lisp",
    "section": "Plot",
    "text": "Plot\n\nmoves |&gt; \n    ggplot(mapping = aes(x = time, y = position)) +\n    geom_point() +\n    theme_minimal()"
  }
]