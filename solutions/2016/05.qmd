---
title: "Day 5: How About a Nice Game of Chess?"
---

[Reference](https://adventofcode.com/2016/day/5)

```{r}
#| label: 2016 - day 5 - load data

library(tidyverse)

input <- "uqwqemis"

# get md5 function from digest package
# when using it remember to set serialize = FALSE
# see help for more details
md5 <- digest::getVDigest(algo = "md5")
```

## `md5()` tests

```{r}
#| label: 2015 - day 4 - md5 function tests

# example 1
md5(paste0("abc", 3231929), serialize = FALSE)

# example 2
md5(paste0("abc", 5017308), serialize = FALSE)

# example 3
md5(paste0("abc", 5278568), serialize = FALSE)
```

## Part One

::: {.panel-tabset}

## Solution

```{r}
#| label: 2016 - day 5 - part 1

# CODE TO CREATE THE FILE "temp/md5_target.csv"
# number of attempts, this is empirically enough
# n <- 1.7e7
# 
# md5_hashes <- tibble(number = 1:n,
#                      string = paste0(input, number),
#                      hash   = map_chr(string, \(x) md5(x, serialize = FALSE)))
# 
# md5_target <- md5_hashes |> 
#     filter(str_sub(hash, start = 1, end = 5) == "00000")
# 
# if(!dir.exists("temp")) dir.create("temp")
# 
# md5_target |> 
#     write_csv(file = "temp/md5_target.csv")

md5_target <- read_csv(file = "temp/md5_target.csv")

md5_target |> 
    mutate(char = str_sub(hash, start = 6, end = 6)) |> 
    summarise(password = str_flatten(char)) |> 
    pull(password) |> 
    cat()
```

## Target Table

```{r}
#| label: 2016 - day 5 - part 1 target table
#| echo: false

md5_target |> 
    mutate(char = str_sub(hash, start = 6, end = 6)) |> 
    rmarkdown::paged_table()
```

:::

## Part Two

::: {.panel-tabset}

## Solution

```{r}
#| label: 2016 - day 5 - part 2

library(arrow)

# CODE TO CREATE THE CSV FILES IN "temp_2016_5_csv"
# number of attempts, this is empirically enough
# n <- 1:3e7 # number of attempts
# n_parts <- 1e2  # number of parts
# parts <- split(n, cut_number(n, n_parts))
# 
# if(!dir.exists("temp_2016_5_csv")) dir.create("temp_2016_5_csv")
# 
# map2(.x = parts,
#      .y = 1:n_parts,
#      .f = \(parts, id) tibble(id = id,
#                                number = parts,
#                                string = paste0(input, number),
#                                hash   = map_chr(string, \(x) md5(x, serialize = FALSE))),
#      .progress = TRUE) |> 
# 
# walk2(.x = _,
#       .y = 1:n_parts,
#       .f = \(data, id) write_csv(data, file = paste0("temp_2016_5_csv/chunk", id, ".csv")),
#       .progress = TRUE)

csvs <- open_dataset("temp_2016_5_csv", format = "csv")

if(!dir.exists("temp_2016_5_parquet")) dir.create("temp_2016_5_parquet")
csvs |> 
    write_dataset(path         = "temp_2016_5_parquet",
                  format       = "parquet",
                  partitioning = "id")

md5_hashes <- open_dataset(sources = "temp_2016_5_parquet",
                           schema  = schema(number = int64(),
                                            string = string(),
                                            hash   = string()))

md5_hashes_filtered <- md5_hashes |> 
    filter(str_sub(hash, start = 1, end = 5) == "00000") |> 
    as_tibble() |> 
    mutate(position = str_sub(hash, start = 6, end = 6),
           char     = str_sub(hash, start = 7, end = 7))

md5_hashes_valid_positions <- md5_hashes_filtered |> 
    filter(position %in% 0:7)

md5_hashes_first_positions <- md5_hashes_valid_positions |> 
    summarise(across(everything(), first), .by = position)

md5_hashes_sorted_positions <- md5_hashes_first_positions |> 
    arrange(position) 

md5_hashes_sorted_positions |> 
    summarise(password = str_flatten(char)) |> 
    pull(password) |> 
    cat()
```

## Filtered Table

```{r}
#| label: 2016 - day 5 - part 2 filtered table
#| echo: false

rmarkdown::paged_table(md5_hashes_filtered)
```

## Valid Positions

```{r}
#| label: 2016 - day 5 - part 2 valid positions
#| echo: false

rmarkdown::paged_table(md5_hashes_valid_positions)
```

## First Positions

```{r}
#| label: 2016 - day 5 - part 2 first positions
#| echo: false

rmarkdown::paged_table(md5_hashes_first_positions)
```

## Sorted Positions

```{r}
#| label: 2016 - day 5 - part 2 sorted positions
#| echo: false

rmarkdown::paged_table(md5_hashes_sorted_positions)
```
:::
